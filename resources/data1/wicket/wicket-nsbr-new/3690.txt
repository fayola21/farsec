Session is invalidated more than once because Session.sessionInvalidated is not reset    org.apache.wicket.Session.detach() invalidates the http session and null-ifies the sessionStore but doesn't reset 'sessionInvalidated' variable and later if a new session store is created (e.g. during commitRequest &#91;1&#93;) then this new session store is again destroyed at the end.1.Thread &#91;qtp1917759555-26&#93; (Suspended (breakpoint at line 80 in RequestAdapter))  PersistentPageManager$PersitentRequestAdapter(RequestAdapter).bind() line: 80  PersistentPageManager$PersitentRequestAdapter.getSessionEntry(boolean) line: 339  PersistentPageManager$PersitentRequestAdapter.storeTouchedPages(List&lt;IManageablePage&gt;) line: 373  PersistentPageManager$PersitentRequestAdapter(RequestAdapter).commitRequest() line: 185  PersistentPageManager(AbstractPageManager).commitRequest() line: 94  PageAccessSynchronizer$1(PageManagerDecorator).commitRequest() line: 68  PageAccessSynchronizer$1.commitRequest() line: 203  Application$2.onDetach(RequestCycle) line: 1522  RequestCycleListenerCollection$3.notify(IRequestCycleListener) line: 100  RequestCycleListenerCollection$3.notify(Object) line: 95  RequestCycleListenerCollection(ListenerCollection&lt;T&gt;).reversedNotify(Iterator&lt;T&gt;  INotifier&lt;T&gt;) line: 121  RequestCycleListenerCollection(ListenerCollection&lt;T&gt;).reversedNotify(INotifier&lt;T&gt;) line: 112  RequestCycleListenerCollection.onDetach(RequestCycle) line: 94  RequestCycle.onDetach() line: 547  RequestCycle.detach() line: 479  RequestCycle.processRequestAndDetach() line: 257  WicketFilter.processRequest(ServletRequest  ServletResponse  FilterChain) line: 138  WicketFilter.doFilter(ServletRequest  ServletResponse  FilterChain) line: 194 ...   