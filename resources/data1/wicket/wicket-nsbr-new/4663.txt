LazyInitProxyFactory uses wrong ClassLoader in OSGi environment    The method LazyInitProxyFactory#createProxy use Thread.currentThread().getContextClassLoader() to create a new proxy instance. It seems that this is not correct in an OSGi environment.Preferred is to use the ClassLoader provided by the AbstractClassResolver class (getClassResolver is not part of IClassResolver). Then it will be something like: ClassLoader classLoader; if (Application.exists()) { AbstractClassResolver classResolver = (AbstractClassResolver) Application.get() .getApplicationSettings() .getClassResolver(); classLoader = classResolver.getClassLoader(); } else { classLoader = Thread.currentThread().getContextClassLoader(); } try { return Proxy.newProxyInstance(classLoader  new Class[] { type  Serializable.class  ILazyInitProxy.class  IWriteReplace.class }  handler); }   