AbstractNumberConverter issue when used with NumberFormat#getCurrencyInstance    Summary of the discussion on users@:There is an issue when using AbstractNumberConverter when #getNumberFormat returns NumberFormat#getCurrencyInstance()I think the problem is due to AbstractNumberConverter#parse(Object  double  double  Locale):if (value instanceof String){ // Convert spaces to no-break space (U+00A0) to fix problems with // browser conversions. // Space is not valid thousands-separator  but no-br space is. value = ((String)value).replace(' '  '/u00A0');}Which replace spaces  so a string like '1 5 ����_�' is invalid while being parsed.public class CurrencyConverter extends AbstractNumberConverter&lt;Double&gt;{ private static final long serialVersionUID = 1L; public CurrencyConverter() { } @Override protected Class&lt;Double&gt; getTargetType() { return Double.class; } @Override public NumberFormat getNumberFormat(Locale locale) { return NumberFormat.getCurrencyInstance(locale); } @Override public Double convertToObject(String value  Locale locale) { locale = Locale.FRANCE; return this.parse(value  Double.MIN_VALUE  Double.MAX_VALUE  locale);// This does work:// final NumberFormat format = this.getNumberFormat(locale);// return this.parse(format  value  locale); }}As Sven indicates  there is (yet another) issue in Java currency formating (space as thousand separator)http://matthiaswessendorf.wordpress.com/2007/12/03/javas-numberformat-bug/http://bugs.sun.com/view_bug.do?bug_id=4510618So will I let you decide whether or not you wish to fix it (the space before the currency symbol).Thanks &amp; best regards Sebastien.   