ReloadingWicketFilter not working with markup inheritance    This is happening for latest snapshot (2007-06-22). Last time I refreshed from Maven was 2007-06-06 when things were working fine.Problem occurs when I use the ReloadingWicketFilter  does not matter if in Wicket development mode or not.My login page is not using markup inheritance  it works fine. But after login success  next page (home page) causes this error:=========2007-06-22 22:46:15 531 &#91;btpool0-6&#93; DEBUG &#91;org.apache.wicket.application.ReloadingClassLoader&#93; - clzLocation=/E:/peter/jtrac-trunk/jtrac/target/jtrac/WEB-INF/classes/info/jtrac/wicket/BasePage.class2007-06-22 22:46:15 562 &#91;btpool0-6&#93; INFO &#91;org.apache.wicket.application.ReloadingClassLoader&#93; - Watching changes of class E:/peter/jtrac-trunk/jtrac/target/jtrac/WEB-INF/classes/info/jtrac/wicket/BasePage.class2007-06-22 22:46:15 562 &#91;btpool0-6&#93; DEBUG &#91;org.apache.wicket.application.ReloadingClassLoader&#93; - clzLocation=/E:/peter/jtrac-trunk/jtrac/target/jtrac/WEB-INF/classes/info/jtrac/wicket/DashboardPage.class2007-06-22 22:46:15 562 &#91;btpool0-6&#93; INFO &#91;org.apache.wicket.application.ReloadingClassLoader&#93; - Watching changes of class E:/peter/jtrac-trunk/jtrac/target/jtrac/WEB-INF/classes/info/jtrac/wicket/DashboardPage.class2007-06-22 22:46:15 562 &#91;btpool0-6&#93; ERROR &#91;org.apache.wicket.RequestCycle&#93; - Markup of type 'html' for component 'info.jtrac.wicket.DashboardPage' not found. Enable debug messages for org.apache.wicket.util.resource to get a list of all filenames tried:&#91;Page class = info.jtrac.wicket.DashboardPage  id = 1  version = 0&#93;org.apache.wicket.markup.MarkupNotFoundException: Markup of type 'html' for component 'info.jtrac.wicket.DashboardPage' not found. Enable debug messages for org.apache.wicket.util.resource to get a list of all filenames tried:&#91;Page class = info.jtrac.wicket.DashboardPage  id = 1  version = 0&#93; at org.apache.wicket.MarkupContainer.getAssociatedMarkupStream(MarkupContainer.java:342) at org.apache.wicket.markup.html.WebPage.onBeforeRender(WebPage.java:363) at org.apache.wicket.Component.beforeRender(Component.java:846) at org.apache.wicket.Page.renderPage(Page.java:885) at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:225)============Root cause:org.apache.wicket.WicketRuntimeException: Parameter clazz must be instance of containerat org.apache.wicket.markup.MarkupCache.getMarkup(MarkupCache.java:244)at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.checkForMarkupInheritance(InheritedMarkupMarkupLoader.java:99)at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.loadMarkup(InheritedMarkupMarkupLoader.java:65)at org.apache.wicket.markup.loader.DefaultMarkupLoader.loadMarkup(DefaultMarkupLoader.java:56)at org.apache.wicket.markup.MarkupCache.loadMarkup(MarkupCache.java:389)at org.apache.wicket.markup.MarkupCache.loadMarkupAndWatchForChanges(MarkupCache.java:462)at org.apache.wicket.markup.MarkupCache.getMarkup(MarkupCache.java:282)at org.apache.wicket.markup.MarkupCache.getMarkupStream(MarkupCache.java:188)at org.apache.wicket.MarkupContainer.getAssociatedMarkupStream(MarkupContainer.java:331)at org.apache.wicket.markup.html.WebPage.onBeforeRender(WebPage.java:363)at org.apache.wicket.Component.beforeRender(Component.java:846)at org.apache.wicket.Page.renderPage(Page.java:885)at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:225)===========Couple of other points  if I now type in the URL of another page which is bookmarkable  that works and from there if I go to the home page things are fine. Looks like now the class + markup gets cached etc.Another thing is if in my extension of ReloadingWicketFilter I exclude the class that is the base page for markup inheritance  things start working but I get a different class conflict error somewhere deep in the navigation and component hierarchy  let me know if you need me to send the lof for this also.If this is of any relevance  I am using a custom AuthorizationStrategy - so that is how the login page comes up in the first place: throw new RestartResponseAtInterceptPageException(LoginPage.class) - and then from Login page I do continueToOriginalDestination() - maybe this has something to do with it?   