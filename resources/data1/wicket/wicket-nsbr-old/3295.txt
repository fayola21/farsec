Please use lists instead of arrays    I'm working with 1.5-M3.In most places  indexed collections are lists. But in a few places they're arrays  which creates awkward integrations for various reasons. The ones that I've noticed are:1. DataTable accepts an IColumn&lt;T&gt;[] as a parameter  which is a pain to construct because it's impossible to create a generic array. Instead one has to create a non-generic array (in other words an IColumn[]) or create a list of IColumn&lt;T&gt; and then convert it to an array. Either approach involves suppressing some warning and is unfriendly to developers who don't grok the ins and outs of using arrays and generics together. If DataTable just accepted List&lt;IColumn&lt;T&gt;&gt;  like DataGridView (which takes List&lt;ICellPopulator&lt;T&gt;&gt;)  then the issue will go away. If DataTable wants to use an array internally  then it can do the conversion itself.2. In the new AbstractMapper and several subclassses  the mount path is represented as a String[]. But this collection has to intergrate with the Url class  which represents the same concept as a List&lt;String&gt;. Why not just use List&lt;String&gt; and make it a little easier for everyone to write AbstractMapper implementations?   