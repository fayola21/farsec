MarkupCache can 'leak' memory    Currently markup cache uses a cache without any capacity upper bound :| normally this would be ok  holding markup of an entire application doesnt require THAT much memory. However  suppose we have Index page with markup Index.html. the page is requested with local en_us and we cache contents of index.html in the cache. now Index is requested with locale en_gb and we cache it AGAIN. Now we have two entries in the cache caching the exact same thing. the more locales users request (we pull the locale from the user's browser) the more copies of the same thing we cache.Thomas Singer reported his application running out of memory  attached memory snapshot contained a MarkupCache instance of over 48MB retained size (the internal map had allocated 4096 keys). He has an application with about 64 pages  and they only support one locale. When I browsed the snapshot I noticed a lot of different locales in the markup cache keys....An ideal solution would be to have two caches. One for &#91;container.class locale style variation&#93;&gt;&#91;resource.name&#93; lookup  and the other for &#91;resource.name&#93;&gt;&#91;resource.contents&#93; lookup.A suboptimal solution would be to place an upper bound on the cache. See attached patch which contains a 1000 item lru cache. if looks ok we can roll it in as a solution for 1.3.2 branch - since it doesnt require any interfaces breakages.   