BaseWicketTester can't find the pageLink field using reflection when you override the PageLink class.    Currently  BaseWicketTester (line 524) does this: public &lt;C extends Page&gt; Result isPageLink(String path  Class&lt;C&gt; expectedPageClass) { PageLink&lt;?&gt; pageLink = (PageLink&lt;?&gt;)getComponentFromLastRenderedPage(path); try { Field iPageLinkField = pageLink.getClass().getDeclaredField('pageLink'); iPageLinkField.setAccessible(true); IPageLink iPageLink = (IPageLink)iPageLinkField.get(pageLink); return isEqual(expectedPageClass  iPageLink.getPageIdentity()); }The problem manifests when you want to customize a page link's onClick by overriding it like this:new PageLink&lt;AuthPage&gt;('pageLink'  AuthPage.class) { private static final long serialVersionUID = 1L; @Override public void onClick() { Foo.bar(); super.onClick(); }});As a result; the BaseWicketTester tries to look for the pageLink field in the anonymous class instead of the privately declared pageLink field in the PageLink class.BaseWicketTester should either go down the tree:for(Class type = pageLink.getClass(); type != Object.class; type = type.getSuperclass())Or a getter should be made for the pageLink field. (This is what Java wants you to do).   