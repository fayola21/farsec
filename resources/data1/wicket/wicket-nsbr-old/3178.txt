Correctness of tests is order dependent  ThreadContext.detach not always called    I have my own build/test env for Wicket and the order in which tests are executed are not necessarily the same as the order that Maven drivesthe tests in the standard test env.If you can manage to run only the testsorg.apache.wicket.request.cycle.RequestCycleListenerTest testBasicOperationsfollowed by test org.apache.wicket.request.mapper.BasicResourceReferenceMapperTest testDecode1the BasicResourceReferenceMapperTest test will fail because itrequires that the ThreadContext have NO application  but theRequestCycleListenerTest does not have a tearDown methodthat calls ThreadContext.detach (nor does it use the BaseWicketTesterwith its tearDown method) so it leaves an application in the ThreadContext.Also  BasicResourceReferenceMapperTest does not use theBaseWicketTester which calls detach in its constructor.The solution is to add the following to BasicResourceReferenceMapperTestprotected void setUp() { org.apache.wicket.ThreadContext.detach(); }In my test env it is simply two lines in a property file to have only the abovetwo tests execute (and in the order specified). Don't know how to do that in Maven.   