PackageRequestTargetUrlCodingStrategy should interrupts the cycle and sends a 404 when a page/class cannot be found.    Using PackageRequestTargetUrlCodingStrategy and manually hacking the url in the browser will throw up a RuntimeException if it cannot load a corresponding page class. Same could happen if the bookmarkable page does not exist anymore  etc... see stacktrace below.The expected behavior is to interrupt the cycle and sends a 404.wicket.WicketRuntimeException: Unable to load class with name: com.mycompany.wicket.pages.xyzw at wicket.application.DefaultClassResolver.resolveClass(DefaultClassResolver.java:70) at wicket.request.target.coding.PackageRequestTargetUrlCodingStrategy.decode(PackageRequestTargetUrlCodingStrategy.java:80) at wicket.protocol.http.request.WebRequestCodingStrategy.targetForRequest(WebRequestCodingStrategy.java:363) at wicket.protocol.http.request.CryptedUrlWebRequestCodingStrategy.targetForRequest(CryptedUrlWebRequestCodingStrategy.java:154) at wicket.request.compound.DefaultRequestTargetResolverStrategy.resolve(DefaultRequestTargetResolverStrategy.java:84) at wicket.request.compound.AbstractCompoundRequestCycleProcessor.resolve(AbstractCompoundRequestCycleProcessor.java:47) at wicket.RequestCycle.step(RequestCycle.java:1008) at wicket.RequestCycle.steps(RequestCycle.java:1100) at wicket.RequestCycle.request(RequestCycle.java:454) at wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:243) at wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:122)   