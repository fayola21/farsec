Improve performance of DefaultJmsKeyFormatStrategy    The current default implementation uses String.replace/replaceAll to escape the illegal characters in the header key. This is unfortunate because replace/replaceAll are implemented in terms of regular expressions which makes the escaping quite costly for something that is executed for every single message. Also it's quite likely that the headers will be identical for every single message that's published via JMS. The attached patch makes two changes; Use Commons Lang StringUtil.replaceEach which using a StringBuilder internally to do the replacement. This adds a dependency on Commons Lang. Cache the output of StringUtil.replaceEach in a ConcurrentHashMap. This could be moved to a separate class if caching every key is a concern. Or this could be changed to use an LRUCache   