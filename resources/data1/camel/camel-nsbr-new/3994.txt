Java DSL - New means to explicitly end try/catch blocks    We are facing a problem with split() in combination with doTry/doCatch().Could you add a method 'endDoTry()' to the ProcessorDefinition? My use case is this: @Override public void configure() throws Exception { from('timer://myTimer?period=10000) .log('begin') .setBody(constant('x y z')) .doTry() .log('processing') .split(body()) .log('split') .end() .endDoTry() // would need some way like this to get back to the TryDefinition .doCatch(Exception.class) .log('Exception') .end(); }I tested this by adding endDoTry() to the ProcessorDefinition  and it works just fine. public TryDefinition endDoTry() { return (TryDefinition) this; }An endDoCatch in the TryDefinition would be great too. Is it possible that these endXXX() methods get added to 2.6.0  not just 2.7.0 or trunk?See also: http://camel.465427.n5.nabble.com/Route-with-choice-and-split-td4375184.html   