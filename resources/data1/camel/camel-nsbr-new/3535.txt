Aggregation fails to call onComplete for exchanges if the aggregation is after a bean or process.    When creating a route that contains an aggregation  if that aggregation is preceded by a bean or process  it will fail to call AggregateOnCompletion.onComplete(). I've attached a unit test that can show you the behavior. Trace level loggging will need to be enabled to see the difference. With the call to the bean  it won't show the following log entry:TRACE org.apache.camel.processor.aggregate.AggregateProcessor - Aggregated exchange onComplete: Exchange[Message: ab]If you remove the bean call  it'll start calling onComplete() again.What I've noticed is that if this call is not made  it ends up in a memory leak since the inProgressCompleteExchanges HashSet in AggregateProcessor never has any exchange ID's removed.   