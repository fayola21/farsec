ObjectHelper.resolveUriPath is broken  can not handle:  '../../' correctly    In my xsl-files I have imports and includes that resides in folders a few levels up.Ex: &lt;xsl:include href='../../common/myfunctions.xsl'/&gt;When camel starts up and tries to resolve the paths it crashes because of the current implementation in ObjectHelper.resolveUriPath(..)Made a simple testcase that demonstrates my problem.public void testResolveUriPath() throws Exception { assertEquals('xslt/'  ObjectHelper.resolveUriPath('xslt/one/../')); // OK assertEquals('xslt/'  ObjectHelper.resolveUriPath('xslt/one/../two/../')); // OK assertEquals('xslt/'  ObjectHelper.resolveUriPath('xslt/')); // OK assertEquals(''  ObjectHelper.resolveUriPath('./')); // OK assertEquals('xslt/'  ObjectHelper.resolveUriPath('xslt/one/two/../../')); // Fails  gives 'xslt/one/.' assertEquals('xslt/'  ObjectHelper.resolveUriPath('xslt/one/two/../.././'));// Fails  gives 'xslt/one/.' }   