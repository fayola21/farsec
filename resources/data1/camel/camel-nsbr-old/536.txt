camel-cxf component not propagating context data    For POJO data formats the CxfProducer currently invokes the following method to invoke on a target serverresult = client.invoke(operation  parameters.toArray());This fails to setup the Request and Response contexts for the out (request) message and in (response) message. It should instead be copying the relevant data from the consumer and invoking the following operation on the Client interfaceObject[] invoke(BindingOperationInfo oi  Object[] params  Map&lt;String  Object&gt; context) throws Exception;Likewise the PAYLOAD and MESSAGE data formats are not setting up their contexts before they call the dispatch operation. In fact there is comments in the current codebase... // invoke the message prepare the context Map&lt;String  Object&gt; context = new HashMap&lt;String  Object&gt;(); Map&lt;String  Object&gt; requestContext = new HashMap&lt;String  Object&gt;(); Map&lt;String  Object&gt; responseContext = new HashMap&lt;String  Object&gt;(); // TODO Get the requestContext from the CamelExchange context.put(CxfClient.REQUEST_CONTEXT  requestContext); context.put(CxfClient.RESPONSE_CONTEXT  responseContext);The fix should also include a fix for all three data format types   