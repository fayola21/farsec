DefaultCamelContext starts route services out of order    org.apache.camel.impl.DefaultCamelContext uses HashMap to hold route servicesIn start() method it uses routeServices.values() to list route services.It does not work for Esper.Camel-extra Esper demo example for Esper  http://code.google.com/p/camel-extra/wiki/EsperDemo  creates 3 routes:1: Route[[From&#91;activemq:EventStreamQueue&#93;] -&gt; [To&#91;esper://feed&#93;]]2: Route[[From&#91;esper://feed?eql=insert into TicksPerSecond select feed  count(*) as cnt from com.iona.ps.demos.MarketDataEvent.win:time_batch(1 sec) group by feed&#93;] -&gt; [To&#91;esper://feed&#93;]]3: Route[[From&#91;esper://feed?eql=select feed  avg(cnt) from TicksPerSecond.win:time(10 sec) group by feed + having cnt &lt; avg(cnt) * 0.75&#93;] -&gt; [To&#91;esper://feed&#93;  process&#91;com.iona.ps.demos.MyRouteBuilder$1@1274069&#93;]]3-rd route depends on 2-nd route  it uses TicksPerSecond event type that gets created in route 2.DefaultCamelContext starts 3-rd route before 2-nd route  as a result Esper fails to resolve event type:com.espertech.esper.epl.expression.ExprValidationException: Failed to resolve event type: Event type or class named 'TicksPerSecond' was not found at com.espertech.esper.epl.spec.FilterStreamSpecRaw.resolveType(FilterStreamSpecRaw.java:189) at com.espertech.esper.epl.spec.FilterStreamSpecRaw.compile(FilterStreamSpecRaw.java:99) at com.espertech.esper.core.StatementLifecycleSvcImpl.compile(StatementLifecycleSvcImpl.java:956) at com.espertech.esper.core.StatementLifecycleSvcImpl.createStopped(StatementLifecycleSvcImpl.java:195) ... As a workaround  it is possible to change startup order by assigning custom ids to routes  so routeServices HashMap would return values in different order. Please  be advise that 3-rd route's From URI: 'esper://feed?eql=select feed  avg(cnt) from TicksPerSecond.win:time(10 sec) group by feed + having cnt &lt; avg(cnt) * 0.75' is modified original From URI from svn:'esper://feed?eql=select feed  avg(cnt) as avgCnt  cnt as feedCnt from TicksPerSecond.win:time(10 sec) group by feed + having cnt &lt; avg(avgCnt) * 0.75' It was done to resolve Esper compiling issue with avgCnt and feedCnt and has no impact on this reported Camel issue .   