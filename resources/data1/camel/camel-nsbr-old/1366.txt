EndpointMessageListener should respect ExchangePattern    In all current releases  org.apache.camel.component.jms.EndpointMessageListener.onMessage() has the following logic (line 90 in 1.6.0 code):// send the replyif (rce == null &amp;&amp; body != null &amp;&amp; !disableReplyTo) { sendReply(replyDestination  message  exchange  body);}This logic should also respect ExchangePattern of the exchange  so I propose a change to:// send the replyif (rce == null &amp;&amp; body != null &amp;&amp; exchange.isOutCapable()) { sendReply(replyDestination  message  exchange  body);}This change allows a processing pattern where the route may change the ExchangePattern using methods like RouteBuilder.inOnly() to switch the MEP at will so that the reply is send at a later time (true asynchronous exchange). This processing pattern is particularly useful for integrating long running services. For example // Java DSLfrom('activemq:my_queue?exchangePattern=InOnly').to('predict_weather://?reply_later=true');// orfrom('activemq:my_queue2').inOnly().to('predict_weather://?reply_later=true');The flaw of the current logic makes it impossible to do true asynchronous exchange  because 1) it does not respect the ExchangePattern; 2) if property 'disableReplyTo' is used  the 'org.apache.camel.jms.replyDestination' property will not be set (see method createExchange in the same file)  thus downstream cannot find the reply destination.The proposed change can also deprecate the disableReplyTo property and put the MEP concept into good use.   