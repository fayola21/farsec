ParallelProcessing and executor flags are ignored in Multicast processor    The parallelProcessing and executor arguments are ignored in the constructor of MulticastProcessor. Here is a call that MulticastType makesorg.apache.camel.model.MulticastType.java return new MulticastProcessor(list  aggregationStrategy  isParallelProcessing()  threadPoolExecutor);MulticastProcessor ignores parallelProcessing and executor arguments and invokes a chain constructor with '.. false  null ..'org.apache.camel.processor.MulticastProcessor.java public MulticastProcessor(Collection&lt;Processor&gt; processors  AggregationStrategy aggregationStrategy  boolean parallelProcessing  ThreadPoolExecutor executor) { this(processors  aggregationStrategy  false  null  false); } public MulticastProcessor(Collection&lt;Processor&gt; processors  AggregationStrategy aggregationStrategy  boolean parallelProcessing  ThreadPoolExecutor executor  boolean streaming) { notNull(processors  'processors'); this.processors = processors; this.aggregationStrategy = aggregationStrategy; this.isParallelProcessing = parallelProcessing; if (isParallelProcessing) { if (executor != null) { this.executor = executor; } else { // setup default Executor this.executor = new ThreadPoolExecutor(processors.size()  processors.size()  0  TimeUnit.MILLISECONDS  new ArrayBlockingQueue&lt;Runnable&gt;(processors.size())); } } this.streaming = streaming; }Attached a patch but have not tested it. Also need a unit test for this.   