camel-cxf component can't deal with the exception message in MESSAGE dataFormat    From: Willem JiangTo: camel-user@activemq.apache.orgSubject: Re: camel-cxf throwing a faultDate: Wed  05 Mar 2008 16:26:41 +0800Reply-To: camel-user@activemq.apache.orgHi Marc It looks like camel-cxf component's issue which can't deal with the exception message in MESSAGE dataFormat.Could you fill a JIRA for it ? I will fix it later this week.As usual  you just need throw the exception from the processor   CXF will try to marshal it into a soap fault.Regards WillemMarc Giger wrote:&gt; Hi &gt;&gt; I'm trying to get the following camel route working where the&gt; dataformat is MESSAGE.&gt;&gt; &lt;from uri='cxf:bean:routerEndpoint?dataFormat=MESSAGE'/&gt; &gt; &lt;process ref='decryptProcessor'/&gt; &gt; &lt;choice&gt;&gt; &lt;when&gt; &gt; &lt;methodCall bean='endpointSelector' method='matches'/&gt;&gt; &lt;to uri='cxf:bean:serviceEndpoint?dataFormat=MESSAGE'/&gt; &gt; &lt;/when&gt;&gt; &lt;otherwise&gt; &gt; &lt;to uri='cxf:bean:localEndpoint?dataFormat=MESSAGE'/&gt; &gt; &lt;/otherwise&gt;&gt; &lt;/choice&gt; &gt;&gt; if the endpointSelector bean returns true the request is redirected to&gt; a remote webservice.&gt; otherwise the request is forwarded to a local cxf service (with&gt; local-transport)&gt;&gt; Now  if I invoke the routerEndpoint and somewhere in the pipeline&gt; happens an exception (in my case in the decryptProcessor)  I get the&gt; following Exception in the outFault chain:&gt;&gt; Mar 4  2008 10:48:35 PM org.apache.cxf.phase.PhaseInterceptorChain&gt; doIntercept INFO: Interceptor has thrown exception  unwinding now&gt; org.apache.cxf.interceptor.Fault&gt; at&gt; org.apache.camel.component.cxf.interceptors.RawMessageContentRedirectInterceptor.handleMessage(RawMessageContentRedirectInterceptor.java:43)&gt; at&gt; org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:208)&gt; at&gt; org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:74)&gt; at&gt; org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:208)&gt; at&gt; org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:77)&gt; at&gt; org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:79)&gt; at&gt; org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:264)&gt; at&gt; org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)&gt; at&gt; org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:170)&gt; at&gt; org.apache.cxf.transport.servlet.AbstractCXFServlet.doPost(AbstractCXFServlet.java:148)&gt; at javax.servlet.http.HttpServlet.service(HttpServlet.java:727) at&gt; javax.servlet.http.HttpServlet.service(HttpServlet.java:820) at&gt; org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)&gt; at&gt; org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)&gt; at&gt; org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)&gt; at&gt; org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)&gt; at&gt; org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)&gt; at&gt; org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)&gt; at&gt; org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)&gt; at&gt; org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)&gt; at&gt; org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)&gt; at org.mortbay.jetty.Server.handle(Server.java:313) at&gt; org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506)&gt; at&gt; org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:844)&gt; at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:644) at&gt; org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211) at&gt; org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381) at&gt; org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396)&gt; at&gt; org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)&gt; Caused by: java.lang.NullPointerException at&gt; org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:1025) at&gt; org.apache.commons.io.IOUtils.copy(IOUtils.java:999) at&gt; org.apache.camel.component.cxf.interceptors.RawMessageContentRedirectInterceptor.handleMessage(RawMessageContentRedirectInterceptor.java:39) ...&gt; 28 more&gt;&gt; This is because the InputStream is null in&gt; RawMessageContentRedirectInterceptor:&gt;&gt; public void handleMessage(Message message) throws Fault {&gt;&gt; InputStream is = message.getContent(InputStream.class);&gt; OutputStream os = message.getContent(OutputStream.class);&gt; &gt; try { &gt; IOUtils.copy(is  os);&gt; is.close();&gt; os.flush();&gt; } catch (Exception e) {&gt; throw new Fault(e);&gt; }&gt; }&gt;&gt; How can I return a custom soap-fault in a processor/filter?&gt;&gt; Thanks &gt;&gt; Marc&gt;&gt;   