Incomplete cleanup of jmx mbeans after context stop    There is a fair amount of cleanup on context stop  but it is incomplete. Most of it has to do with JMX and if one creates and starts a new CamelContext she may end up with managed objects pointing nowhere or have duplicates or other minor side-effects. One of the nasty side effects is that we are pretty much forced to use '&lt;forkMode&gt;pertest&lt;/forkMode&gt;' in our surefire plugin configuration  ensuring a clean slate for every test.For long running apps in which you may have multiple CamelContext running at various times during the lifetime of the application we must properly cleanup when stopping the context. I have a series of patches fixing that which I hope to finish before 2.3. Once we're comfortable and tested with multiple jdk implementations and versions  I'd change the forkMode to 'once'. In my local copy this reduces the test time in core from 40+ mins to under 15 mins. Since interactions between tests is still possible and might lead us on a wild-goose we could add another profile that uses the safer yet time consuming 'pertest' forkMode.   