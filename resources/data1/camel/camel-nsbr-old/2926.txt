Injecting Properties into the PropertiesComponent with Spring    The component is quite nice - however a good improvement would be allowing properties to be injected through Spring.Currently there are two ways to do this using Spring.1) Declare a bean with an id of properties:&lt;bean id='properties' class='org.apache.camel.component.properties.PropertiesComponent'&gt; &lt;property name='location' value='classpath:com/mycompany/myprop.properties'/&gt;&lt;/bean&gt;This would be improved if we could simply say:&lt;bean id='properties' class='org.apache.camel.component.properties.PropertiesComponent'&gt; &lt;property name='location' ref='myPropertiesBean'/&gt;&lt;/bean&gt;This would allow properties to be declared in Spring using &lt;util:properties/&gt;. The same properties grouping could be injected into Camel as is injected into other beans.2) Inline within the camelContext defined in Spring:&lt;camelContext ...&gt; &lt;propertyPlaceholder id='properties' location='com/mycompany/myprop.properties'/&gt;&lt;/camelContext&gt;Similarly it would be nice to say:&lt;camelContext ...&gt; &lt;propertyPlaceholder id='properties' ref='myPropertiesBean' /&gt;&lt;/camelContext&gt;I noticed CAMEL-2791 is out there to access JVM system properties - it would be good to not have to load as a system property to access them in Camel.   