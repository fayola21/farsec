<title>Issue 33445 -   chromium -    STS design questions around probing what sites a user has been to - Project Hosting on Google Code</title> <pre> STS can be a privacy leak/method of tracking users.    Imagine a scenario where you have one website that a user is interacting  with (say an evil advertising empire intent on tracking people for  marketing purposes).    On that SSL/TLS enabled website there are a series of iframes.  Each iframe  leads to different HTTP (not HTTPS servers).  The first iframe (call it  iframe00) is the &quot;check&quot; to see if the user has been to the site before.   It automatically redirects the user to the HTTPS site via 301 redirect.   The fact that the user hit the HTTP site at all means they haven't been  there before which brings us to the first use case:    Use case 1)  If the user has not been to the evil website before (which can  be found out because the user will hit the HTTP version of frame00 before  being redirected to the STS enabled SSL/TLS version of that subdomain)  a  series of iframes will selectively turn STS on and off on each subdomain.   Those subdomains will essentially provide one bit of information.   Collectively that maps to a user profile in the database.  For instance  frame01 = STS  frame02 = HTTP  frame03 = STS  frame04 = STS ... could map  to binary 1011 = decimal 11 or the 11th user to visit the site.  The number  of iframes required is based on the total number of users that the site  believed it would need to track over it's lifetime or 33 iframes total  (which would enable enough bits for the ~1.7bn internet users).    Use case 2)  If the user has been to the site before they will not hit the  HTTP site on frame00 (the &quot;check&quot; website) and they instead are immediately  sent to the STS site  the evil website can begin to calculate who that user  corresponds to.  By setting every frame to the HTTP sites (not STS enabled  SSL/TLS sites) and seeing which ones instead go to the HTTPS site  the evil  site can map those bits back to the corresponding user that the site has  seen before.    It may be argued that STS does not represent any significant privacy risk   because users can disable STS by deleting the setting for all websites that  use the feature in question upon shutdown or whatever mechanisms you  provide to do so periodically.  But in that case the value of STS is  dubious because the user will be erasing the setting where it is actually  valuable to stop a man in the middle SSL/TLS downgrade.  Therefore  I  believe it's a flaw in STS.    -RSnake    P.S. This isn't my actual email address  just my test/garbage account...  feel free to email me directly at h@ckers.org.  Oh  and btw  very clever  idea with the contest.  I'll be curious to see how this goes for you. </pre>