<title>Issue 30937 -   chromium -    Possible to execute script on unpermitted domains using chrome.tabs.executeScript() - Project Hosting on Google Code</title> <pre> (reported from Ken Kania)    There seems to be a problem where after calling tabs.update with a new url    somewhere Chrome thinks that the new url is loaded before it actually is.    This is evident in that chrome.tabs.get reports the tab url with status   'complete' before the event listener tabs.onUpdated is fired with a   'loading' status (by about 100ms).    I think because of this  an extension is able to execute an arbitrary   script in any web page for a limited time window (~100ms).  The trick is to   open any desired url and then update to a url that the extension has   permissions for.  If you call chrome.tabs.executeScript in the 100ms time   interval  Chrome will inject the script into the previous url that the   extension does not have permissions for.    I have attached an extension which requests permissions to www.google.com   and tabs.  If you click on the browser action  the extension loads   file:///C:/  updates the tab to www.google.com  and injects a script into   the tab via executeScript.  The injected script sends the first link on the   page back to the background page via sendRequest.  The background page logs   the result to its console.  Open the bg console and you should see the name   of your first file on C:. </pre>