<title>Issue 23693 -   chromium -    Security: sanitize URLs better before creating desktop shortcuts - Project Hosting on Google Code</title> <pre> On Windows  we currently create desktop shortcuts the following way:    &quot;X:PathTochrome.exe&quot; --app=&lt;URL&gt;    We filter &lt;URL&gt; for 0x20  0x09  0x0a  0x0b  0x0d  etc  but we otherwise let  most other data indiscriminately. One of the characters that is not  filtered is % (e.g.  stray % will not be encoded as %25 or removed). This  permits a shortcut such as:    &quot;X:PathTochrome.exe&quot;  --app=<a href="http://example.com/%some_env_variable%--renderer-path=/something/else/entirely">http://example.com/%some_env_variable%--renderer-path=/something/else/entirely</a>    ...to be created if the user is duped into clicking &quot;Create application  shortcut&quot; on a malicious page.    This syntax will be substituted by Windows prior to launching chrome.exe.  If %some_env_variable% happens to end with a whitespace  things go bad.    To fix: ideally  I would recommend a different syntax  such as:    &quot;X:PathTochrome.exe&quot; --launch-in-app-mode -- <a href="http://example.com/..">http://example.com/..</a>.    This is much more robust (we could still support the --app syntax for  legacy shortcuts).     If we feel it is too late to change the syntax  however  we should at the  very minimum  be more pedantic about escaping here.     I would also recommend escaping characters such as &quot;    etc  as their  effect on Windows shell parsing is unclear to me  I don't think it's  well-documented anywhere  and if they actually legitimately appear in an  URL  the URL will be corrupted.    I did some quick tests on Linux  but don't see an obvious way to break it  there (we escape `  $  &quot;  etc).     </pre>