<title>Issue 31307 -   chromium -    [MD audit] [RPC] More errors deserializing SkBitmaps!! - Project Hosting on Google Code</title> <pre> From Mark:    ---  1. Bitmap Row size Desynchronization    File: chrome/common/common_param_traits.cc  Function: ParamTraits&lt;SkBitmap&gt;::Read()  Problem Type: Logic  Compromise Type: Local Escalation  Severity: Medium    ParamTraits&lt;SkBitmap&gt;::Read() allows a largely unchecked SkBitmap_Data   structure to be used to create an SkBitmap. While the allocPixels()   function protects   from integer overflows  it does so by checking that fHeight * fRowBytes do   not overflow. However  fWidth can be desynchronized from fRowBytes  which   seems to   create problems in the privileged process. For example  when the SkBitmap   is stored in a Thumbnail store (via the ViewHostMsg_Thumbnail message)  the   JPEGCodec encodes the data from the SkBitmap  which does calculations based   on the images fWidth value  not fRowBytes.    2. Bitmap Information Leak    File: chrome/common/common_param_traits.cc  Function: ParamTraits&lt;SkBitmap&gt;::Read()  Problem Type: Information Leak  Compromise Type: Information Leak  Severity: Medium    ParamTraits&lt;SkBitmap&gt;::Read() seems to allow you to allocate an SkBitmap   without supplying enough data to fill it. The data buffer it is copied it   into is   not zero'd out and so if a small amount of variable data is supplied  the   remainder of the buffer will contain random data from the process. I am not   certain   if this data can be read back from the child host  but I suspect it can   from a thumbnail database (or possibly by placing it on a HTML canvas).  --- </pre>