<title>Issue 24071 -   chromium -    Integer overflows in Skia walk_edges function. - Project Hosting on Google Code</title> <pre> /third_party/skia/src/core/SkScan_Path.cpp:walk_edges    I found two integer overflows:      int x = (currE-&gt;fX + SK_Fixed1/2) &gt;&gt; 16;  Here are the definitions for the various elements:    SkFixed fX;    typedef int32_t             SkFixed;    #define SK_Fixed1           (1 &lt;&lt; 16)d; // (0x10000)  If currE-&gt;fX (which is under an attackers controll afaik) is larger than   (MAX_INT - 0x8000)  this will overflow:      newX = currE-&gt;fX + currE-&gt;fDX;  Here are the definitions for the various elements:    SkFixed newX;    SkFixed fX;    SkFixed fDX;    typedef int32_t             SkFixed;  Adding two int32 may yield a result that is too large for an int32  both   values appear to be attacker controlled.    I'm not sure what the impact of these issues is: I found a memory   corruption using a fuzzer and had a look at the functions on the stack    that's how I found these. One of these may be responsible for that memory   corruption but there are other candidates as well. These may only be DoS or   even just cause crappy rendering - I don't know.   </pre>