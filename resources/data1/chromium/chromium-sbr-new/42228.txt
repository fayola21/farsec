<title>Issue 42228 -   chromium -    Security: a malicious page may gain access to context of an extension's content script - Project Hosting on Google Code</title> <pre> If an extension causes DOM event to be fired (e.g. by modifying DOM tree    which is rather common  or explicitly calling dispatchEvent)  the event   listener installed by the main page will be erroneously called in   extension's context. While actual handler code will be executed in context   associated with the JS function (hence in page's world)  JS wrappers for   DOM objects will be retrieved from extension's world. This allows a   malicious page to mess with extension's Object.prototype by following   prototype chain of any DOM object -- e.g. by installing property   getters/setters there. Data sent to/from background page may sometimes be   intercepted and extension's logic altered.    Note that the extent appears to be limited to DOM object prototypes -- the   page handler still runs in page's world  and whatever code it may trick   extension to execute by modifying prototypes  will still be running in   page's context.    Please find an exploit attached  including both sample victim extension and   a malicious page. Install the extension  then load MaliciousPage.html -- a   content of global variable assigned to in the extension is displayed by the   page.   </pre>