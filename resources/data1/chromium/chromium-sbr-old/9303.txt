<title>Issue 9303 -   chromium -    Security: possible use-after-free in OpenTypeUtilities.cpp - Project Hosting on Google Code</title> <pre>   Check out this routine from OpenTypeUtilities.cpp:    177 bool getEOTHeader(SharedBuffer* fontData  Vector&lt;uint8_t  512&gt;&amp;  eotHeader  size_t&amp; overlayDst  size_t&amp; overlaySrc  size_t&amp; overlayLength)  178 {  ...    prefix is now a pointer to eotHeader.data()    186     eotHeader.resize(sizeof(EOTPrefix));  187     EOTPrefix* prefix = reinterpret_cast&lt;EOTPrefix*&gt;(eotHeader.data());  188   ...    Now eotHeader is passed to appendBigEndianStringToEOTHeader()    309     appendBigEndianStringToEOTHeader(eotHeader  familyName   familyNameLength);  310     appendBigEndianStringToEOTHeader(eotHeader  subfamilyName   subfamilyNameLength);  311     appendBigEndianStringToEOTHeader(eotHeader  versionString   versionStringLength);  312   ...    Continue using the prefix pointer received earlier from eotHeader.data():    325     prefix-&gt;eotSize = eotHeader.size() + fontData-&gt;size();  326   ...    But Check out appendBigEndianStringToEOTHeader():    164 static void appendBigEndianStringToEOTHeader(Vector&lt;uint8_t  512&gt;&amp;  eotHeader  const BigEndianUShort* string  unsigned short length)  165 {  166     size_t size = eotHeader.size();  167     eotHeader.resize(size + length + 2 * sizeof(unsigned short));  ...    I'm not an expert on the codebase  but surely this now invalidates any  previous pointer received from .data()  as this must have to realloc() at  some level?    If the backing allocation had to be moved by the system allocator  then  presumably you're now going to be writing to freed memory  that may have  been allocated somewhere else?    I don't have a testcase  this is from purely reading the code.     </pre>