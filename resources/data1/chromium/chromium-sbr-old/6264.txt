<title>Issue 6264 -   chromium -    Security bug: something very wrong with same-origin checks - Project Hosting on Google Code</title> <pre> I noticed that the current release 1.0.154.43 fails our DOM Checker tests  (<a href="http://lcamtuf.coredump.cx/dom_checker/">http://lcamtuf.coredump.cx/dom_checker/</a>)  and tracked it down to this  peculiar behavior:    <a href="http://lcamtuf.coredump.cx/dom_checker/chrome_problem.html">http://lcamtuf.coredump.cx/dom_checker/chrome_problem.html</a>    More specifically  after touching same-origin frames[x].location  further  cross-origin frames[y].location becomes possible too. This includes reads  and writes. The test case is:    &lt;iframe src=&quot;<a href="http://www.example.com/&quot;&gt;&lt;/iframe&gt;&lt;p&gt;">http://www.example.com/&quot;&gt;&lt;/iframe&gt;&lt;p&gt;</a>  &lt;iframe src=&quot;dom_blank_page.html&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;    ...wait for load  then:      tmp = frames[1].location;    frames[0].location.hash = 'cross-domain overwrite';    alert('location.href = ' + frames[0].location.href);    I do not know what causes this and what the impact for other DOM  hierarchies would be  but this is already pretty bad - it permits  information disclosure in a number of applications that temporarily or  permanently store secrets in URLs after redirection  including a good  number of SSO interfaces  etc.    I think we need to track this down  ASAP. Possible follow-up questions:    1) What was the core reason (Webkit merge? something else?)  and how can we  prevent it in the future?    2) DOM Checker was written for Chrome  and I hinted it is a good idea to  integrate it with release QA processes  but this did not happen to date.  Can we incorporate it now  or devise a comparable alternative?    Cheers   /mz </pre>