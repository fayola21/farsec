<title>Issue 10691 -   chromium -    Crash - RtlFreeHandle - Project Hosting on Google Code</title> <pre> This crash was detected in 2.0.172.6 and was seen in 2.0.172.2. It is currently ranked #11 (based on the relative number of reports in the release).  There have been 17 reports from 16 clients. Search query: http://crash/search?query=Chrome+2.0.172.6+RtlFreeHandle ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=86633f5f6f1addec Mini Dump Link: http://crash/file?reportid=86633f5f6f1addec&amp;name=upload_file_minidump  Uptime: 252 sec User Comments: null OS: Windows Vista or Windows Server 2008 Service Pack 1 CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 15 stepping 13 rept: null ptype: browser plat: Win32  ---------------------------- *      Loaded Modules      * ----------------------------     chrome.dll     chrome.exe     kernel32.dll     ntdll.dll     rpcrt4.dll     user32.dll     mswsock.dll  ---------------------------- *        Crash Trace       * ----------------------------       [ntdll.dll+0x000606d5] - RtlFreeHandle       [ntdll.dll+0x0002f675] - RtlpFreeHeap       [ntdll.dll+0x0002f284] - _SEH_epilog4    [kernel32.dll+0x00083620] - HeapFree                 [free.c:109] - free                  [xtree:526] - std::_Tree&amp;lt;std::_Tmap_traits&amp;lt;int FavIconHelper::DownloadRequest std::less&amp;lt;int&amp;gt; std::allocator&amp;lt;std::pair&amp;lt;int const  FavIconHelper::DownloadRequest&amp;gt; &amp;gt; 0&amp;gt; &amp;gt;::~_Tree&amp;lt;std::_Tmap_traits&amp;lt;int FavIconHelper::DownloadRequest std::less&amp;lt;int&amp;gt; std::allocator&amp;lt;std::pair&amp;lt;int const  FavIconHelper::DownloadRequest&amp;gt; &amp;gt; 0&amp;gt; &amp;gt;()        [web_contents.cc:244] - WebContents::~WebContents()      [chrome.dll+0x000de05b] - WebContents::`vector deleting destructor&amp;#39;(unsigned int)        [tab_contents.cc:112] - TabContents::Destroy()        [web_contents.cc:346] - WebContents::Destroy() [navigation_controller.cc:445] - NavigationController::Destroy()     [tab_strip_model.cc:557] - TabStripModel::InternalCloseTabContentsAt(int bool)           [tab_strip.cc:915] - TabStrip::CloseTab(Tab *)                 [tab.cc:243] - Tab::ButtonPressed(views::Button *)               [button.cc:69] - views::Button::NotifyClick(int)       [custom_button.cc:140] - views::CustomButton::OnMouseReleased(views::MouseEvent const &amp;amp; bool)                [view.cc:509] - views::View::ProcessMouseReleased(views::MouseEvent const &amp;amp; bool)           [root_view.cc:428] - views::RootView::OnMouseReleased(views::MouseEvent const &amp;amp; bool)          [widget_win.cc:766] - views::WidgetWin::ProcessMouseReleased(WTL::CPoint const &amp;amp; unsigned int)          [widget_win.cc:527] - views::WidgetWin::OnLButtonUp(unsigned int WTL::CPoint const &amp;amp;)           [widget_win.h:190] - views::WidgetWin::_ProcessWindowMessage(HWND__ * unsigned int unsigned int long long &amp;amp; unsigned long)          [widget_win.cc:999] - views::WidgetWin::WndProc(HWND__ * unsigned int unsigned int long)      [user32.dll+0x00018806] - InternalCallWinProc      [user32.dll+0x00018961] - UserCallWinProcCheckWow      [user32.dll+0x0001c62b] - CallWindowProcAorW      [user32.dll+0x0001c651] - CallWindowProcW        [focus_manager.cc:91] - views::FocusWindowCallback      [user32.dll+0x00018806] - InternalCallWinProc      [user32.dll+0x00018961] - UserCallWinProcCheckWow      [user32.dll+0x00018aac] - DispatchMessageWorker      [user32.dll+0x00018aff] - DispatchMessageW  [accelerator_handler.cc:29] - views::AcceleratorHandler::Dispatch(tagMSG const &amp;amp;)    [message_pump_win.cc:356] - base::MessagePumpForUI::ProcessMessageHelper(tagMSG const &amp;amp;)    [message_pump_win.cc:204] - base::MessagePumpForUI::DoRunLoop()     [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)        [message_loop.cc:192] - MessageLoop::RunInternal()        [message_loop.cc:180] - MessageLoop::RunHandler()        [message_loop.cc:566] - MessageLoopForUI::Run(base::MessagePumpWin::Dispatcher *)        [browser_main.cc:178] - `anonymous namespace&amp;#39;::RunUIMessageLoop(BrowserProcess *)        [browser_main.cc:571] - BrowserMain(MainFunctionParams const &amp;amp;)     [chrome_dll_main.cc:399] - ChromeMain [google_update_client.cc:93] - google_update::GoogleUpdateClient::Launch(HINSTANCE__ * sandbox::SandboxInterfaceInfo * wchar_t * char const * int *)      [chrome_exe_main.cc:67] - wWinMain  </pre>