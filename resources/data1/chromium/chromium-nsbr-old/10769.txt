<title>Issue 10769 -   chromium -    BrowserIdleTimer uses base::Process incorrectly  producing wrong ReduceWorkingSet - Project Hosting on Google Code</title> <pre> See code snippet below.  Since it creates a new base::Process each time it   runs  it never gets a non-zero Process data structure (which normally   tracks some info on the side).    CC'ing Jon for prioritization.    Context:  I think I had concluded that the Process class  ought to be renamed ManagedProcess and used just for this reduce  working set use case  since other users didn't need the  last_working_set stuff and that family of functions require this extra  class state.  Clearly whoever made that construct a base::Process each  time didn't realize how this worked.      class BrowserIdleTimer : public base::IdleTimer {   public:     virtual void OnIdle() {     // We're idle.  Release browser and renderer unused pages.       // Handle the Browser.     base::Process process(GetCurrentProcess());     process.ReduceWorkingSet(); </pre>