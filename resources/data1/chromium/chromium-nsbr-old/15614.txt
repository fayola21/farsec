<title>Issue 15614 -   chromium -    Crash - RtlpInsertFreeBlock - Project Hosting on Google Code</title> <pre> This crash was detected in 3.0.190.1 and appears to be a regression from 3.0.189.0. It is currently ranked #80 (based on the relative number of reports in the release).  There have been 4 reports from 4 clients. Search query: http://crash/search?query=Chrome+3.0.190.1+RtlpInsertFreeBlock ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=29959a06466c0af1 Mini Dump Link: http://crash/file?reportid=29959a06466c0af1&amp;name=upload_file_minidump  Uptime: 9696 sec User Comments: null OS: Windows XP Dodatek Service Pack 3 CPU Architecture: x86 CPU Info: AuthenticAMD family 15 model 75 stepping 2 rept: null ptype: browser plat: Win32 crash type:(EXCEPTION_ACCESS_VIOLATION@0x00000024)  ---------------------------- *        Crash Trace       * ----------------------------      [ntdll.dll+0x000118ea] - RtlpInsertFreeBlock      [ntdll.dll+0x0001a400] - RtlpExtendHeap      [ntdll.dll+0x00011936] - RtlpInsertFreeBlock   [advapi32.dll+0x00007a68] - wcscat   [advapi32.dll+0x0000708a] - RegQueryValueExW    [crypt32.dll+0x00011759] - RegQueryValueExU    [crypt32.dll+0x000116f9] - ILS_ReadBINARYValueFromRegistry(HKEY__ * unsigned short const * unsigned char * * unsigned long *)    [crypt32.dll+0x00011657] - ReadKeyElementFromRegistry(HKEY__ * unsigned short const * const unsigned long unsigned char * * unsigned long *)    [crypt32.dll+0x000100bf] - ReadKeyFromRegistry(HKEY__ * unsigned short const * const void * unsigned long unsigned long)    [crypt32.dll+0x00010088] - OpenKeysFromRegistry(void * HKEY__ * unsigned long)    [crypt32.dll+0x0000ffd5] - OpenFromRegistry(void * HKEY__ * unsigned long)    [crypt32.dll+0x0003fefc] - OpenAllFromRegistryEx(_REG_STORE * void * unsigned long)    [crypt32.dll+0x0000d935] - OpenAllFromRegistry(_REG_STORE * void *)    [crypt32.dll+0x000107cd] - I_CertDllOpenRegStoreProv(char const * unsigned long unsigned long unsigned long void const * void * _CERT_STORE_PROV_INFO *)    [crypt32.dll+0x000109c4] - I_CertDllOpenSystemRegistryStoreProvW(char const * unsigned long unsigned long unsigned long void const * void * _CERT_STORE_PROV_INFO *)    [crypt32.dll+0x000126ce] - CertOpenStore    [crypt32.dll+0x0000fd4e] - OpenPhysicalStoreCallback(void const * unsigned long unsigned short const * _CERT_PHYSICAL_STORE_INFO * void * void *)    [crypt32.dll+0x0000f59d] - OpenSubKey(HKEY__ * unsigned short const * unsigned long)    [crypt32.dll+0x0000f121] - I_CertDllOpenSystemStoreProvW(char const * unsigned long unsigned long unsigned long void const * void * _CERT_STORE_PROV_INFO *)    [crypt32.dll+0x000126ce] - CertOpenStore    [crypt32.dll+0x0000fd4e] - OpenPhysicalStoreCallback(void const * unsigned long unsigned short const * _CERT_PHYSICAL_STORE_INFO * void * void *)    [crypt32.dll+0x0000f59d] - OpenSubKey(HKEY__ * unsigned short const * unsigned long)    [crypt32.dll+0x0000f121] - I_CertDllOpenSystemStoreProvW(char const * unsigned long unsigned long unsigned long void const * void * _CERT_STORE_PROV_INFO *)    [crypt32.dll+0x000126ce] - CertOpenStore    [crypt32.dll+0x0002267c] - CCertChainEngine::CCertChainEngine(_CERT_CHAIN_ENGINE_CONFIG * int int &amp;)    [crypt32.dll+0x0002253d] - InternalCertCreateCertificateChainEngine(_CERT_CHAIN_ENGINE_CONFIG * int void * *)    [crypt32.dll+0x000224e0] - CertCreateCertificateChainEngine    [crypt32.dll+0x00022496] - ReadProtectedRootInfo(HKEY__ *)    [crypt32.dll+0x00013002] - CDefaultChainEngineMgr::GetDefaultEngine(void * void * *)    [crypt32.dll+0x00012fa7] - CertGetCertificateChain [x509_certificate_win.cc:462] - net::X509Certificate::Verify(std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; bool net::CertVerifyResult *)       [cert_verifier.cc:42] - net::CertVerifier::Request::DoVerify()     [worker_pool_win.cc:14] - `anonymous namespace'::WorkItemCallback(void *) [bzip2_error_handler.cc:12] - bz_internal_error      [ntdll.dll+0x00027b02] - RtlpExecuteWorkerRequest      [ntdll.dll+0x00027bc4] - RtlpApcCallout      [ntdll.dll+0x00027b9b] - RtlpExecuteWorkerRequest   [kernel32.dll+0x0000b728] - BaseThreadStart  ---------------------------- *      Loaded Modules      * ----------------------------     pl.dll     default.dll     chrome.dll     gears.dll     icudt38.dll     rlz.dll     chrome.exe     pdfshell.POL     DropboxExt.dll     msvcp71.dll     msvcr71.dll     mkunicode.dll     mmfinfo.dll     MouseHook2.dll     UberIcon.dll     comctl32.dll     advapi32.dll     apphelp.dll     atl.dll     clbcatq.dll     comdlg32.dll     comres.dll     crtdll.dll     crypt32.dll     cscdll.dll     cscui.dll     dnsapi.dll     dssenh.dll     gdi32.dll     hnetcfg.dll     iertutil.dll     imm32.dll     iphlpapi.dll     kernel32.dll     linkinfo.dll     lz32.dll     msasn1.dll     mscms.dll     msctf.dll     msctfime.ime     msv1_0.dll     msvcp60.dll     msvcrt.dll     mswsock.dll     netapi32.dll     normaliz.dll     ntdll.dll     ntmarta.dll     ntshrui.dll     ole32.dll     oleacc.dll     oleaut32.dll     psapi.dll     rasadhlp.dll     rasapi32.dll     rasman.dll     riched20.dll     rpcrt4.dll     rsaenh.dll     rtutils.dll     samlib.dll     schannel.dll     secur32.dll     setupapi.dll     shell32.dll     shlwapi.dll     sxs.dll     t2embed.dll     tapi32.dll     urlmon.dll     user32.dll     userenv.dll     usp10.dll     uxtheme.dll     version.dll     winhttp.dll     wininet.dll     winmm.dll     winspool.drv     wldap32.dll     ws2_32.dll     ws2help.dll     wshtcpip.dll     xpsp2res.dll  </pre>