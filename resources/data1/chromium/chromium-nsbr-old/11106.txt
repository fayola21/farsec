<title>Issue 11106 -   chromium -    Data race between SafeBrowsingService::GetDatabase and SafeBrowsingService::CheckUrl at chrome startup - Project Hosting on Google Code</title> <pre> Chrome Version       : 2.0.178.0 (Developer Build 14724) (Linux)    Reproduce:   1. Install ThreadSanitizer:  <a href="http://code.google.com/p/data-race-test/wiki/ThreadSanitizer">http://code.google.com/p/data-race-test/wiki/ThreadSanitizer</a>    2. Run chrome under ThreadSanitizer:  tsan --pure-happens-before --trace-children=yes --file-prefix-to-cut=/src/  src/sconsbuild/Debug/chrome www.google.com      Report:   ==12773== WARNING: Possible data race during read of size 4 at 0xB53884C: {{{  ==12773==    T11 (locks held: {}):  ==12773==     #0  SafeBrowsingService::CheckUrl(GURL const&amp;   SafeBrowsingService::Client*)  chrome/browser/safe_browsing/safe_browsing_service.cc:177  ==12773==     #1  SafeBrowsingResourceHandler::SafeBrowsingResourceHandler  chrome/browser/renderer_host/safe_browsing_resource_handler.cc:34  ==12773==     #2  ResourceDispatcherHost::BeginRequest(int   ViewHostMsg_Resource_Request const&amp;  IPC::Message*  int)  chrome/browser/renderer_host/resource_dispatcher_host.cc:388  ==12773==     #3  ResourceDispatcherHost::OnRequestResource(IPC::Message  const&amp;  int  ViewHostMsg_Resource_Request const&amp;)  chrome/browser/renderer_host/resource_dispatcher_host.cc:249  ==12773==     #4  bool IPC::MessageWithTuple&lt;Tuple2&lt;int   ViewHostMsg_Resource_Request&gt; &gt;::Dispatch&lt;ResourceDispatcherHost  int   ViewHostMsg_Resource_Request const&amp;&gt;(IPC::Message const*   ResourceDispatcherHost*  void (ResourceDispatcherHost::*)(IPC::Messaï¿½_  ==12773==     #5  ResourceDispatcherHost::OnMessageReceived(IPC::Message  const&amp;  ResourceDispatcherHost::Receiver*  bool*)  chrome/browser/renderer_host/resource_dispatcher_host.cc:231  ==12773==     #6  ResourceMessageFilter::OnMessageReceived(IPC::Message  const&amp;) chrome/browser/renderer_host/resource_message_filter.cc:220  ==12773==     #7  IPC::ChannelProxy::Context::TryFilters(IPC::Message  const&amp;) chrome/common/ipc_channel_proxy.cc:43  ==12773==     #8   IPC::SyncChannel::SyncContext::OnMessageReceived(IPC::Message const&amp;)  chrome/common/ipc_sync_channel.cc:277  ==12773==     #9  IPC::Channel::ChannelImpl::ProcessIncomingMessages()  chrome/common/ipc_channel_posix.cc:522  ==12773==     #10  IPC::Channel::ChannelImpl::OnFileCanReadWithoutBlocking(int)  chrome/common/ipc_channel_posix.cc:701  ==12773==     #11 base::MessagePumpLibevent::OnLibeventNotification(int   short  void*) base/message_pump_libevent.cc:209  ==12773==   Concurrent write(s) happened at (OR AFTER) these points:  ==12773==    T12 (locks held: {}):  ==12773==     #0  SafeBrowsingService::GetDatabase()  chrome/browser/safe_browsing/safe_browsing_service.cc:387  ==12773==     #1  SafeBrowsingService::OnDBInitialize()  chrome/browser/safe_browsing/safe_browsing_service.cc:117  ==12773==     #2  void DispatchToMethod&lt;SafeBrowsingService  void  (SafeBrowsingService::*)()&gt;(SafeBrowsingService*  void  (SafeBrowsingService::*)()  Tuple0 const&amp;) base/tuple.h:383  ==12773==     #3  RunnableMethod&lt;SafeBrowsingService  void  (SafeBrowsingService::*)()  Tuple0&gt;::Run() base/task.h:307  ==12773==     #4  MessageLoop::RunTask(Task*) base/message_loop.cc:308  ==12773==     #5   MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const&amp;)  base/message_loop.cc:316  ==12773==     #6  MessageLoop::DoWork() base/message_loop.cc:416  ==12773==     #7   base::MessagePumpDefault::Run(base::MessagePump::Delegate*)  base/message_pump_default.cc:23  ==12773==     #8  MessageLoop::RunInternal() base/message_loop.cc:197  ==12773==     #9  MessageLoop::RunHandler() base/message_loop.cc:180  ==12773==   Location 0xB53884C is 60 bytes inside a block starting at  0xB538810 of size 132 allocated by T0 from heap:  ==12773==     #0  malloc /tmp/vg/tsan/ts_valgrind_intercepts.c:290  ==12773==     #1  operator new(unsigned int) /usr/lib32/libstdc++.so.6.0.9  ==12773==     #2   ResourceDispatcherHost::ResourceDispatcherHost(MessageLoop*)  chrome/browser/renderer_host/resource_dispatcher_host.cc:156  ==12773==     #3  BrowserProcessImpl::CreateResourceDispatcherHost()  chrome/browser/browser_process_impl.cc:271  ==12773==     #4  BrowserProcessImpl::resource_dispatcher_host()  chrome/browser/browser_process_impl.h:44  ==12773==     #5  BrowserRenderProcessHost::Init()  chrome/browser/renderer_host/browser_render_process_host.cc:203  ==12773==     #6  RenderViewHost::CreateRenderView()  chrome/browser/renderer_host/render_view_host.cc:134  ==12773==     #7   TabContents::CreateRenderViewForRenderManager(RenderViewHost*)  chrome/browser/tab_contents/tab_contents.cc:2391  ==12773==     #8  RenderViewHostManager::Navigate(NavigationEntry const&amp;)  chrome/browser/tab_contents/render_view_host_manager.cc:84  ==12773==     #9  TabContents::NavigateToPendingEntry(bool)  chrome/browser/tab_contents/tab_contents.cc:673  ==12773==     #10 NavigationController::NavigateToPendingEntry(bool)  chrome/browser/tab_contents/navigation_controller.cc:862  ==12773==     #11 NavigationController::LoadEntry(NavigationEntry*)  chrome/browser/tab_contents/navigation_controller.cc:203  ==12773== }}}      Description:   First thread in SafeBrowsingService::GetDatabase() calls  SafeBrowsingDatabase::Create() and assigns the result to  SafeBrowsingService::database_  Second thread in SafeBrowsingService::CheckUrl() check if(database_) and  then reads *database_.   No synchronization is involved.       BTW  is there a unittest on which this situation can be reproduced?  </pre>