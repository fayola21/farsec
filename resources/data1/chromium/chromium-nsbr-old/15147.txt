<title>Issue 15147 -   chromium -    Data race on vector in net/url_request/url_request_job_tracker.cc - Project Hosting on Google Code</title> <pre> Chrome Version       : svn <a href="/p/chromium/source/detail?r=19108">r19108</a>    The data race was detected using ThreadSanitizer (see  <a href="http://code.google.com/p/data-race-test/wiki/ThreadSanitizer">http://code.google.com/p/data-race-test/wiki/ThreadSanitizer</a> )   src$ tsan --pure-happens-before ./sconsbuild/Debug/net_unittests  --gtest_filter=&quot;URLRequestTest.UnexpectedServerAuthTest:ProxyScriptFetcherTest.NoCache&quot;    with the following report:  ==1724== WARNING: Possible data race during read of size 4 at 0x936F6B8: {{{   ==1724==    T5 (locks held: {}):  ==1724==     #0  std::vector&lt;URLRequestJob*  std::allocator&lt;URLRequestJob*&gt;  &gt;::push_back(URLRequestJob* const&amp;)  ==1724==     #1  URLRequestJobTracker::AddNewJob(URLRequestJob*)  net/url_request/url_request_job_tracker.cc:27  ==1724==     #2  URLRequestJob::URLRequestJob(URLRequest*)  net/url_request/url_request_job.cc:44  ==1724==     #3  URLRequestHttpJob::URLRequestHttpJob(URLRequest*)  net/url_request/url_request_http_job.cc:77  ==1724==     #4  URLRequestHttpJob::Factory(URLRequest*  std::string  const&amp;) net/url_request/url_request_http_job.cc:59  ==1724==     #5  URLRequestJobManager::CreateJob(URLRequest*) const  net/url_request/url_request_job_manager.cc:95  ==1724==     #6  URLRequest::Start() net/url_request/url_request.cc:241  ==1724==     #7  HTTPTestServer::StartGETRequest(GURL const&amp;   URLRequest::Delegate*) net/url_request/url_request_unittest.h:405  ==1724==     #8  void DispatchToFunction&lt;void (*)(GURL const&amp;   URLRequest::Delegate*)  GURL  BaseTestServer::SyncTestDelegate*&gt;(void  (*)(GURL const&amp;  URLRequest::Delegate*)  Tuple2&lt;GURL   BaseTestServer::SyncTestDelegate*&gt; const&amp;) base/tuple.h:483  ==1724==     #9  RunnableFunction&lt;void (*)(GURL const&amp;   URLRequest::Delegate*)  Tuple2&lt;GURL  BaseTestServer::SyncTestDelegate*&gt;  &gt;::Run() base/task.h:415  ==1724==     #10 MessageLoop::RunTask(Task*) base/message_loop.cc:309  ==1724==     #11  MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const&amp;)  base/message_loop.cc:317  ==1724==   Concurrent write(s) happened at (OR AFTER) these points:  ==1724==    T4 (locks held: {}):  ==1724==     #0  std::vector&lt;URLRequestJob*  std::allocator&lt;URLRequestJob*&gt;  &gt;::erase(__gnu_cxx::__normal_iterator&lt;URLRequestJob**   std::vector&lt;URLRequestJob*  std::allocator&lt;URLRequestJob*&gt; &gt; &gt;)  ==1724==     #1  URLRequestJobTracker::RemoveJob(URLRequestJob*)  net/url_request/url_request_job_tracker.cc:40  ==1724==     #2  URLRequestJob::~URLRequestJob()  net/url_request/url_request_job.cc:48  ==1724==     #3  URLRequestHttpJob::~URLRequestHttpJob()  net/url_request/url_request_http_job.cc:106  ==1724==     #4  base::RefCountedThreadSafe&lt;URLRequestJob&gt;::Release()  base/ref_counted.h:107  ==1724==     #5   RunnableMethodTraits&lt;URLRequestJob&gt;::ReleaseCallee(URLRequestJob*)  base/task.h:263  ==1724==     #6  RunnableMethod&lt;URLRequestJob  void (URLRequestJob::*)()   Tuple0&gt;::ReleaseCallee() base/task.h:317  ==1724==     #7  RunnableMethod&lt;URLRequestJob  void (URLRequestJob::*)()   Tuple0&gt;::~RunnableMethod() base/task.h:302  ==1724==     #8  MessageLoop::RunTask(Task*) base/message_loop.cc:310  ==1724==     #9   MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const&amp;)  base/message_loop.cc:317  ==1724==   Address 0x936F6B8 is 24 bytes inside data symbol  &quot;g_url_request_job_tracker&quot;  ==1724== }}}     The race can be proved using RaceChecker class (see  <a href="http://code.google.com/p/data-race-test/wiki/RaceCheckerClass">http://code.google.com/p/data-race-test/wiki/RaceCheckerClass</a> )      1. Apply the attached patch (adds RaceChecker class files into base/...   adds dependencies for these files and puts RaceChecker calls into  net/url_request/url_request_job_tracker.cc)  2. gclient sync &amp;&amp; hammer net_unittests  3. RACECHECKER=2 RACECHECKER_SLEEP_MS=100 ./sconsbuild/Debug/net_unittests  --gtest_filter=&quot;URLRequestTest.UnexpectedServerAuthTest:ProxyScriptFetcherTest.NoCache&quot;  (Please note that two tests must be executed)      These two tests must pass      RaceChecker proves the data race:  Race found between these points  === writer:   ./sconsbuild/Debug/net_unittests(_ZN20URLRequestJobTracker9RemoveJobEP13URLRequestJob+0x27)[0x86454ef]  ./sconsbuild/Debug/net_unittests(_ZN13URLRequestJobD2Ev+0x23)[0x86412b9]  ./sconsbuild/Debug/net_unittests(_ZN17URLRequestHttpJobD0Ev+0x1cd)[0x8651b0d]  ./sconsbuild/Debug/net_unittests(_ZN4base20RefCountedThreadSafeI13URLRequestJobE7ReleaseEv+0x35)[0x863c041]  ./sconsbuild/Debug/net_unittests(_ZN20RunnableMethodTraitsI13URLRequestJobE13ReleaseCalleeEPS0_+0x14)[0x86422ea]  ./sconsbuild/Debug/net_unittests(_ZN14RunnableMethodI13URLRequestJobMS0_FvvE6Tuple0E13ReleaseCalleeEv+0x1e)[0x864230a]  ./sconsbuild/Debug/net_unittests(_ZN14RunnableMethodI13URLRequestJobMS0_FvvE6Tuple0ED0Ev+0x1b)[0x8642345]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop7RunTaskEP4Task+0xe6)[0x8671a20]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop21DeferOrRunPendingTaskERKNS_11PendingTaskE+0x35)[0x8671f23]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop6DoWorkEv+0xfb)[0x86722cf]  ./sconsbuild/Debug/net_unittests(_ZN4base19MessagePumpLibevent3RunEPNS_11MessagePump8DelegateE+0xda)[0x867c084]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop11RunInternalEv+0xc7)[0x8672871]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop10RunHandlerEv+0x11)[0x867288b]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop3RunEv+0x23)[0x86728ef]  ./sconsbuild/Debug/net_unittests(_ZN4base6Thread10ThreadMainEv+0xca)[0x86a8340]  ./sconsbuild/Debug/net_unittests[0x868964e]  /lib32/libpthread.so.0[0xf779d4fb]  /lib32/libc.so.6(clone+0x5e)[0xf75cf09e]  === writer:   ./sconsbuild/Debug/net_unittests(_ZN20URLRequestJobTracker9AddNewJobEP13URLRequestJob+0x23)[0x86456b7]  ./sconsbuild/Debug/net_unittests(_ZN13URLRequestJobC2EP10URLRequest+0x1c5)[0x86416a3]  ./sconsbuild/Debug/net_unittests(_ZN17URLRequestHttpJobC1EP10URLRequest+0x19)[0x8651f17]  ./sconsbuild/Debug/net_unittests(_ZN17URLRequestHttpJob7FactoryEP10URLRequestRKSs+0x3a7)[0x865257d]  ./sconsbuild/Debug/net_unittests(_ZNK20URLRequestJobManager9CreateJobEP10URLRequest+0x2d7)[0x864337f]  ./sconsbuild/Debug/net_unittests(_ZN10URLRequest5StartEv+0x1c)[0x863a394]  ./sconsbuild/Debug/net_unittests(_ZN14HTTPTestServer15StartGETRequestERK4GURLPN10URLRequest8DelegateE+0xad)[0x85454fd]  ./sconsbuild/Debug/net_unittests(_Z18DispatchToFunctionIPFvRK4GURLPN10URLRequest8DelegateEES0_PN14BaseTestServer16SyncTestDelegateEEvT_RK6Tuple2IT0_T1_E+0x1b)[0x854291f]  ./sconsbuild/Debug/net_unittests(_ZN16RunnableFunctionIPFvRK4GURLPN10URLRequest8DelegateEE6Tuple2IS0_PN14BaseTestServer16SyncTestDelegateEEE3RunEv+0x28)[0x854294a]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop7RunTaskEP4Task+0xce)[0x8671a08]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop21DeferOrRunPendingTaskERKNS_11PendingTaskE+0x35)[0x8671f23]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop6DoWorkEv+0xfb)[0x86722cf]  ./sconsbuild/Debug/net_unittests(_ZN4base19MessagePumpLibevent3RunEPNS_11MessagePump8DelegateE+0xda)[0x867c084]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop11RunInternalEv+0xc7)[0x8672871]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop10RunHandlerEv+0x11)[0x867288b]  ./sconsbuild/Debug/net_unittests(_ZN11MessageLoop3RunEv+0x23)[0x86728ef]  ./sconsbuild/Debug/net_unittests(_ZN4base6Thread10ThreadMainEv+0xca)[0x86a8340]  ./sconsbuild/Debug/net_unittests[0x868964e] </pre>