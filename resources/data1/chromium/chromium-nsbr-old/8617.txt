<title>Issue 8617 -   chromium -    Signed or unsigned status of NPVariant intValues is unclear; -0x80000000 fails test - Project Hosting on Google Code</title> <pre> ---------- Forwarded message ----------  From: Hanne E. Larsen &lt;hela@opera.com&gt;  Date: Mon  Mar 9  2009 at 5:25 PM  Subject: Specification of NPVariant's intValue  To: &quot;plugin-futures@mozilla.org&quot; &lt;plugin-futures@mozilla.org&gt;      Hi   we have encountered a problem in Opera's implementation of NPVariant's   intValue  which we would like to share with you. NPVariant defines intValue   as int32_t.    BTW <a href="https://developer.mozilla.org/en/NPVariant">https://developer.mozilla.org/en/NPVariant</a> specifies intValue as   uint32_t. This is wrong and should be corrected   see <a href="https://mail.mozilla.org/private/plugin-futures/2008-March/000519.html">https://mail.mozilla.org/private/plugin-futures/2008-March/000519.html</a>    When a script results in an integer value which is either too small or too   big to fit into int32_t  it's our interpretation that it should be   represented as doubleValue. Please comment if you disagree.    Flash testcase is available here:  <a href="http://people.opera.com/olak/flash/values.html">http://people.opera.com/olak/flash/values.html</a>  Note that for instance Google Chrome fails in the representation of a large   negative value (-2147483648).    If our interpretation of NPVariant's intValue representation is correct  it   would be appreciated if this clarification was added to   <a href="https://developer.mozilla.org/en/NPVariant">https://developer.mozilla.org/en/NPVariant</a>    Thanks   Hanne  --   Hanne E. Larsen  Opera Software  -----------------------------    A very brief glance at NPVariant in third_party/npapi/bindings/npruntime.h   makes me think we are using int32_t  not uint32_t. So I don't know why   -2147483648 (negative 0x80000000) is failing their test. (Nor exactly what   that test is doing.) But here's a bug to make sure we don't ignore the   question entirely. </pre>