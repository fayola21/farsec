<title>Issue 3599 -   chromium -    ConditionVariableTest.MultiThreadConsumerTest - Project Hosting on Google Code</title> <pre> In <a href="/p/chromium/source/detail?r=3624">r3624</a>  I disabled ConditionVariableTest.MultiThreadConsumerTest in  base/condition_variable_unittest.cc because it was way too timing-sensitive  and was causing problems on our Mac debug buildbot now that we've moved it  to a virtual machine.    I found two types of problems here: one is the &quot;spurious timeout&quot; problem  and another is a more classic type of race.    With the spurious timeouts  I found pthread_cond_timedwait was returning  ETIMEDOUT before the timeout time had actually arrived.  This can be fixed  by putting pthread_cond_timedwait into a loop that's allowed to continue  when this case occurs.  (Note that it's unclear whether  pthread_cond_timedwait should be doing this: I've only seen it happen  inside the virtual machine  and the spec  which allows for spurious  wakeups  doesn't discuss spurious timeouts.)    The more serious problem  and what was causing most test failures  is  related to races.  Even in the absence of spurious timeouts  the main  thread was basically asking some other thread to wait for some period of  time; the main thread would then expect that after some larger period of  time that some work was done.  This isn't necessarily a valid assumption   and we wound up hitting lots of races. </pre>