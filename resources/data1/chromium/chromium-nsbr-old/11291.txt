<title>Issue 11291 -   chromium -    better beforeunload/unload handling - Project Hosting on Google Code</title> <pre> Here's a thought for an alternative handling of beforeunload/unload that  makes the common case a better user experience at the expense of the  uncommon case. I'm happy to implement this if others think it's not too crazy.    When the user closes a tab  even if it has unload handlers that it needs to  fire  we synchronously remove it from the tabstrip and then fire it's  unload handlers. In practice  a ton of web pages have unload handlers  but  very rarely do they actually require user interaction. In the case where it  does require user-interaction  then we can pop the tab back into the tab  strip and show the user the appropriate alert.    The only cases I can think of that require user interaction are if the  beforeunload handler returns a string  or if the unload/beforeunload  handlers call prompt/alert/confirm.    A weird case is if the tab is the last tab in the window  or if the user is  closing an entire window. I'm not really sure what to do about that. One  options is to keep from hiding the browser window until all the unload  handlers have fired.    One thing I like about this is that it would simplify the Browser/TabStrip  closing code a lot. We wouldn't need to keep all this state around as to  whether tabs have fired their unload handlers. The TabContents itself could  manage it. Similar to how tabs that are being dragged between two windows  don't keep state in either window.    What do you think? </pre>