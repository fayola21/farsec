<title>Issue 23058 -   chromium -    Opening child window leaks entire DOM tree and DOMWindow of child - Project Hosting on Google Code</title> <pre> A page that use JavaScript in any way has its WebCore::Document and WebCore::DOMWindow   objects  plus the entire DOM node tree  left in memory even after its tab is closed. They appear to   persist until the process exits.    This doesn't happen to _every_ page; it seems to be the first page loaded in a given tab. (Tab    not renderer: if a process opens two tabs  a document in each tab can leak. This can cause a   renderer process to build up lots and lots of leakage if it opens up many child windows  as the   membuster test does.)      1. Download &amp; open attached JSDocLeak.html.  2. Click the &quot;Trivial JS Link&quot; link  which 'opens' the URL &lt;javascript:3+4&gt;.  3. Quit Chrome    On exit Chrome will log:      LEAK: 44 WebCoreNode      LEAK: 1 Document  Forcing a full GC (by clicking the &quot;Garbage collect&quot; link  which calls gc()  one or more times)   doesn't help.    If you use the other links on the page to open a second instance of JSDocLeak in a new tab  you   can get both documents to leak. But if you open the second instance in the same tab  only the   first one leaks. </pre>