<title>Issue 21949 -   chromium -    mac valgrind unstable on the ui tests  particularly on DownloadTest.* - Project Hosting on Google Code</title> <pre> We don't understand why mac valgrind is so unstable on the ui tests.  It gets lots of internal errors and frequently hangs  either before the ui tests are done  or during memory leak  checking after the tests are done.  Best guess is that we have a heap corruption bug in chrome that  makes valgrind itself fall over.    To try to get a majority of runs to not hang  we've been  empirically noticing which tests hang a lot on the mac   and adding them to chrome/test/data/valgrind/ui_tests.gtest.txt   (really should be ui_tests.gtest_mac.txt).    Scraping the waterfall with scripts like    i=1160  while test $i -gt 1050  do    wget -O $i.txt  &quot;<a href="http://build.chromium.org/buildbot/waterfall.fyi/builders/Mac%20UI%201%20of%203%20(valgrind)/builds/$i/steps/valgrind%20test:%20ui/logs/stdio">http://build.chromium.org/buildbot/waterfall.fyi/builders/Mac%20UI%201%20of%203%20(valgrind)/builds/$i/steps/valgrind%20test:%20ui/logs/stdio</a>&quot;    i=`expr $i - 1`    sleep 1  done  rm `grep -l DISABLED *.txt`  cat *.txt | grep -C 12 impossible | grep RUN | sort | uniq -c | sort -n    to find tests that probably crashed or hung under valgrind due  to a valgrind internal error found the following tests 8 or more times   and together probably caused about 20% of runs to hang or crash:    BrowserTest.OtherRedirectsDontForkProcess  DownloadTest.ContentDisposition  DownloadTest.DownloadMimeType  DownloadTest.IncognitoDownload  DownloadTest.NoDownload  DownloadTest.PerWindowShelf    I'm going to disable those tests under mac valgrind for now;  we should try reenabling them once we have all our memory write  errors and heap corruption bugs nailed.  (And if they still persist  then  we might want to ask Julian Seward for help.)    (See also <a title="ErrorPageTest.DNSError_GoBack2* flakily hangs under valgrind" class=closed_ref href="/p/chromium/issues/detail?id=18798"> bug 18798 </a>  which is similar but not mac specific.)   </pre>