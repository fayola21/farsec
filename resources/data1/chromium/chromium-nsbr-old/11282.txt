<title>Issue 11282 -   chromium -    UMR errors in SQLite in history::HistoryBackend::Init() on mac - Project Hosting on Google Code</title> <pre> This was found with    export GTEST_TOTAL_SHARDS=200  export GTEST_SHARD_INDEX=9  sh tools/valgrind/chrome_tests.sh -t unit    and is probably in HistoryContentsProviderTest.Bookmarks    Invalid read of size 4     at findElementGivenHash (hash.c:272)     by sqlite3HashFindElem (hash.c:332)     by sqlite3HashFind (hash.c:342)     by sqlite3FindTable (build.c:282)     by sqlite3LocateTable (build.c:312)     by sqlite3SrcListLookup (delete.c:29)     by sqlite3Insert (insert.c:417)     by yy_reduce (parse.y:597)     by sqlite3Parser (parse.c:3449)     by sqlite3RunParser (tokenize.c:441)     by sqlite3NestedParse (build.c:254)     by sqlite3CreateIndex (build.c:2713)     by yy_reduce (parse.y:880)     by sqlite3Parser (parse.c:3449)     by sqlite3RunParser (tokenize.c:453)     by sqlite3Prepare (prepare.c:581)     by sqlite3LockAndPrepare (prepare.c:662)     by sqlite3_prepare (prepare.c:718)     by sqlite3_exec (legacy.c:57)     by history::URLDatabase::InitKeywordSearchTermsTable() (url_database.cc:313)     by history::ArchivedDatabase::Init(FilePath const&amp;) (archived_database.cc:57)     by history::HistoryBackend::InitImpl() (history_backend.cc:546)     by history::HistoryBackend::Init() (history_backend.cc:213)     Address 0xc4c00f8 is 24 bytes inside a block of size 32 alloc'd     at malloc (vg_replace_malloc.c:193)     by sqlite3MemMalloc (mem1.c:43)     by mallocWithAlarm (malloc.c:228)     by sqlite3Malloc (malloc.c:251)     by sqlite3HashInsert (hash.c:390)     by sqlite3EndTable (build.c:1607)     by yy_reduce (parse.y:139)     by sqlite3Parser (parse.c:3449)     by sqlite3RunParser (tokenize.c:453)     by sqlite3Prepare (prepare.c:581)     by sqlite3LockAndPrepare (prepare.c:662)     by sqlite3_prepare (prepare.c:718)     by sqlite3_exec (legacy.c:57)     by sqlite3InitCallback (prepare.c:88)     by sqlite3_exec (legacy.c:103)     by sqlite3VdbeExec (vdbe.c:4143)     by sqlite3Step (vdbeapi.c:476)     by sqlite3_step (vdbeapi.c:540)     by sqlite3_exec (legacy.c:73)     by MetaTableHelper::Init(std::string const&amp;  int  int  sqlite3*) (meta_table_helper.cc:39)     by history::ArchivedDatabase::Init(FilePath const&amp;) (archived_database.cc:52)     by history::HistoryBackend::InitImpl() (history_backend.cc:546)     by history::HistoryBackend::Init() (history_backend.cc:213)    followed by the scary looking valgrind internal warning  schedule VG_(sema_down): read returned -4    The test then terminated abruptly.    Two related errors were found in another run  in  BookmarkModelTestWithProfile.CreateAndRestore:    Syscall param write(buf) points to unaddressable byte(s)     at write$UNIX2003 (in /usr/lib/libSystem.B.dylib)     by unixWrite (os_unix.c:923)     by sqlite3OsWrite (os.c:69)     by pager_write_pagelist (pager.c:3095)     by sqlite3PagerCommitPhaseOne (pager.c:4805)     by sqlite3BtreeCommitPhaseOne (btree.c:2476)     by vdbeCommit (vdbeaux.c:1269)     by sqlite3VdbeHalt (vdbeaux.c:1591)     by sqlite3VdbeExec (vdbe.c:2425)     by sqlite3Step (vdbeapi.c:476)     by sqlite3_step (vdbeapi.c:540)     by sqlite3_exec (legacy.c:73)     by history::ArchivedDatabase::CommitTransaction() (archived_database.cc:86)     by history::ArchivedDatabase::Init(FilePath const&amp;) (archived_database.cc:68)     by history::HistoryBackend::InitImpl() (history_backend.cc:546)     by history::HistoryBackend::Init() (history_backend.cc:213)   Address 0xc4c0528 is 8 bytes inside a block of size 4 104 alloc'd     at malloc (vg_replace_malloc.c:193)     by sqlite3MemMalloc (mem1.c:43)     by mallocWithAlarm (malloc.c:228)     by sqlite3PageMalloc (malloc.c:414)     by pagerAllocatePage (pager.c:3682)     by sqlite3PagerAcquire2 (pager.c:3831)     by pagerAcquire (pager.c:3780)     by sqlite3PagerAcquire (pager.c:3918)     by sqlite3BtreeGetPage (btree.c:1082)     by allocateBtreePage (btree.c:4248)     by btreeCreateTable (btree.c:6145)     by sqlite3BtreeCreateTable (btree.c:6159)     by sqlite3VdbeExec (vdbe.c:4101)     by sqlite3Step (vdbeapi.c:476)     by sqlite3_step (vdbeapi.c:540)     by sqlite3_exec (legacy.c:73)     by MetaTableHelper::Init(std::string const&amp;  int  int  sqlite3*) (meta_table_helper.cc:39)     by history::ArchivedDatabase::Init(FilePath const&amp;) (archived_database.cc:52)     by history::HistoryBackend::InitImpl() (history_backend.cc:546)     by history::HistoryBackend::Init() (history_backend.cc:213)    followed immediately by    Invalid read of size 4     at sqlite3MemSize (mem1.c:99)     by sqlite3MallocSize (malloc.c:478)     by sqlite3PageFree (malloc.c:432)     by pager_truncate_cache (pager.c:2673)     by pager_truncate (pager.c:1776)     by pager_playback (pager.c:1936)     by sqlite3PagerRollback (pager.c:4975)     by sqlite3BtreeRollback (btree.c:2646)     by sqlite3RollbackAll (main.c:582)     by sqlite3VdbeHalt (vdbeaux.c:1597)     by sqlite3VdbeExec (vdbe.c:2425)     by sqlite3Step (vdbeapi.c:476)     by sqlite3_step (vdbeapi.c:540)     by sqlite3_exec (legacy.c:73)     by history::ArchivedDatabase::CommitTransaction() (archived_database.cc:86)     by history::ArchivedDatabase::Init(FilePath const&amp;) (archived_database.cc:68)     by history::HistoryBackend::InitImpl() (history_backend.cc:546)     by history::HistoryBackend::Init() (history_backend.cc:213)   Address 0xc4c0524 is 4 bytes inside a block of size 4 104 alloc'd     at malloc (vg_replace_malloc.c:193)     by sqlite3MemMalloc (mem1.c:43)     by mallocWithAlarm (malloc.c:228)     by sqlite3PageMalloc (malloc.c:414)     by pagerAllocatePage (pager.c:3682)     by sqlite3PagerAcquire2 (pager.c:3831)     by pagerAcquire (pager.c:3780)     by sqlite3PagerAcquire (pager.c:3918)     by sqlite3BtreeGetPage (btree.c:1082)     by allocateBtreePage (btree.c:4248)     by btreeCreateTable (btree.c:6145)     by sqlite3BtreeCreateTable (btree.c:6159)     by sqlite3VdbeExec (vdbe.c:4101)     by sqlite3Step (vdbeapi.c:476)     by sqlite3_step (vdbeapi.c:540)     by sqlite3_exec (legacy.c:73)     by MetaTableHelper::Init(std::string const&amp;  int  int  sqlite3*) (meta_table_helper.cc:39)     by history::ArchivedDatabase::Init(FilePath const&amp;) (archived_database.cc:52)     by history::HistoryBackend::InitImpl() (history_backend.cc:546)     by history::HistoryBackend::Init() (history_backend.cc:213)    and the scary  schedule VG_(sema_down): read returned -4  and abrupt termination once again.   </pre>