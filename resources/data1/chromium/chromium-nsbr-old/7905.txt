<title>Issue 7905 -   chromium -    Crash - WebCore::ReportFatalErrorInV8 - Project Hosting on Google Code</title> <pre> This crash was detected in 2.0.164.0 and was seen in 2.0.162.0. Search query: http://crash/search?query=Chrome+2.0.164.0+WebCore%3A%3AReportFatalErrorInV8 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=1de09bf6aad2ea75 Mini Dump Link: http://crash/file?reportid=1de09bf6aad2ea75&amp;name=upload_file_minidump  Uptime: 351 sec User Comments: null OS: Windows Vista or Windows Server 2008 Service Pack 1 CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 23 stepping 6 rept: null ptype: renderer plat: Win32  ---------------------------- *      Loaded Modules      * ----------------------------     chrome.dll     chrome.exe     kernel32.dll     ntdll.dll  ---------------------------- *        Crash Trace       * ----------------------------          [v8_proxy.cpp:1088] - WebCore::ReportFatalErrorInV8                 [api.cc:120] - v8::internal::V8::FatalProcessOutOfMemory(char const *)             [handles.cc:191] - v8::internal::FlattenString(v8::internal::Handle&amp;lt;v8::internal::String&amp;gt;)            [runtime.cc:1462] - v8::internal::Runtime::StringMatch(v8::internal::Handle&amp;lt;v8::internal::String&amp;gt; v8::internal::Handle&amp;lt;v8::internal::String&amp;gt; int)            [runtime.cc:1527] - v8::internal::Runtime_StringIndexOf            [execution.cc:90] - v8::internal::Invoke           [execution.cc:116] - v8::internal::Execution::Call(v8::internal::Handle&amp;lt;v8::internal::JSFunction&amp;gt; v8::internal::Handle&amp;lt;v8::internal::Object&amp;gt; int v8::internal::Object * * * bool *)                [api.cc:1939] - v8::Function::Call(v8::Handle&amp;lt;v8::Object&amp;gt; int v8::Handle&amp;lt;v8::Value&amp;gt; * const)          [v8_proxy.cpp:1459] - WebCore::V8Proxy::CallFunction(v8::Handle&amp;lt;v8::Function&amp;gt; v8::Handle&amp;lt;v8::Object&amp;gt; int v8::Handle&amp;lt;v8::Value&amp;gt; * const)          [v8_events.cpp:384] - WebCore::V8LazyEventListener::CallListenerFunction(v8::Handle&amp;lt;v8::Value&amp;gt; WebCore::Event * bool)          [v8_events.cpp:111] - WebCore::V8AbstractEventListener::handleEvent(WebCore::Event * bool)              [node.cpp:2282] - WebCore::Node::handleLocalEvents(WebCore::Event * bool)              [node.cpp:2403] - WebCore::Node::dispatchGenericEvent(WTF::PassRefPtr&amp;lt;WebCore::Event&amp;gt;)              [node.cpp:2336] - WebCore::Node::dispatchEvent(WTF::PassRefPtr&amp;lt;WebCore::Event&amp;gt; int &amp;amp;)              [node.cpp:2524] - WebCore::Node::dispatchKeyEvent(WebCore::PlatformKeyboardEvent const &amp;amp;)      [eventhandler.cpp:1814] - WebCore::EventHandler::keyEvent(WebCore::PlatformKeyboardEvent const &amp;amp;)        [webview_impl.cc:510] - WebViewImpl::KeyEvent(WebKeyboardEvent const &amp;amp;)        [webview_impl.cc:962] - WebViewImpl::HandleInputEvent(WebInputEvent const *)       [render_widget.cc:331] - RenderWidget::OnHandleInputEvent(IPC::Message const &amp;amp;)       [render_widget.cc:167] - RenderWidget::OnMessageReceived(IPC::Message const &amp;amp;)         [render_view.cc:413] - RenderView::OnMessageReceived(IPC::Message const &amp;amp;)       [message_router.cc:39] - MessageRouter::RouteMessage(IPC::Message const &amp;amp;)       [message_router.cc:30] - MessageRouter::OnMessageReceived(IPC::Message const &amp;amp;)       [render_thread.cc:202] - RenderThread::OnMessageReceived(IPC::Message const &amp;amp;)                 [task.h:312] - RunnableMethod&amp;lt;CancelableRequest&amp;lt;CallbackRunner&amp;lt;Tuple2&amp;lt;int std::vector&amp;lt;__int64 std::allocator&amp;lt;__int64&amp;gt; &amp;gt; *&amp;gt; &amp;gt; &amp;gt; void ( CancelableRequest&amp;lt;CallbackRunner&amp;lt;Tuple2&amp;lt;int std::vector&amp;lt;__int64 std::allocator&amp;lt;__int64&amp;gt; &amp;gt; *&amp;gt; &amp;gt; &amp;gt;::*)(Tuple2&amp;lt;int std::vector&amp;lt;__int64 std::allocator&amp;lt;__int64&amp;gt; &amp;gt; *&amp;gt; const &amp;amp;) Tuple1&amp;lt;Tuple2&amp;lt;int std::vector&amp;lt;__int64 std::allocator&amp;lt;__int64&amp;gt; &amp;gt; *&amp;gt; &amp;gt; &amp;gt;::Run()        [message_loop.cc:308] - MessageLoop::RunTask(Task *)        [message_loop.cc:316] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;amp;)        [message_loop.cc:408] - MessageLoop::DoWork() [message_pump_default.cc:50] - base::MessagePumpDefault::Run(base::MessagePump::Delegate *)        [message_loop.cc:197] - MessageLoop::RunInternal()        [message_loop.cc:180] - MessageLoop::RunHandler()        [message_loop.cc:154] - MessageLoop::Run()              [thread.cc:156] - base::Thread::ThreadMain()  [platform_thread_win.cc:26] - `anonymous namespace&amp;#39;::ThreadFunc(void *)    [kernel32.dll+0x00044910] - BaseThreadInitThunk       [ntdll.dll+0x0003e4b5] - __RtlUserThreadStart       [ntdll.dll+0x0003e488] - _RtlUserThreadStart  </pre>