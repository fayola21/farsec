<title>Issue 6151 -   chromium -    DCHECK in render_widget.cc on blogger - Project Hosting on Google Code</title> <pre> go to <a href="http://blog.chromium.org">http://blog.chromium.org</a> and click &quot;sign in&quot; in upper right - should  redirect you to <a href="https://www.blogger.com/start">https://www.blogger.com/start</a> - at this point  in <a href="/p/chromium/source/detail?r=7736">r7736</a> I  get a DCHECK in render_widget.cc    [512:4748:877015296:FATAL:render_widget.cc(546)] Check failed: (dx &amp;&amp; !dy)  || (!dx &amp;&amp; dy).     	ntdll.dll!7c90eb94() 	   	[Frames below may be incorrect and/or missing  no symbols loaded for  ntdll.dll]	   	ntdll.dll!7c90e9c0() 	   	kernel32.dll!7c8025cb() 	   	chrome.exe!TargetCreateProcessW(int (const wchar_t *  wchar_t *   _SECURITY_ATTRIBUTES *  _SECURITY_ATTRIBUTES *  int  unsigned long  void *   const wchar_t *  _STARTUPINFOW *  _PROCESS_INFORMATION *)*  orig_CreateProcessW=0x0504e140  const wchar_t *  application_name=0x0504e398  wchar_t * command_line=0x0504e3b0   _SECURITY_ATTRIBUTES * process_attributes=0xcccccccc  _SECURITY_ATTRIBUTES  * thread_attributes=0x00000000  int inherit_handles=0  unsigned long  flags=3435973836  void * environment=0x05be1940  const wchar_t *  current_directory=0xcccccccc  _STARTUPINFOW * startup_info=0xcccccccc   _PROCESS_INFORMATION * process_information=0xcccccccc)  Line 316 + 0x2a  bytes	C++  &gt;	chrome.dll!logging::LogMessage::~LogMessage()  Line 505 + 0x18 bytes	C++   	chrome.dll!RenderWidget::DidScrollRect(WebWidget * webwidget=0x04def9b8   int dx=-75  int dy=-21  const gfx::Rect &amp; clip_rect={...})  Line 548	C++   	chrome.dll!ChromeClientImpl::scroll(const WebCore::IntSize &amp;  scroll_delta={...}  const WebCore::IntRect &amp; scroll_rect={...}  const  WebCore::IntRect &amp; clip_rect={...})  Line 386 + 0x47 bytes	C++   	chrome.dll!WebCore::Chrome::scroll(const WebCore::IntSize &amp;  scrollDelta={...}  const WebCore::IntRect &amp; rectToScroll={...}  const  WebCore::IntRect &amp; clipRect={...})  Line 83 + 0x26 bytes	C++   	chrome.dll!WebCore::ScrollView::scrollContents(const WebCore::IntSize &amp;  scrollDelta={...})  Line 450 + 0x4d bytes	C++   	chrome.dll!WebCore::ScrollView::updateScrollbars(const WebCore::IntSize &amp;  desiredOffset={...})  Line 423	C++   	chrome.dll!WebCore::ScrollView::setScrollPosition(const WebCore::IntPoint  &amp; scrollPoint={...})  Line 290	C++   	chrome.dll!WebCore::FrameView::setScrollPosition(const WebCore::IntPoint  &amp; scrollPoint={...})  Line 704	C++   	chrome.dll!WebCore::RenderLayer::scrollRectToVisible(const  WebCore::IntRect &amp; rect={...}  bool scrollToAnchor=false  const  WebCore::RenderLayer::ScrollAlignment &amp; alignX={...}  const  WebCore::RenderLayer::ScrollAlignment &amp; alignY={...})  Line 919 + 0x23  bytes	C++   	chrome.dll!WebCore::RenderLayer::scrollRectToVisible(const  WebCore::IntRect &amp; rect={...}  bool scrollToAnchor=false  const  WebCore::RenderLayer::ScrollAlignment &amp; alignX={...}  const  WebCore::RenderLayer::ScrollAlignment &amp; alignY={...})  Line 937	C++   	chrome.dll!WebCore::RenderLayer::scrollRectToVisible(const  WebCore::IntRect &amp; rect={...}  bool scrollToAnchor=false  const  WebCore::RenderLayer::ScrollAlignment &amp; alignX={...}  const  WebCore::RenderLayer::ScrollAlignment &amp; alignY={...})  Line 937	C++   	chrome.dll!WebCore::Frame::revealSelection(const  WebCore::RenderLayer::ScrollAlignment &amp; alignment={...})  Line 1283	C++   	chrome.dll!WebCore::HTMLInputElement::updateFocusAppearance(bool  restorePreviousSelection=true)  Line 234	C++   	chrome.dll!WebCore::Element::focus(bool restorePreviousSelection=true)   Line 1089 + 0x16 bytes	C++   	chrome.dll!WebCore::HTMLElementInternal::focusCallback(const  v8::Arguments &amp; args={...})  Line 265 + 0x14 bytes	C++   	chrome.dll!v8::internal::Builtin_HandleApiCall(int __argc__=1   v8::internal::Object * * __argv__=0x0504ec98)  Line 380 + 0xe bytes	C++   	051c016c()	   	chrome.dll!v8::internal::Invoke(bool construct=false   v8::internal::Handle&lt;v8::internal::JSFunction&gt; func={...}   v8::internal::Handle&lt;v8::internal::Object&gt; receiver={...}  int argc=1   v8::internal::Object * * * args=0x0504eee0  bool *  has_pending_exception=0x0504ee6f)  Line 90 + 0x34 bytes	C++     chrome.dll!v8::internal::Execution::Call(v8::internal::Handle&lt;v8::internal::JSFunction&gt;  func={...}  v8::internal::Handle&lt;v8::internal::Object&gt; receiver={...}  int  argc=1  v8::internal::Object * * * args=0x0504eee0  bool *  pending_exception=0x0504ee6f)  Line 116 + 0x1f bytes	C++   	chrome.dll!v8::Function::Call(v8::Handle&lt;v8::Object&gt; recv={...}  int  argc=1  v8::Handle&lt;v8::Value&gt; * argv=0x0504eee0)  Line 1959 + 0x1d bytes	C++   	chrome.dll!WebCore::V8Proxy::CallFunction(v8::Handle&lt;v8::Function&gt;  function={...}  v8::Handle&lt;v8::Object&gt; receiver={...}  int argc=1   v8::Handle&lt;v8::Value&gt; * args=0x0504eee0)  Line 1441 + 0x1f bytes	C++     chrome.dll!WebCore::V8LazyEventListener::CallListenerFunction(v8::Handle&lt;v8::Value&gt;  jsevent={...}  WebCore::Event * event=0x05ba2810  bool isWindowEvent=true)   Line 419 + 0x26 bytes	C++   	chrome.dll!WebCore::V8AbstractEventListener::handleEvent(WebCore::Event *  event=0x05ba2810  bool isWindowEvent=true)  Line 107 + 0x22 bytes	C++   	chrome.dll!WebCore::Document::handleWindowEvent(WebCore::Event *  event=0x05ba2810  bool useCapture=false)  Line 2836 + 0x20 bytes	C++     chrome.dll!WebCore::EventTargetNode::dispatchWindowEvent(WTF::PassRefPtr&lt;WebCore::Event&gt;  e={...})  Line 422	C++   	chrome.dll!WebCore::EventTargetNode::dispatchWindowEvent(const  WebCore::AtomicString &amp; eventType={...}  bool canBubbleArg=false  bool  cancelableArg=false)  Line 430	C++   	chrome.dll!WebCore::Document::implicitClose()  Line 1687	C++   	chrome.dll!WebCore::FrameLoader::checkCallImplicitClose()  Line 1367	C++   	chrome.dll!WebCore::FrameLoader::checkCompleted()  Line 1322	C++   	chrome.dll!WebCore::FrameLoader::finishedParsing()  Line 1272	C++   	chrome.dll!WebCore::Document::finishedParsing()  Line 4006	C++   	chrome.dll!WebCore::HTMLParser::finished()  Line 1556 + 0x1a bytes	C++   	chrome.dll!WebCore::HTMLTokenizer::end()  Line 1828	C++   	chrome.dll!WebCore::HTMLTokenizer::finish()  Line 1868	C++   	chrome.dll!WebCore::Document::finishParsing()  Line 1830 + 0x1b bytes	C++   	chrome.dll!WebCore::FrameLoader::endIfNotLoadingMainResource()  Line 1096	C++   	chrome.dll!WebCore::FrameLoader::end()  Line 1074	C++   	chrome.dll!WebCore::DocumentLoader::finishedLoading()  Line 345	C++   	chrome.dll!WebCore::FrameLoader::finishedLoading()  Line 3032	C++   	chrome.dll!WebCore::MainResourceLoader::didFinishLoading()  Line 347	C++     chrome.dll!WebCore::ResourceLoader::didFinishLoading(WebCore::ResourceHandle *  __formal=0x05b3b428)  Line 422 + 0xf bytes	C++   	chrome.dll!WebCore::ResourceHandleInternal::OnCompletedRequest(const  URLRequestStatus &amp; status={...})  Line 631 + 0x1e bytes	C++   	chrome.dll!ResourceDispatcher::OnRequestComplete(int request_id=9  const  URLRequestStatus &amp; status={...})  Line 417 + 0x13 bytes	C++   	chrome.dll!DispatchToMethod&lt;ResourceDispatcher void (__thiscall  ResourceDispatcher::*)(int URLRequestStatus const  &amp;) int URLRequestStatus&gt;(ResourceDispatcher * obj=0x04def838  void (int   const URLRequestStatus &amp;)* method=0x012cbac0  const  Tuple2&lt;int URLRequestStatus&gt; &amp; arg={...})  Line 398 + 0x15 bytes	C++   	chrome.dll!IPC::MessageWithTuple&lt;Tuple2&lt;int URLRequestStatus&gt;  &gt;::Dispatch&lt;ResourceDispatcher void (__thiscall  ResourceDispatcher::*)(int URLRequestStatus const &amp;)&gt;(const IPC::Message *  msg=0x05b67d78  ResourceDispatcher * obj=0x04def838  void (int  const  URLRequestStatus &amp;)* func=0x012cbac0)  Line 1040 + 0x11 bytes	C++   	chrome.dll!ResourceDispatcher::DispatchMessageW(const IPC::Message &amp;  message={...})  Line 464 + 0x12 bytes	C++   	chrome.dll!ResourceDispatcher::OnMessageReceived(const IPC::Message &amp;  message={...})  Line 278	C++   	chrome.dll!RenderView::OnMessageReceived(const IPC::Message &amp;  message={...})  Line 318 + 0x19 bytes	C++   	chrome.dll!MessageRouter::RouteMessage(const IPC::Message &amp; msg={...})   Line 39 + 0x13 bytes	C++   	chrome.dll!MessageRouter::OnMessageReceived(const IPC::Message &amp;  msg={...})  Line 30 + 0x13 bytes	C++   	chrome.dll!RenderThread::OnMessageReceived(const IPC::Message &amp;  msg={...})  Line 174 + 0x17 bytes	C++   	chrome.dll!IPC::ChannelProxy::Context::OnDispatchMessage(const  IPC::Message &amp; message={...})  Line 182 + 0x1b bytes	C++   	chrome.dll!DispatchToMethod&lt;IPC::ChannelProxy::Context void (__thiscall  IPC::ChannelProxy::Context::*)(IPC::Message const  &amp;) IPC::Message&gt;(IPC::ChannelProxy::Context * obj=0x04debac8  void (const  IPC::Message &amp;)* method=0x012a95d0  const Tuple1&lt;IPC::Message&gt; &amp; arg={...})   Line 393 + 0xf bytes	C++   	chrome.dll!RunnableMethod&lt;IPC::ChannelProxy::Context void (__thiscall  IPC::ChannelProxy::Context::*)(IPC::Message const &amp;) Tuple1&lt;IPC::Message&gt;  &gt;::Run()  Line 312 + 0x1e bytes	C++   	chrome.dll!MessageLoop::RunTask(Task * task=0x05b67d50)  Line 308 + 0xf  bytes	C++   	chrome.dll!MessageLoop::DeferOrRunPendingTask(const  MessageLoop::PendingTask &amp; pending_task={...})  Line 319	C++   	chrome.dll!MessageLoop::DoWork()  Line 408 + 0xc bytes	C++   	chrome.dll!base::MessagePumpDefault::Run(base::MessagePump::Delegate *  delegate=0x0504feb4)  Line 23 + 0xf bytes	C++   	chrome.dll!MessageLoop::RunInternal()  Line 197 + 0x2a bytes	C++   	chrome.dll!MessageLoop::RunHandler()  Line 181	C++   	chrome.dll!MessageLoop::Run()  Line 155	C++   	chrome.dll!base::Thread::ThreadMain()  Line 156	C++   	chrome.dll!`anonymous namespace'::ThreadFunc(void * closure=0x04de9ed4)   Line 26 + 0xf bytes	C++   	kernel32.dll!7c80b683() 	   	chrome.exe!string &quot;sinh&quot;()  + 0x8b4 bytes	Asm   	chrome.exe!string &quot;sinh&quot;()  + 0x8b4 bytes	Asm   	cccccccc()	      +		this	0x04deec80 {port_={...} completed_io_=[0]() }	RenderWidget * const  +		webwidget	0x04def9b8 {delegate_={...} size_={...}  last_mouse_position_={...} ...}	WebWidget *  		dx	-75	int  		dy	-21	int  +		clip_rect	{origin_={...} size_={...} }	const gfx::Rect &amp;  		scroll_pending	true	bool  		intersects_with_painting	true	bool   </pre>