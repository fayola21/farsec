<title>Issue 22545 -   chromium -    Browser crash in [NSTableView drawRect] -&gt; objc_msgSend - Project Hosting on Google Code</title> <pre> New in 4.0.211.2:  http://crash/reportdetail?reportid=4cae94bc489e8cbc    Stack:  Thread 0 *CRASHED* (EXC_BAD_ACCESS / KERN_PROTECTION_FAILURE @0x0000002b)    0x904d4917	 [libobjc.A.dylib	 + 0x00005917]	 objc_msgSend  0x934f3894	 [AppKit	 + 0x00110894]	 -[NSTableView preparedCellAtColumn:row:]  0x9350dd24	 [AppKit	 + 0x0012ad24]	 -[NSTableView _drawContentsAtRow:column:withCellFrame:]  0x9350ce21	 [AppKit	 + 0x00129e21]	 -[NSTableView drawRow:clipRect:]  0x9350c825	 [AppKit	 + 0x00129825]	 -[NSTableView drawRowIndexes:clipRect:]  0x9350b1fe	 [AppKit	 + 0x001281fe]	 -[NSTableView drawRect:]  0x93500db3	 [AppKit	 + 0x0011ddb3]	 -[NSView _drawRect:clip:]  0x934fe47f	 [AppKit	 + 0x0011b47f]	 -[NSView _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:]  0x934fee12	 [AppKit	 + 0x0011be12]	 -[NSView _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:]  0x934fee12	 [AppKit	 + 0x0011be12]	 -[NSView _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:]  0x934fee12	 [AppKit	 + 0x0011be12]	 -[NSView _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:]  0x934fee12	 [AppKit	 + 0x0011be12]	 -[NSView _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:]  0x934fda12	 [AppKit	 + 0x0011aa12]	 -[NSThemeFrame _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:]  0x934fa358	 [AppKit	 + 0x00117358]	 -[NSView _displayRectIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:]  0x9345af25	 [AppKit	 + 0x00077f25]	 -[NSView displayIfNeeded]  0x93424291	 [AppKit	 + 0x00041291]	 -[NSWindow displayIfNeeded]  0x93455763	 [AppKit	 + 0x00072763]	 _handleWindowNeedsDisplay  0x91e0c9d3	 [Foundation	 + 0x000449d3]	 __NSFireTimer  0x992f5eed	 [CoreFoundation	 + 0x0003deed]	 __CFRunLoopRun  0x992f3d33	 [CoreFoundation	 + 0x0003bd33]	 CFRunLoopRunSpecific  0x992f3b60	 [CoreFoundation	 + 0x0003bb60]	 CFRunLoopRunInMode  0x94774feb	 [HIToolbox	 + 0x00034feb]	 RunCurrentEventLoopInMode  0x94774da2	 [HIToolbox	 + 0x00034da2]	 ReceiveNextEventCommon  0x94774c27	 [HIToolbox	 + 0x00034c27]	 BlockUntilNextEventMatchingListInMode  0x9342bc94	 [AppKit	 + 0x00048c94]	 _DPSNextEvent  0x9342b509	 [AppKit	 + 0x00048509]	 -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:]  0x933ed69a	 [AppKit	 + 0x0000a69a]	 -[NSApplication run]  0x0044b522	 [Google Chrome Framework	 - message_pump_mac.mm:482]	 base::MessagePumpNSApplication::DoRun(base::MessagePump::Delegate*)  0x0044b607	 [Google Chrome Framework	 - message_pump_mac.mm:146]	 base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*)  0x00447f73	 [Google Chrome Framework	 - message_loop.cc:199]	 MessageLoop::Run()  0x000c4779	 [Google Chrome Framework	 - browser_main.cc:190]	 BrowserMain(MainFunctionParams const&amp;)  0x000096d5	 [Google Chrome Framework	 - chrome_dll_main.cc:607]	 ChromeMain  0x00001fc5	 [Google Chrome	 + 0x00000fc5]	  0x00000001		    I'm guessing this is in browser/cocoa/keyword_editor_cocoa_controller.mm which rsesek recently introduced since that's one of only a couple of NSTableViews we have in the code.    Wild guess by Scott: scoped_ptr's in objc objects are cleaned up at an arbitrary time in the future so we may not be doing some cleanup on dealloc.    pinkerton: Could you please reassign as needed. </pre>