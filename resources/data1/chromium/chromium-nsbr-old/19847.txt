<title>Issue 19847 -   chromium -    PipelineImpl should use a shared and internally locked data structure - Project Hosting on Google Code</title> <pre> Right now PipelineImpl has a handful of variables that are accessed by   multiple threads.  The sad part is that from time to time we forget to grab   the lock when reading/writing to these variables.    Similar to the ALSA code  we should have a simple data structure that   contains all data accessed by multiple threads.  Each setter/getter will grab   the lock.    We could also take this to the extreme by having a simple data structure that   DCHECKs that setters/getters are called specifically on the message loop   thread. </pre>