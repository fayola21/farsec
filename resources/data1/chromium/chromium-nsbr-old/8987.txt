<title>Issue 8987 -   chromium -    [CRASH] @WTF::fastMalloc(unsigned int) - Project Hosting on Google Code</title> <pre> Chrome Version       : 2.0.169.1  The full crash report details can be found at:   http://go/crash/reportdetail?  reportid=15032732e96a39e1&amp;product=Chrome&amp;version=2.0.169.1&amp;signature=RtlAll  ocateHeap-B10CF5    Meta information:  Report Time: 2009/03/19 17:48:57  Thu  Uptime: 177517 sec  Cumulative Uptime: 0 sec  User Email:   User Comments:   Product Name: Chrome  Product Version: 2.0.169.1  OS Name: Windows NT  OS Version: 5.1.2600 Service Pack 2  CPU Architecture: x86  CPU Info: GenuineIntel family 6 model 15 stepping 6  plat: Win32  ptype: browser    Stack Trace:  Thread 5 *CRASHED* (EXCEPTION_ACCESS_VIOLATION @0x01cb2003)    0x7c9106c3	 [ntdll.dll	 + 0x000106c3]	 RtlAllocateHeap  0x01c51e5e	 [chrome.dll	 - malloc.c:163]	 malloc  0x01ba63e3	 [chrome.dll	 - fastmalloc.cpp:192]	   WTF::fastMalloc(unsigned int)  0x01684345	 [chrome.dll	 - xmemory:44]	   std::_Allocate&lt;char&gt;(unsigned int char *)  0x016840ac	 [chrome.dll	 - xstring:2010]	   std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt;   &gt;::_Copy(unsigned int unsigned int)  0x01683dec	 [chrome.dll	 - xstring:2040]	   std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt;   &gt;::_Grow(unsigned int bool)  0x01683915	 [chrome.dll	 - xstring:1047]	   std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt;   &gt;::assign(std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char  &gt; &gt; const &amp; unsigned int unsigned int)  0x016836c6	 [chrome.dll	 - xstring:722]	   std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt;   &gt;::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt;   &gt;(std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt;   const &amp;)  0x0169f8a0	 [chrome.dll	 - string:25]	   std::operator+&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt;   &gt;(std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt;   const &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt;   &gt; const &amp;)  0x0184c22d	 [chrome.dll	 - http_network_transaction.cc:271]	   net::HttpNetworkTransaction::BuildRequestHeaders()  0x0184d40f	 [chrome.dll	 - http_network_transaction.cc:633]	   net::HttpNetworkTransaction::DoWriteHeaders()  0x0184cb7e	 [chrome.dll	 - http_network_transaction.cc:412]	   net::HttpNetworkTransaction::DoLoop(int)  0x0184b9e5	 [chrome.dll	 - http_network_transaction.cc:72]	   net::HttpNetworkTransaction::Start(net::HttpRequestInfo const   * CallbackRunner&lt;Tuple1&lt;int&gt; &gt; *)  0x0183cb2b	 [chrome.dll	 - http_cache.cc:699]	   net::HttpCache::Transaction::BeginNetworkRequest()  0x0183c90c	 [chrome.dll	 - http_cache.cc:565]	   net::HttpCache::Transaction::EntryAvailable(net::HttpCache::ActiveEntry *)  0x0183dc75	 [chrome.dll	 - http_cache.cc:1336]	   net::HttpCache::AddTransactionToEntry(net::HttpCache::ActiveEntry   * net::HttpCache::Transaction *)  0x0183c8e0	 [chrome.dll	 - http_cache.cc:542]	   net::HttpCache::Transaction::AddToEntry()  0x0183c56a	 [chrome.dll	 - http_cache.cc:378]	   net::HttpCache::Transaction::Start(net::HttpRequestInfo const   * CallbackRunner&lt;Tuple1&lt;int&gt; &gt; *)  0x01852ee8	 [chrome.dll	 - url_request_http_job.cc:506]	   URLRequestHttpJob::StartTransaction()  0x01852599	 [chrome.dll	 - url_request_http_job.cc:122]	   URLRequestHttpJob::Start()  0x01838100	 [chrome.dll	 - url_request.cc:259]	   URLRequest::Start()  0x0178b4b0	 [chrome.dll	 - resource_dispatcher_host.cc:953]	   ResourceDispatcherHost::BeginRequestInternal(URLRequest * bool)  0x0178a357	 [chrome.dll	 - resource_dispatcher_host.cc:322]	   ResourceDispatcherHost::BeginRequest(IPC::Message::Sender * void   * int int int ViewHostMsg_Resource_Request const &amp; URLRequestContext   * IPC::Message *)  0x017e736c	 [chrome.dll	 - resource_message_filter.cc:339]	   ResourceMessageFilter::OnRequestResource(IPC::Message const   &amp; int ViewHostMsg_Resource_Request const &amp;)  0x017e8853	 [chrome.dll	 - ipc_message_utils.h:1209]	   IPC::MessageWithTuple&lt;Tuple2&lt;int ViewHostMsg_Resource_Request&gt;   &gt;::Dispatch&lt;PluginProcessHost int ViewHostMsg_Resource_Request const   &amp;&gt;(IPC::Message const * PluginProcessHost * void (   PluginProcessHost::*)(IPC::Message const &amp; int ViewHostMsg_Resource_Request   const &amp;))  0x017e6cc5	 [chrome.dll	 - resource_message_filter.cc:183]	   ResourceMessageFilter::OnMessageReceived(IPC::Message const &amp;)  0x016b2cc2	 [chrome.dll	 - ipc_channel_proxy.cc:41]	   IPC::ChannelProxy::Context::TryFilters(IPC::Message const &amp;)  0x016b7249	 [chrome.dll	 - ipc_sync_channel.cc:291]	   IPC::SyncChannel::SyncContext::OnMessageReceived(IPC::Message const &amp;)  0x016b951b	 [chrome.dll	 - ipc_channel_win.cc:306]	   IPC::Channel::ChannelImpl::ProcessIncomingMessages(base::MessagePumpForIO::  IOContext * unsigned long)  0x016b9761	 [chrome.dll	 - ipc_channel_win.cc:400]	   IPC::Channel::ChannelImpl::OnIOCompleted(base::MessagePumpForIO::IOContext   * unsigned long unsigned long)  0x01a1ff3b	 [chrome.dll	 - message_pump_win.cc:504]	   base::MessagePumpForIO::WaitForIOCompletion(unsigned   long base::MessagePumpForIO::IOHandler *)  0x01a1fe9f	 [chrome.dll	 - message_pump_win.cc:468]	   base::MessagePumpForIO::DoRunLoop()  0x01a1f9cd	 [chrome.dll	 - message_pump_win.cc:52]	   base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate   * base::MessagePumpWin::Dispatcher *)  0x01a1f880	 [chrome.dll	 - message_pump_win.h:78]	   base::MessagePumpWin::Run(base::MessagePump::Delegate *)  0x01a05bd5	 [chrome.dll	 - message_loop.cc:197]	   MessageLoop::RunInternal()  0x01a05ba4	 [chrome.dll	 - message_loop.cc:180]	   MessageLoop::RunHandler()  0x01a05b47	 [chrome.dll	 - message_loop.cc:154]	 MessageLoop::Run()  0x01a0bfb3	 [chrome.dll	 - thread.cc:156]	   base::Thread::ThreadMain()  0x01a0b7bd	 [chrome.dll	 - platform_thread_win.cc:26]	 `anonymous   namespace'::ThreadFunc(void *)  0x7c80b682	 [kernel32.dll	 + 0x0000b682]	 BaseThreadStart </pre>