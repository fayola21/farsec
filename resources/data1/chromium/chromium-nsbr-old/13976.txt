<title>Issue 13976 -   chromium -    Crash - std::_Vector_iterator&lt;NPIdentifier_Param std::allocator&lt;NPIdentifier_Param&gt; &gt;::operator+(int) - Project Hosting on Google Code</title> <pre> This crash was detected in 3.0.187.1 and appears to be a regression from 3.0.183.1. It is currently ranked #4 (based on the relative number of reports in the release).  There have been 81 reports from 46 clients. Search query: http://crash/search?query=Chrome+3.0.187.1+std%3A%3A_Vector_iterator%3CNPIdentifier_Param%2Cstd%3A%3Aallocator%3CNPIdentifier_Param%3E+%3E%3A%3Aoperator%2B%28int%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=49808b11622615f8 Mini Dump Link: http://crash/file?reportid=49808b11622615f8&amp;name=upload_file_minidump  Uptime: 23 sec User Comments: null OS: Windows Vista or Windows Server 2008 Service Pack 1 CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 15 stepping 13 rept: null ptype: browser plat: Win32 crash type:(EXCEPTION_BREAKPOINT@0x66bc306f)  ---------------------------- *      Loaded Modules      * ----------------------------     chrome.dll     chrome.exe     kernel32.dll     mswsock.dll     ntdll.dll     user32.dll  ---------------------------- *        Crash Trace       * ----------------------------     [chrome_dll_main.cc:127] - `anonymous namespace'::InvalidParameter(wchar_t const * wchar_t const * wchar_t const * unsigned int unsigned int)                [invarg.c:99] - _invalid_parameter_noinfo                 [vector:369] - std::_Vector_iterator&lt;NPIdentifier_Param std::allocator&lt;NPIdentifier_Param&gt; &gt;::operator+(int)                [view.cc:516] - views::View::AddChildView(int views::View *)                [view.cc:504] - views::View::AddChildView(views::View *)    [task_manager_win.cc:365] - `anonymous namespace'::TaskManagerViewImpl::ViewHierarchyChanged(bool views::View * views::View *)                [view.cc:663] - views::View::ViewHierarchyChangedImpl(bool bool views::View * views::View *)                [view.cc:612] - views::View::PropagateAddNotifications(views::View * views::View *)                [view.cc:522] - views::View::AddChildView(int views::View *)                [view.cc:504] - views::View::AddChildView(views::View *)          [client_view.cc:53] - views::ClientView::ViewHierarchyChanged(bool views::View * views::View *)  [dialog_client_view.cc:305] - views::DialogClientView::ViewHierarchyChanged(bool views::View * views::View *)                [view.cc:663] - views::View::ViewHierarchyChangedImpl(bool bool views::View * views::View *)                [view.cc:612] - views::View::PropagateAddNotifications(views::View * views::View *)                [view.cc:522] - views::View::AddChildView(int views::View *)     [non_client_view.cc:167] - views::NonClientView::ViewHierarchyChanged(bool views::View * views::View *)                [view.cc:663] - views::View::ViewHierarchyChangedImpl(bool bool views::View * views::View *)                [view.cc:612] - views::View::PropagateAddNotifications(views::View * views::View *)                [view.cc:522] - views::View::AddChildView(int views::View *)                [view.cc:504] - views::View::AddChildView(views::View *)          [widget_win.cc:231] - views::WidgetWin::SetContentsView(views::View *)          [window_win.cc:548] - views::WindowWin::Init(HWND__ * gfx::Rect const &amp;)          [window_win.cc:108] - views::Window::CreateChromeWindow(HWND__ * gfx::Rect const &amp; views::WindowDelegate *)    [task_manager_win.cc:438] - `anonymous namespace'::TaskManagerViewImpl::OpenWindow()            [browser.cc:1361] - Browser::ExecuteCommandWithDisposition(int WindowOpenDisposition)            [browser.cc:1395] - Browser::ExecuteCommand(int)       [browser_view.cc:1067] - BrowserView::ExecuteWindowsCommand(int)         [window_win.cc:1078] - views::WindowWin::OnSysCommand(unsigned int WTL::CPoint)           [widget_win.h:207] - views::WidgetWin::_ProcessWindowMessage(HWND__ * unsigned int unsigned int long long &amp; unsigned long)         [widget_win.cc:1043] - views::WidgetWin::WndProc(HWND__ * unsigned int unsigned int long)      [user32.dll+0x0001f8d1] - InternalCallWinProc      [user32.dll+0x0001f793] - UserCallWinProcCheckWow      [user32.dll+0x000206f5] - CallWindowProcAorW      [user32.dll+0x0002069b] - CallWindowProcW        [focus_manager.cc:86] - views::FocusWindowCallback      [user32.dll+0x0001f8d1] - InternalCallWinProc      [user32.dll+0x00011911] - PostThreadMessageW      [user32.dll+0x00020816] - DispatchClientMessage      [user32.dll+0x00020a64] - __fnDWORD       [ntdll.dll+0x000599cd] - KiUserCallbackDispatcher       [ntdll.dll+0x0005997f] - KiUserApcDispatcher      [user32.dll+0x00020af9] - SendMessageW          [window_win.cc:183] - views::WindowWin::ExecuteSystemMenuCommand(int)          [window_win.cc:577] - views::WindowWin::RunSystemMenu(gfx::Point const &amp;)          [window_win.cc:950] - views::WindowWin::OnNCRButtonDown(unsigned int WTL::CPoint const &amp;)           [widget_win.h:193] - views::WidgetWin::_ProcessWindowMessage(HWND__ * unsigned int unsigned int long long &amp; unsigned long)         [widget_win.cc:1043] - views::WidgetWin::WndProc(HWND__ * unsigned int unsigned int long)      [user32.dll+0x0001f8d1] - InternalCallWinProc      [user32.dll+0x0001f793] - UserCallWinProcCheckWow      [user32.dll+0x000206f5] - CallWindowProcAorW      [user32.dll+0x0002069b] - CallWindowProcW        [focus_manager.cc:86] - views::FocusWindowCallback      [user32.dll+0x0001f8d1] - InternalCallWinProc      [user32.dll+0x0001f793] - UserCallWinProcCheckWow      [user32.dll+0x00020007] - DispatchMessageWorker      [user32.dll+0x0002005f] - DispatchMessageW  [accelerator_handler.cc:40] - views::AcceleratorHandler::Dispatch(tagMSG const &amp;)    [message_pump_win.cc:357] - base::MessagePumpForUI::ProcessMessageHelper(tagMSG const &amp;)    [message_pump_win.cc:205] - base::MessagePumpForUI::DoRunLoop()     [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)        [message_loop.cc:193] - MessageLoop::RunInternal()        [message_loop.cc:181] - MessageLoop::RunHandler()        [message_loop.cc:585] - MessageLoopForUI::Run(base::MessagePumpWin::Dispatcher *)        [browser_main.cc:189] - `anonymous namespace'::RunUIMessageLoop(BrowserProcess *)        [browser_main.cc:748] - BrowserMain(MainFunctionParams const &amp;)     [chrome_dll_main.cc:506] - ChromeMain [google_update_client.cc:93] - google_update::GoogleUpdateClient::Launch(HINSTANCE__ * sandbox::SandboxInterfaceInfo * wchar_t * char const * int *)      [chrome_exe_main.cc:67] - wWinMain  </pre>