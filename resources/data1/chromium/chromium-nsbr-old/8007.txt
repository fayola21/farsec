<title>Issue 8007 -   chromium -    Crash with --enable-user-scripts - Project Hosting on Google Code</title> <pre> - Enable user scripts (--enable-user-scripts)  - Copy attached script in profileuser Scripts  - go to <a href="http://www.techcrunch.com/2009/02/24/trouble-in-the-clouds-gmail-">http://www.techcrunch.com/2009/02/24/trouble-in-the-clouds-gmail-</a>  turns-into-gfail/    Crash here:  &gt;	chrome.dll!WebCore::HandleFatalErrorInV8()  Line 1079	C++   	chrome.dll!WebCore::ReportFatalErrorInV8(const char *   location=0x02f4ce54  const char * message=0x02f4ce30)  Line 1089	C++   	chrome.dll!v8::Utils::ReportApiFailure(const char *   location=0x02f4ce54  const char * message=0x02f4ce30)  Line 133 + 0xb bytes	  C++   	chrome.dll!v8::ApiCheck(bool condition=false  const char *   location=0x02f4ce54  const char * message=0x02f4ce30)  Line 147 + 0x1b   bytes	C++   	chrome.dll!v8::Context::New(v8::ExtensionConfiguration *   extensions=0x0535d9b4  v8::Handle&lt;v8::ObjectTemplate&gt;   global_template={...}  v8::Handle&lt;v8::Value&gt; global_object={...})  Line   2259 + 0x20 bytes	C++   	chrome.dll!WebCore::V8Proxy::InitContextIfNeeded()  Line 2326 +   0x3b bytes	C++   	chrome.dll!WebCore::V8Proxy::GetContext(WebCore::Frame *   frame=0x0ae5f070)  Line 2483	C++   	  chrome.dll!WebCore::ScriptController::BindToWindowObject(WebCore::Frame *   frame=0x0ae5f070  const WebCore::String &amp; key=&quot;external????????&quot;  NPObject   * object=0x09aee040)  Line 273 + 0xd bytes	C++   	chrome.dll!WebFrameImpl::BindToWindowObject(const   std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt;   &gt; &amp; name=&quot;external&quot;  NPObject * object=0x09aee040)  Line 719	C++   	chrome.dll!CppBoundClass::BindToJavascript(WebFrame *   frame=0x0a432500  const   std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt;   &gt; &amp; classname=&quot;external&quot;)  Line 261 + 0x1e bytes	C++   	chrome.dll!RenderView::WindowObjectCleared(WebFrame *   webframe=0x0a432500)  Line 1513 + 0x23 bytes	C++   	chrome.dll!WebFrameLoaderClient::windowObjectCleared()  Line 100 +   0x16 bytes	C++   	chrome.dll!WebCore::FrameLoader::dispatchWindowObjectAvailable()    Line 5137 + 0x18 bytes	C++   	chrome.dll!WebCore::FrameLoader::receivedFirstData()  Line 867	C++   	chrome.dll!WebCore::FrameLoader::setEncoding(const WebCore::String   &amp; name=&lt;Bad Ptr&gt;  bool userChosen=false)  Line 1860	C++   	  chrome.dll!WebFrameLoaderClient::finishedLoading(WebCore::DocumentLoader *   dl=0x0add1c08)  Line 1110 + 0x22 bytes	C++   	  chrome.dll!WebCore::FrameLoader::finishedLoadingDocument(WebCore::DocumentL  oader * loader=0x0add1c08)  Line 3203 + 0x1c bytes	C++   	chrome.dll!WebCore::DocumentLoader::finishedLoading()  Line 349	C++   	chrome.dll!WebCore::FrameLoader::finishedLoading()  Line 3138	C++   	chrome.dll!WebCore::MainResourceLoader::didFinishLoading()  Line   367	C++   	  chrome.dll!WebCore::MainResourceLoader::continueAfterContentPolicy(WebCore:  :PolicyAction contentPolicy=PolicyUse  const WebCore::ResourceResponse &amp;   r={...})  Line 262 + 0xf bytes	C++   	  chrome.dll!WebCore::MainResourceLoader::continueAfterContentPolicy(WebCore:  :PolicyAction policy=PolicyUse)  Line 276	C++   	  chrome.dll!WebCore::MainResourceLoader::callContinueAfterContentPolicy(void   * argument=0x09c70e38  WebCore::PolicyAction policy=PolicyUse)  Line 268	  C++   	chrome.dll!WebCore::PolicyCheck::call(WebCore::PolicyAction   action=PolicyUse)  Line 5084 + 0x1b bytes	C++   	  chrome.dll!WebCore::FrameLoader::continueAfterContentPolicy(WebCore::Policy  Action policy=PolicyUse)  Line 3390	C++   	  chrome.dll!WebFrameLoaderClient::dispatchDecidePolicyForMIMEType(void   (WebCore::PolicyAction)* function=0x0208f680  const WebCore::String &amp;   mime_type=&quot;text/html???????&quot;  const WebCore::ResourceRequest &amp;   __formal={...})  Line 865 + 0x1d bytes	C++   	chrome.dll!WebCore::FrameLoader::checkContentPolicy(const   WebCore::String &amp; MIMEType=&quot;text/html???????&quot;  void (void *    WebCore::PolicyAction)* function=0x0251f9e0  void * argument=0x09c70e38)    Line 2526 + 0x31 bytes	C++   	chrome.dll!WebCore::MainResourceLoader::didReceiveResponse(const   WebCore::ResourceResponse &amp; r={...})  Line 319	C++   	chrome.dll!WebCore::MainResourceLoader::handleEmptyLoad(const   WebCore::KURL &amp; url={...}  bool forURLScheme=false)  Line 411 + 0x16 bytes	  C++   </pre>