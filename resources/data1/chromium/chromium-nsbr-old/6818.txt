<title>Issue 6818 -   chromium -    findPlainText is not interruptable - Project Hosting on Google Code</title> <pre> From &lt;b/1088245&gt;:    While Find-in-page is looking for matches it gives each frame a timeslice   and the frame periodically checks (after finding a match) whether it has   exceeded the timeslice. If so  it requests to go to the back of the queue   to continue from where it left off.    The thing is  when finding matches we use WebKit's findPlainText() and this   function is not interruptible. If no match is found while searching a very   content rich frame it can far exceed the timeslice given causing a delay in   searching other frames on the page.    However  when I added the TODO I thought this was surely going to rear its   ugly head on a page somewhere. But so far  I've heard no complaints. This   made me wonder if I am exaggerating the problem... I decided to file it   anyway.    Mark Larson replied:    Unless we know of cases where this is breaking  I don't think it's worth   mucking with the implementation of findPlainText or creating an   interruptible alternative.    Peter Kasting replied:    This has come up before in Firefox  and there are some good testcases   floating around bugzilla somewhere  but I don't remember where.    There are real webpages (like the results of &quot;view this entire web standard   as one long stream of HTML) that are tens of megabytes of text  and of   course if a server gets its MIME types screwy you can sometimes wind up   with a whole several-hundred meg text file rendered as gibberish text.  In   a case like one of these we can probably detect and measure slowdown  and   from that we could hopefully interpolate to see what the upper bound on the   size of a frame we can search &quot;quickly enough&quot; is.  That will tell us   whether anything ever needs to change here.   </pre>