<title>Issue 18189 -   chromium -    Invalid write in NSRectFill() ... in StatusBubbleMac::Create() in ui tests on mac - Project Hosting on Google Code</title> <pre> Using tools/valgrind/shard_all_tests.sh to run just the ui tests  on the mac through valgrind continuously sees the following  invalid write in roughly one of every 30 tests.   The tests this has happened in so far are    AutomationProxyTest.Cookies  AutomationProxyTest.GetActiveTabIndex  AutomationProxyTest.GetTab  AutomationProxyTest.GetTabCount  AutomationProxyTest4.NumberValueIsEchoedByDomAutomationController  AutomationProxyTest5.TestLifetimeOfDomAutomationController  DomCheckerTest.File  DownloadTest.ContentDisposition  DownloadTest.NoDownload  GoogleTest.Crash  ResourceDispatcherTest.CrossSiteNavigationNonBuffered  ResourceDispatcherTest.CrossSiteOnunloadCookie  ResourceDispatcherTest.RespectNoSniffDirective  ResourceDispatcherTest.SniffHTMLWithNoContentType  ResourceDispatcherTest.SniffNoContentTypeNoData  ResourceDispatcherTest.SyncXMLHttpRequest_Disallowed  SavePageTest.NoSave  SessionHistoryTest.BasicBackForward  SessionHistoryTest.FrameFormBackForward  SunSpiderTest.Perf  TabRestoreUITest.RestoreCrossSiteWithExistingSiteInstance  TabRestoreUITest.RestoreWindow  TabRestoreUITest.RestoreWithExistingSiteInstance  ViewSourceTest.DoesBrowserRenderInViewSource  ViewSourceTest.ViewSourceInPageMenuDisabledWhileViewingSource    I've seen it twice in  ResourceDispatcherTest.RespectNoSniffDirective  but that's probably just chance.    Here's the stack:    Invalid write of size 8    sseCGSFill8by1 (/System/.../CoreGraphics)    argb32_mark_constshape (/System/.../CoreGraphics)    argb32_mark (/System/.../CoreGraphics)    ripl_BltShape (/System/.../libRIP.A.dylib)    ripc_Render (/System/.../libRIP.A.dylib)    ripc_DrawRects (/System/.../libRIP.A.dylib)    CGContextFillRects (/System/.../CoreGraphics)    CGContextFillRect (/System/.../CoreGraphics)    NSRectFill (/System/.../AppKit)    -[NSView _drawRect:clip:] (/System/.../AppKit)    -[NSView _recursiveDisplayAllDirtyWithLockFocus:visRect:]  (/System/.../AppKit)    -[NSView  _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:]  (/System/.../AppKit)    -[NSNextStepFrame  _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:]  (/System/.../AppKit)    -[NSView  _displayRectIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:]  (/System/.../AppKit)    -[NSView displayIfNeeded] (/System/.../AppKit)    -[NSWindow displayIfNeeded] (/System/.../AppKit)    -[NSWindow  _reallyDoOrderWindow:relativeTo:findKey:forCounter:force:isModal:]  (/System/.../AppKit)    -[NSWindow orderWindow:relativeTo:] (/System/.../AppKit)    -[NSWindow addChildWindow:ordered:] (/System/.../AppKit)    StatusBubbleMac::Create()  (/Users/dkegel/chromium/src/xcodebuild/Debug/Chromium.app/Contents/MacOS/Chromium)    The caller of Create is       StatusBubbleMac::SetStatus(std::basic_string&lt;wchar_t   std::char_traits&lt;wchar_t&gt;  std::allocator&lt;wchar_t&gt; &gt; const&amp;) (Chromium)    Browser::LoadingStateChanged(TabContents*) (Chromium)    TabContents::SetIsLoading(bool  LoadNotificationDetails*) (Chromium)    in all but one case seen so far.    Since there was a bug filed for a different crash in sseCGSFill8by1   I'm inclined to consider this serious.   </pre>