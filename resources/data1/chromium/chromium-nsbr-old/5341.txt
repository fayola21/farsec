<title>Issue 5341 -   chromium -    Crash in sqlite  - Project Hosting on Google Code</title> <pre> Brett  this crash is happening pretty consistently for one user. It's from   someone on the extended team  so it would be easy to get access to the   laptop if that would help.    The repro steps are surf around  type something in the address bar  and it   will often crash.       http://go/crash/reportdetail?  reportid=fa0a8f6fbd878249&amp;product=Chrome&amp;version=0.4.154.33&amp;date=&amp;signature  =    Thread 10 *CRASHED* (EXCEPTION_ACCESS_VIOLATION @0x00000001)  0x0154ce6c 	[chrome.dll 	- fts2.c:429] 	getVarint  0x0154cef9 	[chrome.dll 	- fts2.c:444] 	getVarint32  0x01550b62 	[chrome.dll 	- fts2.c:4936] 	leafReaderInit  0x01550d2f 	[chrome.dll 	- fts2.c:5076] 	leavesReaderInit  0x01550f50 	[chrome.dll 	- fts2.c:5188] 	leavesReadersInit  0x0155105e 	[chrome.dll 	- fts2.c:5278] 	segmentMerge  0x01550ff1 	[chrome.dll 	- fts2.c:5245] 	segdirNextIndex  0x0155174c 	[chrome.dll 	- fts2.c:5671] 	writeZeroSegment  0x015518fe 	[chrome.dll 	- fts2.c:5729] 	flushPendingTerms  0x0154f9e1 	[chrome.dll 	- fts2.c:3672] 	fulltextQuery  0x0154fd6d 	[chrome.dll 	- fts2.c:3818] 	fulltextFilter  0x01565a80 	[chrome.dll 	- vdbe.c:4879] 	sqlite3VdbeExec  0x015423bd 	[chrome.dll 	- vdbeapi.c:247] 	sqlite3Step  0x01542502 	[chrome.dll 	- vdbeapi.c:305] 	sqlite3_step  0x0150f9bf 	[chrome.dll 	- sqlite_utils.cc:210] 	  SQLStatement::step()  0x012e8771 	[chrome.dll 	- text_database.cc:337] 	  history::TextDatabase::GetTextMatches(std::basic_string&lt;char std::char_trai  ts&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; history::QueryOptions const   &amp; std::vector&lt;history::TextDatabase::Match std::allocator&lt;history::TextData  base::Match&gt; &gt; * std::set&lt;GURL std::less&lt;GURL&gt; std::allocator&lt;GURL&gt; &gt;   * Time *)  0x01296597 	[chrome.dll 	- text_database_manager.cc:461] 	  history::TextDatabaseManager::GetTextMatches(std::basic_string&lt;wchar_t std:  :char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt; const   &amp; history::QueryOptions const   &amp; std::vector&lt;history::TextDatabase::Match std::allocator&lt;history::TextData  base::Match&gt; &gt; * Time *)  0x01230d70 	[chrome.dll 	- history_backend.cc:1082] 	  history::HistoryBackend::QueryHistoryFTS(std::basic_string&lt;wchar_t std::cha  r_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt; const &amp; history::QueryOptions   const &amp; history::QueryResults *)  0x01230a8b 	[chrome.dll 	- history_backend.cc:1013] 	  history::HistoryBackend::QueryHistory(scoped_refptr&lt;CancelableRequest1&lt;Call  backRunner&lt;Tuple2&lt;int history::QueryResults *&gt; &gt; history::QueryResults&gt;   &gt; std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_  t&gt; &gt; const &amp; history::QueryOptions const &amp;)  0x01209840 	[chrome.dll 	- task.h:312] 	  RunnableMethod&lt;history::HistoryBackend void (   history::HistoryBackend::*)(scoped_refptr&lt;CancelableRequest1&lt;CallbackRunner  &lt;Tuple2&lt;int history::QueryResults *&gt; &gt; history::QueryResults&gt;   &gt; std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_  t&gt; &gt; const &amp; history::QueryOptions const   &amp;) Tuple3&lt;scoped_refptr&lt;CancelableRequest1&lt;CallbackRunner&lt;Tuple2&lt;int histor  y::QueryResults *&gt; &gt; history::QueryResults&gt;   &gt; std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_  t&gt; &gt; history::QueryOptions&gt; &gt;::Run()  0x0100bd4c 	[chrome.dll 	- message_loop.cc:303] 	  MessageLoop::RunTask(Task *)  0x0100bd88 	[chrome.dll 	- message_loop.cc:311] 	  MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;)  0x0100bf7d 	[chrome.dll 	- message_loop.cc:403] 	  MessageLoop::DoWork()  0x01019854 	[chrome.dll 	- message_pump_default.cc:50] 	  base::MessagePumpDefault::Run(base::MessagePump::Delegate *)  0x0100ba8c 	[chrome.dll 	- message_loop.cc:192] 	  MessageLoop::RunInternal()  </pre>