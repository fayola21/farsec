<title>Issue 13127 -   chromium -    Crash - NavigationController::GetActiveEntry() const - Project Hosting on Google Code</title> <pre> This crash was detected in 3.0.182.4 and appears to be a regression from 2.0.181.1. It is currently ranked #20 (based on the relative number of reports in the release).  There have been 1 reports from 1 clients. Search query: http://crash/search?query=Chrome+3.0.182.4+NavigationController%3A%3AGetActiveEntry%28%29+const (EXC_BAD_ACCESS / KERN_PROTECTION_FAILURE@0x00239158) ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=24010813e6dcdfdb Mini Dump Link: http://crash/file?reportid=24010813e6dcdfdb&amp;name=upload_file_minidump  Uptime: 20 sec User Comments: null OS: 10.5.6 9G55 CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 15 stepping 6 rept: null ptype: null plat: null  ---------------------------- *      Loaded Modules      * ----------------------------     Google Chrome     AppKit     ColorSync     HIToolbox     CoreFoundation     CFNetwork     CoreVideo     Foundation     libGLProgrammability.dylib     QuartzCore     libSystem.B.dylib  ---------------------------- *        Crash Trace       * ---------------------------- [Google Chrome+0x00238158] - NavigationController::GetActiveEntry() const [Google Chrome+0x0023594f] - InfoBarDelegate::StoreActiveEntryUniqueID(TabContents*) [Google Chrome+0x00043f82] - AlternateNavURLFetcher::ShowInfobarIfPossible() [Google Chrome+0x00044101] - AlternateNavURLFetcher::OnURLFetchComplete(URLFetcher const*  GURL const&amp;  URLRequestStatus const&amp;  int  std::vector&lt;std::string  std::allocator&lt;std::string&gt; &gt; const&amp;  std::string const&amp;) [Google Chrome+0x001919c7] - URLFetcher::Core::OnCompletedURLRequest(URLRequestStatus const&amp;) [Google Chrome+0x00192996] - RunnableMethod&lt;URLFetcher::Core  void (URLFetcher::Core::*)(URLRequestStatus const&amp;)  Tuple1&lt;URLRequestStatus&gt; &gt;::Run() [Google Chrome+0x002d80dd] - MessageLoop::RunTask(Task*) [Google Chrome+0x002d8122] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const&amp;) [Google Chrome+0x002d8dd0] - MessageLoop::DoWork() [Google Chrome+0x002de80e] - base::MessagePumpCFRunLoopBase::RunWork(void*) [CoreFoundation+0x000735f4] - CFRunLoopRunSpecific [CoreFoundation+0x00073cd7] - CFRunLoopRunInMode [HIToolbox+0x000302bf] - RunCurrentEventLoopInMode [HIToolbox+0x000300d8] - ReceiveNextEventCommon [HIToolbox+0x0002ff4c] - BlockUntilNextEventMatchingListInMode [AppKit+0x00040d7c] - _DPSNextEvent [AppKit+0x0004062f] - -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] [AppKit+0x0003966a] - -[NSApplication run] [Google Chrome+0x002de70b] - base::MessagePumpNSApplication::DoRun(base::MessagePump::Delegate*) [Google Chrome+0x002de533] - base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*) [Google Chrome+0x002d86b8] - MessageLoop::RunInternal() [Google Chrome+0x002d8762] - MessageLoop::Run() [Google Chrome+0x0009c1ea] - (anonymous namespace)::RunUIMessageLoop(BrowserProcess*) [Google Chrome+0x0009e813] - BrowserMain(MainFunctionParams const&amp;) [Google Chrome+0x0000371f] - ChromeMain [Google Chrome+0x000024e2] - main [Google Chrome+0x00001f65] - start  </pre>