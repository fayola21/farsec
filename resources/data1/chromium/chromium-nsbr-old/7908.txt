<title>Issue 7908 -   chromium -    Crash - `anonymous namespace'::OnNoMemory(unsigned int) - Project Hosting on Google Code</title> <pre> This crash was detected in 2.0.164.0 and was seen in 2.0.162.0. Search query: http://crash/search?query=Chrome+2.0.164.0+%60anonymous+namespace%27%3A%3AOnNoMemory%28unsigned+int%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=e16853eb89c14ffa Mini Dump Link: http://crash/file?reportid=e16853eb89c14ffa&amp;name=upload_file_minidump  Uptime: 28108 sec User Comments: null OS: Windows XP Service Pack 2 CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 15 stepping 6 rept: null ptype: browser plat: Win32  ---------------------------- *      Loaded Modules      * ----------------------------     advapi32.dll     dnsapi.dll     jscript.dll     kernel32.dll     mswsock.dll     ntdll.dll     ole32.dll     rpcrt4.dll     user32.dll     userenv.dll     winhttp.dll     ws2_32.dll     chrome.dll     chrome.exe     fsgkiapi.dll  ---------------------------- *        Crash Trace       * ----------------------------       [chrome_dll_main.cc:99] - `anonymous namespace&amp;#39;::OnNoMemory(unsigned int)             [handler.cpp:135] - _callnewh               [realloc.c:347] - realloc                   [mem1.c:82] - sqlite3MemRealloc                [malloc.c:543] - sqlite3Realloc                [malloc.c:568] - sqlite3_realloc                  [fts2.c:520] - dataBufferExpand                  [fts2.c:526] - dataBufferAppend                 [fts2.c:1023] - plwAdd                 [fts2.c:3975] - buildTerms                 [fts2.c:3998] - insertTerms                 [fts2.c:4043] - index_insert                 [fts2.c:6045] - fulltextUpdate                 [vdbe.c:4945] - sqlite3VdbeExec               [vdbeapi.c:476] - sqlite3Step               [vdbeapi.c:544] - sqlite3_step        [text_database.cc:240] - history::TextDatabase::AddPageData(base::Time std::basic_string&amp;lt;char std::char_traits&amp;lt;char&amp;gt; std::allocator&amp;lt;char&amp;gt; &amp;gt; const &amp;amp; std::basic_string&amp;lt;char std::char_traits&amp;lt;char&amp;gt; std::allocator&amp;lt;char&amp;gt; &amp;gt; const &amp;amp; std::basic_string&amp;lt;char std::char_traits&amp;lt;char&amp;gt; std::allocator&amp;lt;char&amp;gt; &amp;gt; const &amp;amp;) [text_database_manager.cc:310] - history::TextDatabaseManager::AddPageData(GURL const &amp;amp; __int64 __int64 base::Time std::basic_string&amp;lt;wchar_t std::char_traits&amp;lt;wchar_t&amp;gt; std::allocator&amp;lt;wchar_t&amp;gt; &amp;gt; const &amp;amp; std::basic_string&amp;lt;wchar_t std::char_traits&amp;lt;wchar_t&amp;gt; std::allocator&amp;lt;wchar_t&amp;gt; &amp;gt; const &amp;amp;) [text_database_manager.cc:253] - history::TextDatabaseManager::AddPageContents(GURL const &amp;amp; std::basic_string&amp;lt;wchar_t std::char_traits&amp;lt;wchar_t&amp;gt; std::allocator&amp;lt;wchar_t&amp;gt; &amp;gt; const &amp;amp;)     [history_backend.cc:1165] - history::HistoryBackend::SetPageContents(GURL const &amp;amp; std::basic_string&amp;lt;wchar_t std::char_traits&amp;lt;wchar_t&amp;gt; std::allocator&amp;lt;wchar_t&amp;gt; &amp;gt; const &amp;amp;)                  [task.h:312] - RunnableMethod&amp;lt;history::HistoryBackend void ( history::HistoryBackend::*)(GURL const &amp;amp; std::basic_string&amp;lt;wchar_t std::char_traits&amp;lt;wchar_t&amp;gt; std::allocator&amp;lt;wchar_t&amp;gt; &amp;gt; const &amp;amp;) Tuple2&amp;lt;GURL std::basic_string&amp;lt;wchar_t std::char_traits&amp;lt;wchar_t&amp;gt; std::allocator&amp;lt;wchar_t&amp;gt; &amp;gt; &amp;gt; &amp;gt;::Run()         [message_loop.cc:308] - MessageLoop::RunTask(Task *)         [message_loop.cc:316] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;amp;)         [message_loop.cc:408] - MessageLoop::DoWork()  [message_pump_default.cc:50] - base::MessagePumpDefault::Run(base::MessagePump::Delegate *)         [message_loop.cc:197] - MessageLoop::RunInternal()         [message_loop.cc:180] - MessageLoop::RunHandler()         [message_loop.cc:154] - MessageLoop::Run()               [thread.cc:156] - base::Thread::ThreadMain()   [platform_thread_win.cc:26] - `anonymous namespace&amp;#39;::ThreadFunc(void *)     [kernel32.dll+0x0000b682] - BaseThreadStart  </pre>