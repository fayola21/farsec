<title>Issue 3184 -   chromium -    apply and call does not applied on this object - Project Hosting on Google Code</title> <pre> Product Version      : 0.2.149.30    Safari 3: OK  Firefox 3: OK  IE 7: OK  IE 6: OK  Opera 9: OK      Code like this :  ==========================================================================  Object.extend = function (dest  source) {  	for (property in source) dest[property] = source[property];  	return dest;  };    Object.extend ( Function.prototype   {  	wrap : function (wrapper) {  		var method = this;  		var bmethod = (function(_method) {  			return function () {  				this.$$$parentMethodStore$$$ = this.$proceed;  				this.$proceed = function() { return _method.apply(this  arguments); };  			};  		})(method);  		var amethod = function () {  			this.$proceed = this.$$$parentMethodStore$$$;  			if (this.$proceed == undefined) delete this.$proceed;  			delete this.$$$parentMethodStore$$$;  		};  		var value = function() { bmethod.call(this); retval = wrapper.apply(this   arguments); amethod.call(this); return retval; };  		return value;  	}  });    String.prototype.cap = function() {  	return this.charAt(0).toUpperCase() + this.substring(1).toLowerCase();  };    String.prototype.cap = String.prototype.cap.wrap(  	function(each) {  		if (each &amp;&amp; this.indexOf(&quot; &quot;) != -1) {  			return this.split(&quot; &quot;).map(  				function (value) {  					return value.cap();  				}  			).join(&quot; &quot;);  		} else {  			return this.$proceed();  	}  });    Object.extend( Array.prototype   {  	map : function(fun) {  		if (typeof fun != &quot;function&quot;) throw new TypeError();  		var len = this.length;  		var res = new Array(len);  		var thisp = arguments[1];  		for (var i = 0; i &lt; len; i++) { if (i in this) res[i] = fun.call(thisp   this[i]  i  this); }  		return res;  	}  });  document.write(&quot;test test&quot;.cap());  document.write(&quot;test test&quot;.cap(true));  ==========================================================================      Test testTest Test      error occured at &quot;this.$proceed();&quot;  after preceding wrapper was called  $proceed is disappered!  is this a bug? </pre>