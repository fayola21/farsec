<title>Issue 14218 -   chromium -    Valgrind error (leak) in WorkerPool on linux - Project Hosting on Google Code</title> <pre> These errors have reproduced somewhat consistently on linux valgrind bots  following my checking <a href="/p/chromium/source/detail?r=18520">r18520</a>.    This is kind of weird  since AFAICT my check-in does not actually change those codepaths (it just additionally calls out to an observer  but there is no registered observer for this test).    The leak shows up as something created for the worker pool thread  when running the test URLRequestTest.ProxyTunnelRedirectTest          32 bytes in 1 blocks are definitely lost in loss record 53 of 163    operator new(unsigned int) (ome/chrome-bot/valgrind-svn/coregrind/m_replacemalloc/vg_replace_malloc.c:195)    std::string::_Rep::_S_create(unsigned int  unsigned int  std::allocator&lt;char&gt; const&amp;) (/usr/lib/libstdc++.so.6.0.9)    std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;  unsigned int) (/usr/lib/libstdc++.so.6.0.9)    std::string::reserve(unsigned int) (/usr/lib/libstdc++.so.6.0.9)    std::string::append(char const*  unsigned int) (/usr/lib/libstdc++.so.6.0.9)    void StringAppendVT&lt;std::string&gt;(std::string*  std::string::value_type const*  char*) (base/string_util.cc:928)    StringAppendV(std::string*  char const*  char*) (base/string_util.cc:1097)    StringPrintf(char const*  ...) (base/string_util.cc:1108)    (anonymous namespace)::WorkerThread::ThreadMain() (base/worker_pool_linux.cc:71)    ThreadFunc(void*) (base/platform_thread_posix.cc:26)    start_thread (/lib/tls/i686/cmov/libpthread-2.7.so)    14:03:15 valgrind_analyze.py [ERROR] Leak_DefinitelyLost  16 bytes in 1 blocks are definitely lost in loss record 27 of 163    operator new(unsigned int) (ome/chrome-bot/valgrind-svn/coregrind/m_replacemalloc/vg_replace_malloc.c:195)    base::LinuxDynamicThreadPool::PostTask(Task*) (base/worker_pool_linux.cc:137)    WorkerPool::PostTask(tracked_objects::Location const&amp;  Task*  bool) (base/worker_pool_linux.cc:45)    net::HostResolver::Resolve(net::HostResolver::RequestInfo const&amp;  net::AddressList*  CallbackRunner&lt;Tuple1&lt;int&gt; &gt;*  net::HostResolver::Request**) (net/base/host_resolver.cc:277)    net::SingleRequestHostResolver::Resolve(net::HostResolver::RequestInfo const&amp;  net::AddressList*  CallbackRunner&lt;Tuple1&lt;int&gt; &gt;*) (net/base/host_resolver.cc:630)    net::TCPClientSocketPool::ConnectingSocket::Connect(net::HostResolver::RequestInfo const&amp;) (net/base/tcp_client_socket_pool.cc:57)    net::TCPClientSocketPool::RequestSocket(std::string const&amp;  net::HostResolver::RequestInfo const&amp;  int  net::ClientSocketHandle*  CallbackRunner&lt;Tuple1&lt;int&gt; &gt;*)   (net/base/tcp_client_socket_pool.cc:207)    net::ClientSocketHandle::Init(std::string const&amp;  net::HostResolver::RequestInfo const&amp;  int  CallbackRunner&lt;Tuple1&lt;int&gt; &gt;*) (net/base/client_socket_handle.cc:34)    net::HttpNetworkTransaction::DoInitConnection() (net/http/http_network_transaction.cc:587)    net::HttpNetworkTransaction::DoLoop(int) (net/http/http_network_transaction.cc:441)    net::HttpNetworkTransaction::Start(net::HttpRequestInfo const*  CallbackRunner&lt;Tuple1&lt;int&gt; &gt;*) (net/http/http_network_transaction.cc:171)    URLRequestHttpJob::StartTransaction() (net/url_request/url_request_http_job.cc:599)    URLRequestHttpJob::Start() (net/url_request/url_request_http_job.cc:146)    URLRequest::StartJob(URLRequestJob*) (net/url_request/url_request.cc:262)    URLRequest::Start() (net/url_request/url_request.cc:241)    URLRequestTest_ProxyTunnelRedirectTest_Test::TestBody() (net/url_request/url_request_unittest.cc:125)    testing::Test::Run() (testing/gtest/src/gtest.cc:2055)    14:03:15 valgrind_analyze.py [ERROR] Leak_DefinitelyLost  144 bytes in 1 blocks are definitely lost in loss record 94 of 163    calloc (ome/chrome-bot/valgrind-svn/coregrind/m_replacemalloc/vg_replace_malloc.c:368)    allocate_dtv (/lib/ld-2.7.so)    _dl_allocate_tls (/lib/ld-2.7.so)    pthread_create@@GLIBC_2.1 (/lib/tls/i686/cmov/libpthread-2.7.so)    (anonymous namespace)::CreateThread(unsigned int  bool  PlatformThread::Delegate*  unsigned long*) (base/platform_thread_posix.cc:93)    PlatformThread::CreateNonJoinable(unsigned int  PlatformThread::Delegate*) (base/platform_thread_posix.cc:113)    base::LinuxDynamicThreadPool::PostTask(Task*) (base/worker_pool_linux.cc:138)    WorkerPool::PostTask(tracked_objects::Location const&amp;  Task*  bool) (base/worker_pool_linux.cc:45)    net::HostResolver::Resolve(net::HostResolver::RequestInfo const&amp;  net::AddressList*  CallbackRunner&lt;Tuple1&lt;int&gt; &gt;*  net::HostResolver::Request**) (net/base/host_resolver.cc:277)    net::SingleRequestHostResolver::Resolve(net::HostResolver::RequestInfo const&amp;  net::AddressList*  CallbackRunner&lt;Tuple1&lt;int&gt; &gt;*) (net/base/host_resolver.cc:630)    net::TCPClientSocketPool::ConnectingSocket::Connect(net::HostResolver::RequestInfo const&amp;) (net/base/tcp_client_socket_pool.cc:57)    net::TCPClientSocketPool::RequestSocket(std::string const&amp;  net::HostResolver::RequestInfo const&amp;  int  net::ClientSocketHandle*  CallbackRunner&lt;Tuple1&lt;int&gt; &gt;*)   (net/base/tcp_client_socket_pool.cc:207)    net::ClientSocketHandle::Init(std::string const&amp;  net::HostResolver::RequestInfo const&amp;  int  CallbackRunner&lt;Tuple1&lt;int&gt; &gt;*) (net/base/client_socket_handle.cc:34)    net::HttpNetworkTransaction::DoInitConnection() (net/http/http_network_transaction.cc:587)    net::HttpNetworkTransaction::DoLoop(int) (net/http/http_network_transaction.cc:441)    net::HttpNetworkTransaction::Start(net::HttpRequestInfo const*  CallbackRunner&lt;Tuple1&lt;int&gt; &gt;*) (net/http/http_network_transaction.cc:171)    URLRequestHttpJob::StartTransaction() (net/url_request/url_request_http_job.cc:599)    URLRequestHttpJob::Start() (net/url_request/url_request_http_job.cc:146)    URLRequest::StartJob(URLRequestJob*) (net/url_request/url_request.cc:262)    URLRequest::Start() (net/url_request/url_request.cc:241)    URLRequestTest_ProxyTunnelRedirectTest_Test::TestBody() (net/url_request/url_request_unittest.cc:125)    testing::Test::Run() (testing/gtest/src/gtest.cc:2055) </pre>