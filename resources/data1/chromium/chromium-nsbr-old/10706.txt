<title>Issue 10706 -   chromium -    Crash - PluginProcessHost::OnGetCookies - Project Hosting on Google Code</title> <pre> This crash was detected in 2.0.174.0 and was seen in 2.0.173.1. It is currently ranked #22 (based on the relative number of reports in the release).  There have been 3 reports from 3 clients. Search query: http://crash/search?query=Chrome+2.0.174.0+PluginProcessHost%3A%3AOnGetCookies%28unsigned+int%2CGURL+const+%26%2Cstd%3A%3Abasic_string%3Cchar%2Cstd%3A%3Achar_traits%3Cchar%3E%2Cstd%3A%3Aallocator%3Cchar%3E+%3E+*%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=7602615976d7de92 Mini Dump Link: http://crash/file?reportid=7602615976d7de92&amp;name=upload_file_minidump  Uptime: 48 sec User Comments: null OS: Windows Vista or Windows Server 2008 Service Pack 1 CPU Architecture: x86 CPU Info: AuthenticAMD family 15 model 72 stepping 2 rept: null ptype: browser plat: Win32  ---------------------------- *      Loaded Modules      * ----------------------------     chrome.dll     chrome.exe     kernel32.dll     mswsock.dll     ntdll.dll     rpcrt4.dll     user32.dll  ---------------------------- *        Crash Trace       * ---------------------------- [plugin_process_host.cc:561] - PluginProcessHost::OnGetCookies(unsigned int GURL const &amp;amp; std::basic_string&amp;lt;char std::char_traits&amp;lt;char&amp;gt; std::allocator&amp;lt;char&amp;gt; &amp;gt; *)  [ipc_message_utils.h:1295] - IPC::MessageWithReply&amp;lt;Tuple2&amp;lt;int GURL&amp;gt; Tuple1&amp;lt;std::basic_string&amp;lt;char std::char_traits&amp;lt;char&amp;gt; std::allocator&amp;lt;char&amp;gt; &amp;gt; &amp;amp;&amp;gt; &amp;gt;::Dispatch&amp;lt;PluginProcessHost void ( PluginProcessHost::*)(unsigned int GURL const &amp;amp; std::basic_string&amp;lt;char std::char_traits&amp;lt;char&amp;gt; std::allocator&amp;lt;char&amp;gt; &amp;gt; *)&amp;gt;(IPC::Message const * PluginProcessHost * void ( PluginProcessHost::*)(unsigned int GURL const &amp;amp; std::basic_string&amp;lt;char std::char_traits&amp;lt;char&amp;gt; std::allocator&amp;lt;char&amp;gt; &amp;gt; *)) [plugin_process_host.cc:501] - PluginProcessHost::OnMessageReceived(IPC::Message const &amp;amp;) [child_process_host.cc:161] - ChildProcessHost::ListenerHook::OnMessageReceived(IPC::Message const &amp;amp;)    [ipc_channel_win.cc:307] - IPC::Channel::ChannelImpl::ProcessIncomingMessages(base::MessagePumpForIO::IOContext * unsigned long)    [ipc_channel_win.cc:401] - IPC::Channel::ChannelImpl::OnIOCompleted(base::MessagePumpForIO::IOContext * unsigned long unsigned long)   [message_pump_win.cc:504] - base::MessagePumpForIO::WaitForIOCompletion(unsigned long base::MessagePumpForIO::IOHandler *)   [message_pump_win.cc:449] - base::MessagePumpForIO::DoRunLoop()    [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)     [message_pump_win.h:78] - base::MessagePumpWin::Run(base::MessagePump::Delegate *)       [message_loop.cc:201] - MessageLoop::RunInternal()       [message_loop.cc:184] - MessageLoop::RunHandler()       [message_loop.cc:158] - MessageLoop::Run()             [thread.cc:156] - base::Thread::ThreadMain() [platform_thread_win.cc:26] - `anonymous namespace&amp;#39;::ThreadFunc(void *)   [kernel32.dll+0x00044910] - BaseThreadInitThunk      [ntdll.dll+0x0003e4b5] - __RtlUserThreadStart      [ntdll.dll+0x0003e488] - _RtlUserThreadStart  </pre>