<title>Issue 21525 -   chromium -    ExtensionAPIClientTest failed in a weird way - Project Hosting on Google Code</title> <pre> [ RUN      ] ExtensionAPIClientTest.GetTab    ==== Stack trace ============================================    Security context: 0BAD6505 &lt;JS Object&gt;#0#      1: ParseJSONUnfiltered(this=0BAD6AB1 &lt;JS Object&gt;#1# text=0A04C889 &lt;Very   long string[41631]&gt;#2#)      2: parse(this=0BAD68B1 &lt;a JSON&gt;&gt;#3# text=0A04C889 &lt;Very long   string[41631]&gt;#2# reviver=052C0101 &lt;undefined&gt;)      3: arguments adaptor frame: 1-&gt;2      4: /* anonymous */(this=0BAD6581 &lt;JS Global   Object&gt;#4# extensionId=0A04C251 &lt;String[0]: &gt;)      6: dispatch(this=0A031A81 &lt;JS Object&gt;#5# varargs=0A04C251 &lt;String[0]:   &gt;)      7: /* anonymous */(this=0A04C29D &lt;an Object&gt;&gt;#6# extensionId=0A04C251   &lt;String[0]: &gt;)    ==== Details ================================================    [1]: ParseJSONUnfiltered(this=0BAD6AB1 &lt;JS Object&gt;#1# text=0A04C889 &lt;Very   long string[41631]&gt;#2#) {    // stack-allocated locals    var f = 052C0101 &lt;undefined&gt;    var s = 0A04C889 &lt;Very long string[41631]&gt;#2#    // expression stack (top to bottom)    [03] : 052C016D &lt;true&gt;    [02] : 0A056B41 &lt;Very long string[41633]&gt;#7#  --------- s o u r c e   c o d e ---------  function ParseJSONUnfiltered(text) {?  var s = $String(text);?  var f =   %CompileString(&quot;(&quot; + text + &quot;)&quot;  true);?  return f();?}  -----------------------------------------  }    [2]: parse(this=0BAD68B1 &lt;a JSON&gt;&gt;#3# text=0A04C889 &lt;Very long   string[41631]&gt;#2# reviver=052C0101 &lt;undefined&gt;) {    // stack-allocated locals    var unfiltered = 052C0101 &lt;undefined&gt;    // expression stack (top to bottom)    [01] : 052CD015 &lt;String[19]: ParseJSONUnfiltered&gt;  --------- s o u r c e   c o d e ---------  function parse(text  reviver) {?  var unfiltered =   ParseJSONUnfiltered(text);?  if ((typeof(reviver) === 'function')) {?      return Revive({'': unfiltered}  ''  reviver);?  } else {?    return   unfiltered;?  }?}  -----------------------------------------  }    [3]: arguments adaptor frame: 1-&gt;2 {    // actual arguments    [00] : 0A04C889 &lt;Very long string[41631]&gt;#2#  }    [4]: /* anonymous */(this=0BAD6581 &lt;JS Global   Object&gt;#4# extensionId=0A04C251 &lt;String[0]: &gt;) {    // stack-allocated locals    var apiDefinitions = 052C0101 &lt;undefined&gt;    // heap-allocated locals    var apiFunctions = 0A04C529 &lt;an Object&gt;&gt;#8#    // expression stack (top to bottom)    [01] : 052C8921 &lt;String[5]: parse&gt;  --------- s o u r c e   c o d e ---------  function (extensionId) {?    chrome.extension = new   chrome.Extension(extensionId);??    // TODO(mpcomplete): chrome.self is   deprecated.  Remove it at 1.0.?    //   <a href="http://code.google.com/p/chromium/issues/detail?id=16356?">http://code.google.com/p/chromium/issues/detail?id=16356?</a>    chrome.self =   chrome.extension;??    // |apiFunctions| is a hash of name -&gt; object tha...    -----------------------------------------  }    [6]: dispatch(this=0A031A81 &lt;JS Object&gt;#5# varargs=0A04C251 &lt;String[0]: &gt;)   {    // stack-allocated locals    var .catch-var = 052C0101 &lt;undefined&gt;    // heap-allocated locals    var .arguments = 0A04C2D9 &lt;an Arguments&gt;&gt;#9#    var validationErrors = 052C0101 &lt;undefined&gt;    var i = 0    var args = 0A04C309 &lt;JS array[1]&gt;#10#    var arguments = 0A04C2D9 &lt;an Arguments&gt;&gt;#9#    // expression stack (top to bottom)    [08] : 0A04C309 &lt;JS array[1]&gt;#10#    [07] : 052C010D &lt;null&gt;    [06] : 0BADAFB9 &lt;JS Function&gt;#11#    [05] : 052C02F1 &lt;String[5]: apply&gt;  --------- s o u r c e   c o d e ---------  function (varargs) {?    var args = Array.prototype.slice.call(arguments);?      if (this.validate_) {?      var validationErrors = this.validate_(args);?        if (validationErrors) {?        return validationErrors;?      }?    }?      for (var i = 0; i &lt; this.listeners_.length; i++) {?      try {?          this....    -----------------------------------------  }    [7]: /* anonymous */(this=0A04C29D &lt;an Object&gt;&gt;#6# extensionId=0A04C251   &lt;String[0]: &gt;) {    // expression stack (top to bottom)    [00] : 052C96E5 &lt;String[8]: dispatch&gt;  --------- s o u r c e   c o d e ---------  function (extensionId) {?    chromeHidden.onLoad.dispatch(extensionId);?  }  -----------------------------------------  }    ==== Key         ============================================     #0# 0BAD6505: 0BAD6505 &lt;JS Object&gt;   #1# 0BAD6AB1: 0BAD6AB1 &lt;JS Object&gt;   #2# 0A04C889: 0A04C889 &lt;Very long string[41631]&gt;   #3# 0BAD68B1: 0BAD68B1 &lt;a JSON&gt;&gt;   #4# </pre>