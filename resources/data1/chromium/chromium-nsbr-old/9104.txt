<title>Issue 9104 -   chromium -    Compilation issues with gcc 4.4.0 on linux - Project Hosting on Google Code</title> <pre> I'm using the gcc and glibc from fedora 'rawhide' on fedora 9 to see if it  catches interesting issues that older compilers don't see.    This is intended to be a &quot;tracker bug&quot; with pointers to the actual issues  since they may be in alternate issue trackers eg. skia  webkit etc. etc.     Current issues:    1. Missing includes:  <a href="http://codereview.chromium.org/46092/show">http://codereview.chromium.org/46092/show</a>    2. There is a truckload of strict aliasing issues of various flavours that  show up when doing an opt build. I've only filed one bug so far:    <a href="http://code.google.com/p/skia/issues/detail?id=18">http://code.google.com/p/skia/issues/detail?id=18</a>    There are more strict aliasing issues in:    WebKit/WebCore/platform/text/StringImpl.h:199: warning: dereferencing  pointer 'data' does break strict-aliasing rules    WebKit/WebCore/platform/text/StringImpl.h:200: warning: dereferencing  pointer '&lt;anonymous&gt;' does break strict-aliasing rules    WebKit/WebCore/platform/graphics/skia/ImageBufferSkia.cpp:217: warning:  dereferencing type-punned pointer will break strict-aliasing rules    and so on.    I'll post a full list after logging the issues in the relevant bugtrackers  which is likely to be a slow process.    Some interesting URLs for reading about strict aliasing:    <a href="http://www.cellperformance.com/mike_acton/2006/06/understanding_strict_aliasing.html">http://www.cellperformance.com/mike_acton/2006/06/understanding_strict_aliasing.html</a>    <a href="http://patrakov.blogspot.com/2009/03/dont-use-old-dtoac.html">http://patrakov.blogspot.com/2009/03/dont-use-old-dtoac.html</a>    <a href="http://gcc.gnu.org/onlinedocs/gcc-4.3.2/gcc/Optimize-Options.html#index-fstrict_002daliasing-721">http://gcc.gnu.org/onlinedocs/gcc-4.3.2/gcc/Optimize-Options.html#index-fstrict_002daliasing-721</a>    Compiling chrome in opt mode with -fno-strict-aliasing for the affected  parts of the code does result in a working Hammer/chrome which is encouraging. </pre>