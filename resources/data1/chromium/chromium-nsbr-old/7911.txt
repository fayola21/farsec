<title>Issue 7911 -   chromium -    Crash - RtlInitializeCriticalSection - Project Hosting on Google Code</title> <pre> This crash was detected in 2.0.164.0 and was seen in 2.0.162.0. Search query: http://crash/search?query=Chrome+2.0.164.0+RtlInitializeCriticalSection ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=f63f0e394dd15564 Mini Dump Link: http://crash/file?reportid=f63f0e394dd15564&amp;name=upload_file_minidump  Uptime: 140 sec User Comments: null OS: Windows XP Service Pack 3 CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 23 stepping 10 rept: null ptype: browser plat: Win32  ---------------------------- *      Loaded Modules      * ----------------------------     chrome.dll     chrome.exe     advapi32.dll     kernel32.dll     mswsock.dll     ntdll.dll     user32.dll     userenv.dll  ---------------------------- *        Crash Trace       * ----------------------------       [ntdll.dll+0x00011760] - RtlInitializeCriticalSection               [malloc.c:163] - malloc                  [mem1.c:43] - sqlite3MemMalloc               [malloc.c:228] - mallocWithAlarm               [malloc.c:251] - sqlite3Malloc               [malloc.c:616] - sqlite3DbMallocRaw               [vdbemem.c:95] - sqlite3VdbeMemGrow              [vdbemem.c:623] - sqlite3VdbeMemSetStr             [vdbeapi.c:1049] - bindText             [vdbeapi.c:1113] - sqlite3_bind_text        [sqlite_utils.cc:280] - SQLStatement::bind_text(int char const * int void (*)(void *))         [sqlite_utils.h:241] - SQLStatement::bind_string(int std::basic_string&amp;lt;char std::char_traits&amp;lt;char&amp;gt; std::allocator&amp;lt;char&amp;gt; &amp;gt; const &amp;amp;)        [url_database.cc:135] - history::URLDatabase::AddURLInternal(history::URLRow const &amp;amp; bool)     [history_backend.cc:614] - history::HistoryBackend::AddPageVisit(GURL const &amp;amp; base::Time __int64 unsigned int)     [history_backend.cc:422] - history::HistoryBackend::AddPage(scoped_refptr&amp;lt;history::HistoryAddPageArgs&amp;gt;)                 [task.h:312] - RunnableMethod&amp;lt;history::HistoryBackend void ( history::HistoryBackend::*)(scoped_refptr&amp;lt;history::HistoryAddPageArgs&amp;gt;) Tuple1&amp;lt;scoped_refptr&amp;lt;history::HistoryAddPageArgs&amp;gt; &amp;gt; &amp;gt;::Run()        [message_loop.cc:308] - MessageLoop::RunTask(Task *)        [message_loop.cc:316] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;amp;)        [message_loop.cc:408] - MessageLoop::DoWork() [message_pump_default.cc:50] - base::MessagePumpDefault::Run(base::MessagePump::Delegate *)        [message_loop.cc:197] - MessageLoop::RunInternal()        [message_loop.cc:180] - MessageLoop::RunHandler()        [message_loop.cc:154] - MessageLoop::Run()              [thread.cc:156] - base::Thread::ThreadMain()  [platform_thread_win.cc:26] - `anonymous namespace&amp;#39;::ThreadFunc(void *)    [kernel32.dll+0x0000b712] - BaseThreadStart  </pre>