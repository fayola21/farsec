<title>Issue 22655 -   chromium -    Crash - tcmalloc::ThreadCache::FreeList::PopRange(int void * * void * *) - Project Hosting on Google Code</title> <pre> Chrome 3.0.195.21  (Not sure if this is the same as <a title="Crash - tcmalloc::ThreadCache::FreeList::PopRange(int void * * void * *)" class=closed_ref href="/p/chromium/issues/detail?id=17027"> issue 17027 </a> and <a title="Crash - tcmalloc::ThreadCache::FreeList::PopRange(int void * * void * *)" class=closed_ref href="/p/chromium/issues/detail?id=15588"> issue 15588 </a>  but stack for   crashed thread is somewhat different. Please feel free to dup)      Full report at: http://crash/reportdetail?  reportid=e1dbbd5e1b9cd06d#crashing_thread    Stack trace:    Thread 14 *CRASHED* (EXCEPTION_ACCESS_VIOLATION @0xffffffffacc3c000)    0x02012c1d	 [chrome.dll	 - thread_cache.h:222]	   tcmalloc::ThreadCache::FreeList::PopRange(int void * * void * *)  0x02012e68	 [chrome.dll	 - thread_cache.cc:241]	   tcmalloc::ThreadCache::ReleaseToCentralCache(tcmalloc::ThreadCache::FreeLis  t * unsigned int int)  0x02012ec3	 [chrome.dll	 - thread_cache.cc:260]	   tcmalloc::ThreadCache::Scavenge()  0x0201060c	 [chrome.dll	 - thread_cache.h:382]	   tcmalloc::ThreadCache::Deallocate(void * unsigned int)  0x020113d6	 [chrome.dll	 - tcmalloc.cc:847]	 `anonymous   namespace'::do_free_with_callback(void * void (*)(void *))  0x020c7d38	 [chrome.dll	 - deque:614]	   std::deque&lt;CallbackRunner&lt;Tuple1&lt;media::VideoFrame *&gt; &gt;   * std::allocator&lt;CallbackRunner&lt;Tuple1&lt;media::VideoFrame *&gt; &gt; *&gt; &gt;::_Tidy()  0x01ffa59f	 [chrome.dll	 - deque:622]	   std::deque&lt;MessageLoop::PendingTask std::allocator&lt;MessageLoop::PendingTask  &gt;   &gt;::operator=(std::deque&lt;MessageLoop::PendingTask std::allocator&lt;MessageLoop  ::PendingTask&gt; &gt; const &amp;)  0x01ffa53c	 [chrome.dll	 - utility:19]	   std::swap&lt;std::queue&lt;MessageLoop::PendingTask std::deque&lt;MessageLoop::Pendi  ngTask std::allocator&lt;MessageLoop::PendingTask&gt; &gt; &gt;   &gt;(std::queue&lt;MessageLoop::PendingTask std::deque&lt;MessageLoop::PendingTask s  td::allocator&lt;MessageLoop::PendingTask&gt; &gt; &gt;   &amp; std::queue&lt;MessageLoop::PendingTask std::deque&lt;MessageLoop::PendingTask s  td::allocator&lt;MessageLoop::PendingTask&gt; &gt; &gt; &amp;)  0x01ff9d64	 [chrome.dll	 - message_loop.cc:356]	   MessageLoop::ReloadWorkQueue()  0x01ff9e9d	 [chrome.dll	 - message_loop.cc:413]	   MessageLoop::DoWork()  0x02009d87	 [chrome.dll	 - message_pump_default.cc:50]	   base::MessagePumpDefault::Run(base::MessagePump::Delegate *)  0x01ff9b79	 [chrome.dll	 - message_loop.cc:198]	   MessageLoop::RunInternal()  0x01ff9b48	 [chrome.dll	 - message_loop.cc:181]	   MessageLoop::RunHandler()  0x01ff9aeb	 [chrome.dll	 - message_loop.cc:155]	 MessageLoop::Run()  0x01ffd658	 [chrome.dll	 - thread.cc:156]	   base::Thread::ThreadMain()  0x01ffb025	 [chrome.dll	 - platform_thread_win.cc:26]	 `anonymous   namespace'::ThreadFunc(void *)  0x7c80b698	 [kernel32.dll	 + 0x0000b698]	 BaseThreadStart </pre>