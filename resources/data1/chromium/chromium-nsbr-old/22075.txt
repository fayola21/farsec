<title>Issue 22075 -   chromium -    Crash - malloc SkBlurMask::Blur - Project Hosting on Google Code</title> <pre> This crash was detected in 4.0.206.1 and appears to be a regression from 4.0.203.2. It is currently ranked #8 (based on the relative number of reports in the release).  There have been 137 reports from 123 clients. Search query: http://crash/search?query=Chrome+4.0.206.1+malloc ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=1359c15ee541edc3 Mini Dump Link: http://crash/file?reportid=1359c15ee541edc3&amp;name=upload_file_minidump  Uptime: 1 sec User Comments: null OS: Windows Vista or Windows Server 2008 Service Pack 1 CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 14 stepping 8 rept: null ptype: null plat: null crash type:(EXCEPTION_BREAKPOINT@0x543e307b)  ---------------------------- *        Crash Trace       * ----------------------------      [chrome_dll_main.cc:135] - `anonymous namespace'::InvalidParameter(wchar_t const * wchar_t const * wchar_t const * unsigned int unsigned int)        [allocator_shim.cc:74] - call_new_handler       [allocator_shim.cc:120] - malloc [skmemory_new_handler.cpp:52] - sk_malloc_flags(unsigned int unsigned int)          [skblurmask.cpp:251] - SkBlurMask::Blur(SkMask * SkMask const &amp; float SkBlurMask::Style)     [skblurmaskfilter.cpp:90] - SkBlurMaskFilterImpl::filterMask(SkMask * SkMask const &amp; SkMatrix const &amp; SkIPoint *)         [skmaskfilter.cpp:44] - SkMaskFilter::filterPath(SkPath const &amp; SkMatrix const &amp; SkRegion const &amp; SkBounder * SkBlitter *)              [skdraw.cpp:855] - SkDraw::drawPath(SkPath const &amp; SkPaint const &amp; SkMatrix const * bool)             [skdevice.cpp:64] - SkDevice::drawPath(SkDraw const &amp; SkPath const &amp; SkPaint const &amp;)           [skcanvas.cpp:1069] - SkCanvas::drawPath(SkPath const &amp; SkPaint const &amp;) [graphicscontextskia.cpp:782] - WebCore::GraphicsContext::fillRoundedRect(WebCore::IntRect const &amp; WebCore::IntSize const &amp; WebCore::IntSize const &amp; WebCore::IntSize const &amp; WebCore::IntSize const &amp; WebCore::Color const &amp;) [renderboxmodelobject.cpp:1244] - WebCore::RenderBoxModelObject::paintBoxShadow(WebCore::GraphicsContext * int int int int WebCore::RenderStyle const * WebCore::ShadowStyle bool bool)           [renderbox.cpp:615] - WebCore::RenderBox::paintBoxDecorations(WebCore::RenderObject::PaintInfo &amp; int int)        [renderblock.cpp:1674] - WebCore::RenderBlock::paintObject(WebCore::RenderObject::PaintInfo &amp; int int)        [renderblock.cpp:1503] - WebCore::RenderBlock::paint(WebCore::RenderObject::PaintInfo &amp; int int)        [renderlayer.cpp:2210] - WebCore::RenderLayer::paintLayer(WebCore::RenderLayer * WebCore::GraphicsContext * WebCore::IntRect const &amp; WebCore::PaintRestriction WebCore::RenderObject * WTF::HashMap&lt;WebCore::OverlapTestRequestClient * WebCore::IntRect WTF::PtrHash&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::IntRect&gt; &gt; * unsigned int)        [renderlayer.cpp:2263] - WebCore::RenderLayer::paintLayer(WebCore::RenderLayer * WebCore::GraphicsContext * WebCore::IntRect const &amp; WebCore::PaintRestriction WebCore::RenderObject * WTF::HashMap&lt;WebCore::OverlapTestRequestClient * WebCore::IntRect WTF::PtrHash&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::IntRect&gt; &gt; * unsigned int)        [renderlayer.cpp:2263] - WebCore::RenderLayer::paintLayer(WebCore::RenderLayer * WebCore::GraphicsContext * WebCore::IntRect const &amp; WebCore::PaintRestriction WebCore::RenderObject * WTF::HashMap&lt;WebCore::OverlapTestRequestClient * WebCore::IntRect WTF::PtrHash&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::IntRect&gt; &gt; * unsigned int)        [renderlayer.cpp:2040] - WebCore::RenderLayer::paint(WebCore::GraphicsContext * WebCore::IntRect const &amp; WebCore::PaintRestriction WebCore::RenderObject *)          [frameview.cpp:1585] - WebCore::FrameView::paintContents(WebCore::GraphicsContext * WebCore::IntRect const &amp;)          [scrollview.cpp:773] - WebCore::ScrollView::paint(WebCore::GraphicsContext * WebCore::IntRect const &amp;)       [webframe_impl.cc:1569] - WebFrameImpl::Paint(skia::PlatformCanvas * WebKit::WebRect const &amp;)        [webview_impl.cc:1001] - WebViewImpl::paint(skia::PlatformCanvas * WebKit::WebRect const &amp;)        [render_widget.cc:379] - RenderWidget::PaintRect(gfx::Rect const &amp; skia::PlatformCanvas *)        [render_widget.cc:427] - RenderWidget::DoDeferredPaint()        [render_widget.cc:386] - RenderWidget::CallDoDeferredPaint()                  [task.h:307] - RunnableMethod&lt;RenderWidget void ( RenderWidget::*)(void) Tuple0&gt;::Run()         [message_loop.cc:314] - MessageLoop::RunTask(Task *)         [message_loop.cc:322] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;)         [message_loop.cc:429] - MessageLoop::DoWork()  [message_pump_default.cc:50] - base::MessagePumpDefault::Run(base::MessagePump::Delegate *)         [message_loop.cc:199] - MessageLoop::RunInternal()         [message_loop.cc:181] - MessageLoop::RunHandler()         [message_loop.cc:155] - MessageLoop::Run()        [renderer_main.cc:162] - RendererMain(MainFunctionParams const &amp;)      [chrome_dll_main.cc:561] - ChromeMain  [google_update_client.cc:96] - google_update::GoogleUpdateClient::Launch(HINSTANCE__ * sandbox::SandboxInterfaceInfo * wchar_t * char const * int *)  ---------------------------- *      Loaded Modules      * ----------------------------     avcodec-52.dll     avformat-52.dll     avutil-50.dll     chrome.dll     icudt38.dll     chrome.exe     Wldap32.dll     advapi32.dll     gdi32.dll     imm32.dll     kernel32.dll     lpk.dll     msctf.dll     msvcrt.dll     netapi32.dll     normaliz.dll     nsi.dll     ntdll.dll     ntmarta.dll     ole32.dll     oleacc.dll     oleaut32.dll     psapi.dll     rpcrt4.dll     samlib.dll     secur32.dll     shell32.dll     shlwapi.dll     t2embed.dll     user32.dll     userenv.dll     usp10.dll     uxtheme.dll     version.dll     winmm.dll     ws2_32.dll     comctl32.dll  </pre>