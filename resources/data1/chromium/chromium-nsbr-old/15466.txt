<title>Issue 15466 -   chromium -    JsonDoubleQuote (std::string) is broken for non-ASCII characters - Project Hosting on Google Code</title> <pre> std::string version of JsonDoubleQuote treats a byte outside [0x32  0x7E]   as a unicode codepoint. Obviously  that does not work (see <a title="Regression: File listing for file:///... is garbled if files/directories have non-ascii names." class=closed_ref href="/p/chromium/issues/detail?id=13229"> issue 13229 </a> and   <a title="Non-ASCII characters will be displayed as garbage using FTP" class=closed_ref href="/p/chromium/issues/detail?id=2939"> issue 2939 </a>) because the encoding of std::string is not defined (can be UTF-  8 or any other 8bit encodings).      A few alternatives (or combinations thereof)    1. Check for UTF-8ness and if so  convert to UTF-16 and call the string16   version. Otherwise  assume the native encoding or try to detect the   encoding or other heuristics.    2. Fix callers (there are only few) to always use the string16 version when   the encoding is known (or can be detected / determined) and remove   std::string version    3. At the minimum  we have to add a very prominent warning about the   std::string version.     In any case  we should prevent any random non-ASCII bytes (&gt;= 0x80) from   being escaped to 'u00XX'.  </pre>