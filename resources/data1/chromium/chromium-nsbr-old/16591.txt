<title>Issue 16591 -   chromium -    Crash - tcmalloc::ThreadCache::Allocate(unsigned int) - Project Hosting on Google Code</title> <pre> This crash was detected in 3.0.193.0 and appears to be a regression from 3.0.192.1. It is currently ranked #2 (based on the relative number of reports in the release).  There have been 209 reports from 174 clients. Search query: http://crash/search?query=Chrome+3.0.193.0+tcmalloc%3A%3AThreadCache%3A%3AAllocate%28unsigned+int%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=38a6568c90a40fa6 Mini Dump Link: http://crash/file?reportid=38a6568c90a40fa6&amp;name=upload_file_minidump  Uptime: 32750 sec User Comments: null OS: Windows XP Service Pack 3 CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 14 stepping 8 rept: null ptype: browser plat: Win32 crash type:(EXCEPTION_ACCESS_VIOLATION@0xffffffff9d53c000)  ---------------------------- *        Crash Trace       * ----------------------------          [thread_cache.h:364] - tcmalloc::ThreadCache::Allocate(unsigned int)             [tcmalloc.cc:793] - `anonymous namespace'::do_malloc(unsigned int)            [tcmalloc.cc:1059] - `anonymous namespace'::cpp_alloc(unsigned int bool)             [tcmalloc.cc:296] - operator new[](unsigned int)                 [xmemory:146] - std::allocator&lt;wchar_t&gt;::allocate(unsigned int)                [xstring:2010] - std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt;::_Copy(unsigned int unsigned int)                [xstring:2040] - std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt;::_Grow(unsigned int bool)                [xstring:1669] - std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt;::reserve(unsigned int)      [string_util_icu.cc:227] - UTF8ToWide(char const * unsigned int std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt; *)      [string_util_icu.cc:217] - UTF8ToWide(StringPiece const &amp;)         [sqlite_utils.cc:401] - SQLStatement::column_wstring(int std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt; *) [visitsegment_database.cc:316] - history::VisitSegmentDatabase::QuerySegmentUsage(base::Time const &amp; int std::vector&lt;PageUsageData * std::allocator&lt;PageUsageData *&gt; &gt; *)     [history_backend.cc:1174] - history::HistoryBackend::QueryTopURLsAndRedirects(scoped_refptr&lt;CancelableRequest1&lt;CallbackRunner&lt;Tuple2&lt;std::vector&lt;GURL std::allocator&lt;GURL&gt; &gt; * std::map&lt;GURL scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; std::less&lt;GURL&gt; std::allocator&lt;std::pair&lt;GURL const  scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; &gt; &gt; &gt; *&gt; &gt; Tuple2&lt;std::vector&lt;GURL std::allocator&lt;GURL&gt; &gt; std::map&lt;GURL scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; std::less&lt;GURL&gt; std::allocator&lt;std::pair&lt;GURL const  scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; int)                  [task.h:307] - RunnableMethod&lt;history::HistoryBackend void ( history::HistoryBackend::*)(scoped_refptr&lt;CancelableRequest1&lt;CallbackRunner&lt;Tuple2&lt;std::vector&lt;GURL std::allocator&lt;GURL&gt; &gt; * std::map&lt;GURL scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; std::less&lt;GURL&gt; std::allocator&lt;std::pair&lt;GURL const  scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; &gt; &gt; &gt; *&gt; &gt; Tuple2&lt;std::vector&lt;GURL std::allocator&lt;GURL&gt; &gt; std::map&lt;GURL scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; std::less&lt;GURL&gt; std::allocator&lt;std::pair&lt;GURL const  scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; int) Tuple2&lt;scoped_refptr&lt;CancelableRequest1&lt;CallbackRunner&lt;Tuple2&lt;std::vector&lt;GURL std::allocator&lt;GURL&gt; &gt; * std::map&lt;GURL scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; std::less&lt;GURL&gt; std::allocator&lt;std::pair&lt;GURL const  scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; &gt; &gt; &gt; *&gt; &gt; Tuple2&lt;std::vector&lt;GURL std::allocator&lt;GURL&gt; &gt; std::map&lt;GURL scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; std::less&lt;GURL&gt; std::allocator&lt;std::pair&lt;GURL const  scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; int&gt; &gt;::Run()         [message_loop.cc:313] - MessageLoop::RunTask(Task *)         [message_loop.cc:321] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;)         [message_loop.cc:427] - MessageLoop::DoWork()  [message_pump_default.cc:50] - base::MessagePumpDefault::Run(base::MessagePump::Delegate *)         [message_loop.cc:198] - MessageLoop::RunInternal()         [message_loop.cc:181] - MessageLoop::RunHandler()         [message_loop.cc:155] - MessageLoop::Run()               [thread.cc:156] - base::Thread::ThreadMain()   [platform_thread_win.cc:26] - `anonymous namespace'::ThreadFunc(void *)     [kernel32.dll+0x0000b728] - BaseThreadStart  ---------------------------- *      Loaded Modules      * ----------------------------     fi.dll     default.dll     chrome.dll     gears.dll     icudt38.dll     rlz.dll     chrome.exe     mdnsNSP.dll     comctl32.dll     advapi32.dll     apphelp.dll     clbcatq.dll     comres.dll     crypt32.dll     cryptnet.dll     cryptui.dll     cscdll.dll     cscui.dll     dnsapi.dll     dssenh.dll     gdi32.dll     hnetcfg.dll     imagehlp.dll     imm32.dll     iphlpapi.dll     kernel32.dll     lz32.dll     msasn1.dll     mscms.dll     msctf.dll     msvcp60.dll     msvcrt.dll     mswsock.dll     netapi32.dll     ntdll.dll     ntmarta.dll     ole32.dll     oleacc.dll     oleaut32.dll     psapi.dll     rasadhlp.dll     rasapi32.dll     rasman.dll     riched20.dll     rpcrt4.dll     rsaenh.dll     rtutils.dll     samlib.dll     schannel.dll     secur32.dll     sensapi.dll     setupapi.dll     shdocvw.dll     shell32.dll     shlwapi.dll     sxs.dll     t2embed.dll     tapi32.dll     urlmon.dll     user32.dll     userenv.dll     usp10.dll     uxtheme.dll     version.dll     winhttp.dll     wininet.dll     winmm.dll     winspool.drv     wintrust.dll     wldap32.dll     ws2_32.dll     ws2help.dll     wshtcpip.dll     wsock32.dll     xpsp2res.dll  </pre>