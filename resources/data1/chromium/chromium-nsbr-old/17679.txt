<title>Issue 17679 -   chromium -    Coverity reports a FORWARD_NULL defect in PolicyOpcode::Evaluate - Project Hosting on Google Code</title> <pre> Coverity Prevent reports a FORWARD_NULL defect (CID: 321) in  file src/sandbox/src/policy_engine_opcodes.cc  function  PolicyOpcode::Evaluate:    http://chromecoverity:5467/cov.cgi?  events=1838883&amp;line=401&amp;prec=%2Fcov.cgi%3Fc%3DAAAAAADA7g%26checker%3D20%26o  fs%3D100%26q%3D6%26runs%3D38%26t%3D6%26v%3D1&amp;run=38&amp;t=12&amp;v=1#line396    396  	EvalResult PolicyOpcode::Evaluate(const ParameterSet* call_params   397  	                                  size_t param_count  MatchContext*   match) {  398  	  if (NULL == call_params) {  399  	    return EVAL_ERROR;  400  	  }  Event assign_zero: Variable &quot;selected_param&quot; assigned value 0.  401  	  const ParameterSet* selected_param = NULL;  At conditional (1): &quot;this-&gt;parameter_ &gt;= 0&quot; taking false path  402  	  if (parameter_ &gt;= 0) {  403  	    if (static_cast&lt;size_t&gt;(parameter_) &gt;= param_count) {  404  	      return EVAL_ERROR;  405  	    }  406  	    selected_param = &amp;call_params[parameter_];  407  	  }  Event var_deref_model: Variable &quot;selected_param&quot; tracked as NULL was passed   to function &quot;sandbox::PolicyOpcode::EvaluateHelper(const   sandbox::ParameterSet *  sandbox::MatchContext *)&quot; that dereferences it.   [details]  408  	  EvalResult result = EvaluateHelper(selected_param  match);    If parameter_ is &lt; 0  we pass a null selected_param to  EvaluateHelper  which may dereference it.    We believe this is a false positive because EvaluateHelper  only dereferences its 'parameters' argument for certain  opcodes.  parameter_ is -1 for OP_ALWAYS_FALSE and  OP_ALWAYS_TRUE  and for these two opcodes EvaluateHelper  doesn't dereference its 'parameters' argument.    cpu said he will see if he can code this more  defensively. </pre>