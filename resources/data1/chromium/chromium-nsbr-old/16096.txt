<title>Issue 16096 -   chromium -    Thread name leak in PlatformThread::SetName - Project Hosting on Google Code</title> <pre> the posix implementation of SetName is a stub that leaks its argument?    Very common in ui tests.   (Why isn't there a unit test for this?)  To reproduce  do something like  sh tools/valgrind/chrome_test.sh -t ui --gtest_filter=OmniboxTest.Measure    valgrind complains    33 bytes in 1 blocks are definitely lost in loss record 526 of 1 324     at operator new(unsigned int) (vg_replace_malloc.c:212)     by std::string::_Rep::_S_create(unsigned int  unsigned int  std::allocator&lt;char&gt; const&amp;)  (new_allocator.h:92)     by std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;  unsigned int)  (basic_string.tcc:604)     by std::string::reserve(unsigned int) (basic_string.tcc:485)     by std::string::append(char const*  unsigned int) (basic_string.tcc:306)     by void StringAppendVT&lt;std::string&gt;(std::string*  std::string::value_type const*  char*)  (string_util.cc:928)     by StringAppendV(std::string*  char const*  char*) (string_util.cc:1097)     by StringPrintf(char const*  ...) (string_util.cc:1108)     by (anonymous namespace)::WorkerThread::ThreadMain() (worker_pool_linux.cc:71) </pre>