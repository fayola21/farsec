<title>Issue 12982 -   chromium -    Remembering input control values should not apply to buttons. - Project Hosting on Google Code</title> <pre>   1. Change the &quot;value&quot; property of an &lt;input type=&quot;button&quot;...&gt;  2. Navigate away from the page.  3. Use &quot;back&quot; to go back to the page        I expect the button to have its original  source specified  value.  Instead it remembers its new value  which is not appropriate for a newly   loaded page. Example code:     &lt;input id=&quot;input&quot; type=&quot;text&quot;&gt;   &lt;input type=&quot;button&quot; value=&quot;Disable&quot;            onclick=&quot;var inp = document.getElementById('input');                   var disabled = (inp.disabled = !inp.disabled);                   this.value = disabled ? 'Enable' : 'Disable';&quot;&gt;   &lt;a href=&quot;<a href="http://www.google.com/&quot;&gt;Move">http://www.google.com/&quot;&gt;Move</a> on (but do come back)&lt;/a&gt;    Cick the &quot;Disable&quot; button. Click the link. Go back. Now the button   displays &quot;Enable&quot;  but clicking it disables the text control.  (Same happens if you close the browser and reopen it after clicking the   button).    Similar desynchronization between input controls and state can happen if   the button click uses global variables. These are reinitialized if the   page is reopened  and the button text should then be reset.    I.e.  I don't think the remembering of input field values should extend to   buttons as well - the value is not under the user's control  so he can't   correct an incorrectly filled in value.         </pre>