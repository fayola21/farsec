<title>Issue 12187 -   chromium -    Crash in base_unittests involving SystemMonitor observer and NowSingleton - Project Hosting on Google Code</title> <pre> 21:56 &lt;+_ph&gt; time_win.cc has a singleton which gets created on Time::Now   call and adds itself as an observer of               SystemMonitor  21:56 &lt;+_ph&gt; SystemMonitor uses observer_list_threadsafe.h which   &quot;remembers&quot; MessageLoop::current()  21:57 &lt;+_ph&gt; Not every base_unittest has a MessageLoop. So we got multiple   loop creations and destructions.  21:57 &lt;+_ph&gt; At first destruction MessageLoop* remembered by   observer_list_threadsafe.h becomes invalid  21:57 &lt;+_ph&gt; And then  on a any SystemMonitor notification... kaboom!  21:58 &lt;+_ph&gt; I think that a temporary workaround might be disabling   SystemMonitor tests.    Here's how the problematic ObserverListThreadSafe gets created:    &gt;	  base_unittests.exe!ObserverListThreadSafe&lt;base::SystemMonitor::PowerObserve  r&gt;::ObserverListThreadSafe&lt;base::SystemMonitor::PowerObserver&gt;()  Line 55	  C++   	base_unittests.exe!base::SystemMonitor::SystemMonitor()  Line 20 +   0x1b bytes	C++   	  base_unittests.exe!DefaultSingletonTraits&lt;base::SystemMonitor&gt;::New()  Line   21 + 0x1b bytes	C++   	  base_unittests.exe!Singleton&lt;base::SystemMonitor LeakySingletonTraits&lt;base:  :SystemMonitor&gt; base::SystemMonitor&gt;::get()  Line 129 + 0x5 bytes	C++   	base_unittests.exe!base::SystemMonitor::Get()  Line 31	C++   	base_unittests.exe!`anonymous   namespace'::NowSingleton::NowSingleton()  Line 236 + 0x5 bytes	C++   	base_unittests.exe!DefaultSingletonTraits&lt;`anonymous   namespace'::NowSingleton&gt;::New()  Line 21 + 0x1b bytes	C++   	base_unittests.exe!Singleton&lt;`anonymous   namespace'::NowSingleton DefaultSingletonTraits&lt;`anonymous   namespace'::NowSingleton&gt; A0x6fb3a699::NowSingleton&gt;::get()  Line 129 + 0x5   bytes	C++   	base_unittests.exe!base::TimeTicks::Now()  Line 398 + 0x9 bytes	C++   	base_unittests.exe!`anonymous namespace'::InitializeClock()  Line   87 + 0x9 bytes	C++   	base_unittests.exe!base::Time::Now()  Line 117	C++   	base_unittests.exe!tracked_objects::Tracked::Tracked()  Line 59 +   0x39 bytes	C++   	base_unittests.exe!Task::Task()  Line 20 + 0x16 bytes	C++   	base_unittests.exe!base::ObjectWatcher::Watch::Watch()  + 0x16   bytes	C++   	base_unittests.exe!base::ObjectWatcher::StartWatching(void *   object=0x00000e3c  base::ObjectWatcher::Delegate * delegate=0x07730fc8)    Line 49 + 0x24 bytes	C++   	base_unittests.exe!`anonymous   namespace'::DirectoryWatcherImpl::Watch(const FilePath &amp; path={...}    DirectoryWatcher::Delegate * delegate=0x0012f9a0  MessageLoop *   backend_loop=0x00000000  bool recursive=false)  Line 63	C++   	base_unittests.exe!DirectoryWatcher::Watch(const FilePath &amp;   path={...}  DirectoryWatcher::Delegate * delegate=0x0012f9a0  MessageLoop *   backend_loop=0x00000000  bool recursive=false)  Line 43 + 0x2a bytes	C++   	base_unittests.exe!`anonymous   namespace'::DirectoryWatcherTest_NewFile_Test::TestBody()  Line 155 + 0x2f   bytes	C++   	base_unittests.exe!testing::Test::Run()  Line 2030 + 0xf bytes	C++   	base_unittests.exe!testing::internal::TestInfoImpl::Run()  Line   2290	C++   	  base_unittests.exe!testing::internal::TestInfoImpl::RunTest(testing::TestIn  fo * test_info=0x05058ff8)  Line 656	C++   	base_unittests.exe!testing::internal::List&lt;testing::TestInfo   *&gt;::ForEach&lt;void (__cdecl*)(testing::TestInfo *)&gt;(void (testing::TestInfo   *)* functor=0x00421640)  Line 397 + 0x10 bytes	C++   	base_unittests.exe!testing::TestCase::Run()  Line 2383	C++   	base_unittests.exe!testing::TestCase::RunTestCase(testing::TestCase   * test_case=0x05068fd0)  Line 776 + 0xb bytes	C++   	base_unittests.exe!testing::internal::List&lt;testing::TestCase   *&gt;::ForEach&lt;void (__cdecl*)(testing::TestCase *)&gt;(void (testing::TestCase   *)* functor=0x00425100)  Line 397 + 0x10 bytes	C++   	base_unittests.exe!testing::internal::UnitTestImpl::RunAllTests()    Line 3657	C++   	base_unittests.exe!testing::UnitTest::Run()  Line 3376 + 0xb bytes	  C++   	base_unittests.exe!TestSuite::Run()  Line 62 + 0xc bytes	C++   	base_unittests.exe!main(int argc=1  char * * argv=0x04d78fc0)  Line   8 + 0x17 bytes	C++   	base_unittests.exe!__tmainCRTStartup()  Line 327 + 0x19 bytes	C   	base_unittests.exe!mainCRTStartup()  Line 196	C   	kernel32.dll!762c4911() 	   	[Frames below may be incorrect and/or missing  no symbols loaded   for kernel32.dll]	   	ntdll.dll!76e1e4b6() 	   	ntdll.dll!76e1e489() 	    Here's a stack trace with my added debugging code which bails out earlier   in ObserverListThreadSafe (when MessageLoop is no longer valid):    &gt;	base_unittests.exe!DebugUtil::BreakDebugger()  Line 251	C++   	base_unittests.exe!logging::LogMessage::~LogMessage()  Line 522	C++   	  base_unittests.exe!ObserverListThreadSafe&lt;base::SystemMonitor::PowerObserve  r&gt;::WillDestroyCurrentMessageLoop()  Line 124	C++   	base_unittests.exe!MessageLoop::~MessageLoop()  Line 118 + 0x2f   bytes	C++   	base_unittests.exe!`anonymous   namespace'::DirectoryWatcherTest::~DirectoryWatcherTest()  + 0x27 bytes	C++   	base_unittests.exe!`anonymous   namespace'::DirectoryWatcherTest_NewFile_Test::~DirectoryWatcherTest_NewFil  e_Test()  + 0x16 bytes	C++   	base_unittests.exe!`anonymous   namespace'::DirectoryWatcherTest_NewFile_Test::`scalar deleting   destructor'()  + 0x16 bytes	C++   	base_unittests.exe!testing::internal::TestInfoImpl::Run()  Line   2291 + 0x22 bytes	C++   	  base_unittests.exe!testing::internal::TestInfoImpl::RunTest(testing::TestIn  fo * test_info=0x05058ff8)  Line 656	C++   	base_unittests.exe!testing::internal::List&lt;testing::TestInfo   *&gt;::ForEach&lt;void (__cdecl*)(testing::TestInfo *)&gt;(void (testing::TestInfo   *)* functor=0x00421640)  Line 397 + 0x10 bytes	C++   	base_unittests.exe!testing::TestCase::Run()  Line 2383	C++   	base_unittests.exe!testing::TestCase::RunTestCase(testing::TestCase   * test_case=0x05068fd0)  Line 776 + 0xb bytes	C++   	base_unittests.exe!testing::internal::List&lt;testing::TestCase   *&gt;::ForEach&lt;void (__cdecl*)(testing::TestCase *)&gt;(void (testing::TestCase   *)* functor=0x00425100)  Line 397 + 0x10 bytes	C++   	base_unittests.exe!testing::internal::UnitTestImpl::RunAllTests()    Line 3657	C++   	base_unittests.exe!testing::UnitTest::Run()  Line 3376 + 0xb bytes	  C++   	base_unittests.exe!TestSuite::Run()  Line 62 + 0xc bytes	C++   	base_unittests.exe!main(int argc=1  char * * argv=0x04d78fc0)  Line   8 + 0x17 bytes	C++   	base_unittests.exe!__tmainCRTStartup()  Line 327 + 0x19 bytes	C   	base_unittests.exe!mainCRTStartup()  Line 196	C   	kernel32.dll!762c4911() 	   	[Frames below may be incorrect and/or missing  no symbols loaded   for kernel32.dll]	   	ntdll.dll!76e1e4b6() 	   	ntdll.dll!76e1e489() 	    And the actual crash (with ApplicationVerifier):     	ntdll.dll!76e27dfe() 	   	[Frames below may be incorrect and/or missing  no symbols loaded   for ntdll.dll]	   	vrfcore.dll!VerifierStopMessageEx(_AVRF_LAYER_DESCRIPTOR *   LayerDescriptor=0x6715c540  unsigned long StopCode=19  unsigned long   Param1=126185380  unsigned long Param2=1710536150  unsigned long   Param3=3206676  unsigned long Param4=3206704  _AVRF_STOP_EXTRA *   StopExtra=0x00000000  ...)  Line 551	   	vrfcore.dll!VfCoreRedirectedStopMessage(unsigned long Code=19  char   * Message=0x65f41b5c  unsigned long Param1=126185380  char *   Description1=0x65f41b94  unsigned long Param2=1710536150  char *   Description2=0x65f41bb4  unsigned long Param3=3206676  char *   Description3=0x65f41bd4  unsigned long Param4=3206704  char *   Description4=0x65f41c00)  Line 103 + 0x19 bytes	   	vfbasics.dll!VerifierStopMessage(unsigned long Code=19  char *   Message=0x65f41b5c  unsigned long Param1=126185380  char *   Description1=0x65f41b94  unsigned long Param2=1710536150  char *   Description2=0x65f41bb4  unsigned long Param3=3206676  char *   Description3=0x65f41bd4  unsigned long Param4=3206704  char *   Description4=0x65f41c00)  Line 1214	   	vfbasics.dll!AVrfpCheckFirstChanceException(_EXCEPTION_POINTERS *   ExceptionPointers=0x0030ed5c)  Line 1108 + 0x2b bytes	   	vfbasics.dll!AVrfpVectoredExceptionHandler(_EXCEPTION_POINTERS *   ExceptionPointers=0x0030ed5c)  Line 323	   	ntdll.dll!76deae6d() 	   	ntdll.dll!76e1d0da() 	   	ntdll.dll!76e1d14b() 	   	ntdll.dll!76e399f7() 	   	vfbasics.dll!AVrfpRtlEnterCriticalSection2(volatile   _RTL_CRITICAL_SECTION * CriticalSection=0x07856fa4)  Line 3092	  &gt;	base_unittests.exe!LockImpl::Lock()  Line 45 + 0xc bytes	C++   	base_unittests.exe!Lock::Acquire()  Line 16 + 0x16 bytes	C++   	base_unittests.exe!AutoLock::AutoLock(Lock &amp; lock={...})  Line 44	  C++   	base_unittests.exe!MessageLoop::PostTask_Helper(const   tracked_objects::Location &amp; from_here={...}  Task * task=0x077cafc8  int   delay_ms=0  bool nestable=true)  Line 272	C++   	base_unittests.exe!MessageLoop::PostTask(const   tracked_objects::Location &amp; from_here={...}  Task * task=0x077cafc8)  Line   232	C++   	  base_unittests.exe!ObserverListThreadSafe&lt;base::SystemMonitor::PowerObserve  r&gt;::Notify&lt;void (__thiscall   base::SystemMonitor::PowerObserver::*)(base::SystemMonitor   *) Tuple1&lt;base::SystemMonitor *&gt; &gt;(const   UnboundMethod&lt;base::SystemMonitor::PowerObserver void (__thiscall   base::SystemMonitor::PowerObserver::*)(base::SystemMonitor   *) Tuple1&lt;base::SystemMonitor *&gt; &gt; &amp; method={...})  Line 144	C++   	  base_unittests.exe!ObserverListThreadSafe&lt;base::SystemMonitor::PowerObserve  r&gt;::Notify&lt;void (__thiscall   base::SystemMonitor::PowerObserver::*)(base::SystemMonitor   *) base::SystemMonitor *&gt;(void (base::SystemMonitor *)* m=0x010e1e80    base::SystemMonitor * const &amp; a=0x07890ff0)  Line 128	C++   	base_unittests.exe!base::SystemMonitor::NotifySuspend()  Line 68	  C++   	  base_unittests.exe!base::SystemMonitor::ProcessPowerMessage(base::SystemMon  itor::PowerEvent event_id=SUSPEND_EVENT)  Line 49	C++   	  base_unittests.exe!SystemMonitor_PowerNotifications_Test::TestBody()  Line   61	C++   	base_unittests.exe!testing::Test::Run()  Line 2030 + 0xf bytes	C++   	base_unittests.exe!testing::internal::TestInfoImpl::Run()  Line   2290	C++   	  base_unittests.exe!testing::internal::TestInfoImpl::RunTest(testing::TestIn  fo * test_info=0x052e0ff8)  Line 656	C++   	base_unittests.exe!testing::internal::List&lt;testing::TestInfo   *&gt;::ForEach&lt;void (__cdecl*)(testing::TestInfo *)&gt;(void (testing::TestInfo   *)* functor=0x01063d60)  Line 397 + 0x10 bytes	C++   	base_unittests.exe!testing::TestCase::Run()  Line 2383	C++   	base_unittests.exe!testing::TestCase::RunTestCase(testing::TestCase   * test_case=0x052f0fd0)  Line 776 + 0xb bytes	C++   	base_unittests.exe!testing::internal::List&lt;testing::TestCase   *&gt;::ForEach&lt;void (__cdecl*)(testing::TestCase *)&gt;(void (testing::TestCase   *)* functor=0x01067820)  Line 397 + 0x10 bytes	C++   	base_unittests.exe!testing::internal::UnitTestImpl::RunAllTests()    Line 3657	C++   	base_unittests.exe!testing::UnitTest::Run()  Line 3376 + 0xb bytes	  C++   	base_unittests.exe!TestSuite::Run()  Line 62 + 0xc bytes	C++   	base_unittests.exe!main(int argc=1  char * * argv=0x04f08fc0)  Line   8 + 0x17 bytes	C++   	base_unittests.exe!__tmainCRTStartup()  Line 327 + 0x19 bytes	C   	base_unittests.exe!mainCRTStartup()  Line 196	C   	kernel32.dll!762c4911() 	   	ntdll.dll!76e1e4b6() 	   	ntdll.dll!76e1e489() 	   </pre>