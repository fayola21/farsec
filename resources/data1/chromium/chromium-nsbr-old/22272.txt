<title>Issue 22272 -   chromium -    Data race on reference counter from LoadLog - Project Hosting on Google Code</title> <pre> This data race was detected by ThreadSanitizer.    Related to <a href="http://code.google.com/p/chromium/issues/detail?id=18488">http://code.google.com/p/chromium/issues/detail?id=18488</a>    (the following is copied from the discussion here   <a href="http://codereview.chromium.org/215011">http://codereview.chromium.org/215011</a>)  ============  timurrrr wrote  I've reproduced the report on LoadLog  <a href="http://build.chromium.org/buildbot/waterfall.fyi/builders/Modules%20Linux%2">http://build.chromium.org/buildbot/waterfall.fyi/builders/Modules%20Linux%2</a>  0(...  It's a bit damaged due to inlining.  However  you may notice net/base/host_resolver_impl.cc:152 out there.  On that line there is a few Request objects deleted and it contains   LoadLog.  ThreadSanitizer saw acceses to this reference counter from at least two   threads.    I'll re-run the test locally and will have complete (not-inlined)   stacktraces of  both accesses soon.    ============  eroman wrote  5 minutes ago  Ah okay. I think I understand the problem now  thanks!    (If a request is cancelled  the HostResolverImpl::Job will be freed on the  worker thread  so in turn the HostResolverImpl::Request gets freed on the   worker  thread  and calls LoadLog::Release()).    I would like to solve this by clearing the LoadLog within  HostResolverImpl::CancelRequest()  rather than making it   RefCountedThreadSafe.  Can file this bug against me? </pre>