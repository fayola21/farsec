<title>Issue 18975 -   chromium -    Implement networkState and readyState more accurately - Project Hosting on Google Code</title> <pre> Higher priority than our default UI since it effects all UIs built on top of our API.    For starters  our networkState will rarely be LOADED (perhaps if it's file:// otherwise we're continuously LOADING).    Our readyState should reflect how much we can play at this very moment.  What this means is a seek should drop our readyState to   HAVE_METADATA.  When the seek completes we can raise the value back to HAVE_ENOUGH_DATA.  WebKit should pick up on our cues and fire the   corresponding events (waiting  seeking  etc..)    The initial load might be a little tricky... it'd be nice if we can jump to LOADING right away (which is true) and HAVE_METADATA as soon as   possible (so the element can report its size accurately and the page will continue laying out).    CURRENT EVENT OUTPUT:  playing  timeupdate  timeupdate  ...  (seek somewhere)  (time passes  timeupdate stops firing)  seeked  timeupdate  timeupdate  ...    EXPECTED EVENT OUTPUT:  playing  timeupdate  timeupdate  ...  (seek somewhere)  waiting (according to spec  this comes before seeking)  seeking  (time passes  timeupdate stops firing)  seeked  timeupdate  timeupdate  ...      There's also the issue of firing progress events  but that's a separate issue. </pre>