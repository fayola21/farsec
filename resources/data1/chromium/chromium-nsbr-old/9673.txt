<title>Issue 9673 -   chromium -    IPC deserialization with ParamTraits&lt;std::vector&lt;P&gt; &gt; is pesimistic  - Project Hosting on Google Code</title> <pre> The existing code in chromecommonipc_message_utils.h is pessimistic  for ParamTraits&lt;std::vector&lt;P&gt; &gt;::Read()    Beacuse the check:  if (m-&gt;IteratorHasRoomFor(*iter  size * sizeof(P)) returns false for a   large number of common cases such as:    vector&lt;GURL&gt;  vector&lt;std::string&gt;    Because the computation of size * sizeof(P) has no bearing whatsoever on   the actual size of the serialized message.    For example sizeof(std::string) = 28  so say 3 strings will require the   message to be at least 84 bytes long. But the actually serialized message   is just     [[xxxx]google.com][[zzzz][blogger.com]][yyyy][facebook.com]] =   34 + 12 = 46 bytes.    In this case the check fails and the slower loop : for( ){ r-&gt;push_back() }  is used in many common cases.    The only point of the check was to provide protection against a compromised   renderer causing the browser to use too much memory.    We already have a check in ipc_channel_win.cc(282):        if (input_overflow_buf_.size() &gt; (kMaximumMessageSize - bytes_read))    That limits the maximum size of the IPC message and we should mirror that   policy here as well.       </pre>