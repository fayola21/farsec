<title>Issue 16110 -   chromium -    Crash - WebCore::ImageBuffer::context() - Project Hosting on Google Code</title> <pre> This crash was detected in 3.0.191.3 and appears to be a regression from 3.0.191.3. It is currently ranked #4 (based on the relative number of reports in the release).  There have been 21 reports from 17 clients. Search query: http://crash/search?query=Chrome+3.0.191.3+WebCore%3A%3AImageBuffer%3A%3Acontext%28%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=5a48d3f30e165d51 Mini Dump Link: http://crash/file?reportid=5a48d3f30e165d51&amp;name=upload_file_minidump  Uptime: 47 sec User Comments: null OS: Windows Vista or Windows Server 2008 Service Pack 1 CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 15 stepping 13 rept: null ptype: renderer plat: Win32 crash type:(EXCEPTION_ACCESS_VIOLATION@0x0000010c)  ---------------------------- *        Crash Trace       * ----------------------------     [imagebufferskia.cpp:84] - WebCore::ImageBuffer::context()    [transparencywin.cpp:378] - WebCore::TransparencyWin::initializeNewContext()    [transparencywin.cpp:244] - WebCore::TransparencyWin::setupLayerForOpaqueCompositeLayer()    [transparencywin.cpp:198] - WebCore::TransparencyWin::init(WebCore::GraphicsContext * WebCore::TransparencyWin::LayerMode WebCore::TransparencyWin::TransformMode WebCore::IntRect const &amp;)    [fontchromiumwin.cpp:149] - WebCore::`anonymous namespace'::TransparencyAwareFontPainter::initializeForGDI()    [fontchromiumwin.cpp:209] - WebCore::`anonymous namespace'::TransparencyAwareGlyphPainter::TransparencyAwareGlyphPainter(WebCore::GraphicsContext * WebCore::SimpleFontData const * WebCore::GlyphBuffer const &amp; int int WebCore::FloatPoint const &amp;)    [fontchromiumwin.cpp:360] - WebCore::Font::drawGlyphs(WebCore::GraphicsContext * WebCore::SimpleFontData const * WebCore::GlyphBuffer const &amp; int int WebCore::FloatPoint const &amp;)       [fontfastpath.cpp:299] - WebCore::Font::drawGlyphBuffer(WebCore::GraphicsContext * WebCore::GlyphBuffer const &amp; WebCore::TextRun const &amp; WebCore::FloatPoint const &amp;)       [fontfastpath.cpp:272] - WebCore::Font::drawSimpleText(WebCore::GraphicsContext * WebCore::TextRun const &amp; WebCore::FloatPoint const &amp; int int)               [font.cpp:180] - WebCore::Font::drawText(WebCore::GraphicsContext * WebCore::TextRun const &amp; WebCore::FloatPoint const &amp; int int)    [graphicscontext.cpp:328] - WebCore::GraphicsContext::drawText(WebCore::Font const &amp; WebCore::TextRun const &amp; WebCore::IntPoint const &amp; int int)      [inlinetextbox.cpp:286] - WebCore::paintTextWithShadows      [inlinetextbox.cpp:461] - WebCore::InlineTextBox::paint(WebCore::RenderObject::PaintInfo &amp; int int)      [inlineflowbox.cpp:652] - WebCore::InlineFlowBox::paint(WebCore::RenderObject::PaintInfo &amp; int int)      [rootinlinebox.cpp:185] - WebCore::RootInlineBox::paint(WebCore::RenderObject::PaintInfo &amp; int int)  [renderlineboxlist.cpp:203] - WebCore::RenderLineBoxList::paint(WebCore::RenderBoxModelObject * WebCore::RenderObject::PaintInfo &amp; int int)       [renderblock.cpp:1669] - WebCore::RenderBlock::paintContents(WebCore::RenderObject::PaintInfo &amp; int int)       [renderblock.cpp:1758] - WebCore::RenderBlock::paintObject(WebCore::RenderObject::PaintInfo &amp; int int)       [renderblock.cpp:1562] - WebCore::RenderBlock::paint(WebCore::RenderObject::PaintInfo &amp; int int)       [renderblock.cpp:1695] - WebCore::RenderBlock::paintChildren(WebCore::RenderObject::PaintInfo &amp; int int)       [renderblock.cpp:1671] - WebCore::RenderBlock::paintContents(WebCore::RenderObject::PaintInfo &amp; int int)       [renderblock.cpp:1758] - WebCore::RenderBlock::paintObject(WebCore::RenderObject::PaintInfo &amp; int int)       [renderblock.cpp:1562] - WebCore::RenderBlock::paint(WebCore::RenderObject::PaintInfo &amp; int int)       [renderlayer.cpp:2106] - WebCore::RenderLayer::paintLayer(WebCore::RenderLayer * WebCore::GraphicsContext * WebCore::IntRect const &amp; WebCore::PaintRestriction WebCore::RenderObject * WTF::HashMap&lt;WebCore::OverlapTestRequestClient * WebCore::IntRect WTF::PtrHash&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::IntRect&gt; &gt; * unsigned int)       [renderlayer.cpp:2131] - WebCore::RenderLayer::paintLayer(WebCore::RenderLayer * WebCore::GraphicsContext * WebCore::IntRect const &amp; WebCore::PaintRestriction WebCore::RenderObject * WTF::HashMap&lt;WebCore::OverlapTestRequestClient * WebCore::IntRect WTF::PtrHash&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::IntRect&gt; &gt; * unsigned int)       [renderlayer.cpp:2131] - WebCore::RenderLayer::paintLayer(WebCore::RenderLayer * WebCore::GraphicsContext * WebCore::IntRect const &amp; WebCore::PaintRestriction WebCore::RenderObject * WTF::HashMap&lt;WebCore::OverlapTestRequestClient * WebCore::IntRect WTF::PtrHash&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::IntRect&gt; &gt; * unsigned int)       [renderlayer.cpp:2131] - WebCore::RenderLayer::paintLayer(WebCore::RenderLayer * WebCore::GraphicsContext * WebCore::IntRect const &amp; WebCore::PaintRestriction WebCore::RenderObject * WTF::HashMap&lt;WebCore::OverlapTestRequestClient * WebCore::IntRect WTF::PtrHash&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::IntRect&gt; &gt; * unsigned int)       [renderlayer.cpp:2131] - WebCore::RenderLayer::paintLayer(WebCore::RenderLayer * WebCore::GraphicsContext * WebCore::IntRect const &amp; WebCore::PaintRestriction WebCore::RenderObject * WTF::HashMap&lt;WebCore::OverlapTestRequestClient * WebCore::IntRect WTF::PtrHash&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::OverlapTestRequestClient *&gt; WTF::HashTraits&lt;WebCore::IntRect&gt; &gt; * unsigned int)       [renderlayer.cpp:1908] - WebCore::RenderLayer::paint(WebCore::GraphicsContext * WebCore::IntRect const &amp; WebCore::PaintRestriction WebCore::RenderObject *)         [frameview.cpp:1406] - WebCore::FrameView::paintContents(WebCore::GraphicsContext * WebCore::IntRect const &amp;)         [scrollview.cpp:754] - WebCore::ScrollView::paint(WebCore::GraphicsContext * WebCore::IntRect const &amp;)      [webframe_impl.cc:1544] - WebFrameImpl::Paint(skia::PlatformCanvas * WebKit::WebRect const &amp;)       [render_widget.cc:338] - RenderWidget::PaintRect(gfx::Rect const &amp; skia::PlatformCanvas *)       [render_widget.cc:377] - RenderWidget::DoDeferredPaint()          [ipc_message.h:134] - IPC::Message::Dispatch&lt;RenderWidget&gt;(IPC::Message const * RenderWidget * void ( RenderWidget::*)(void))       [render_widget.cc:119] - RenderWidget::OnMessageReceived(IPC::Message const &amp;)         [render_view.cc:418] - RenderView::OnMessageReceived(IPC::Message const &amp;)       [message_router.cc:41] - MessageRouter::RouteMessage(IPC::Message const &amp;)       [message_router.cc:32] - MessageRouter::OnMessageReceived(IPC::Message const &amp;)         [child_thread.cc:86] - ChildThread::OnMessageReceived(IPC::Message const &amp;)                 [task.h:307] - RunnableMethod&lt;SafeBrowsingService void ( SafeBrowsingService::*)(SafeBrowsingService::UnsafeResource const &amp;) Tuple1&lt;SafeBrowsingService::UnsafeResource&gt; &gt;::Run()        [message_loop.cc:309] - MessageLoop::RunTask(Task *)        [message_loop.cc:317] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;)        [message_loop.cc:423] - MessageLoop::DoWork() [message_pump_default.cc:50] - base::MessagePumpDefault::Run(base::MessagePump::Delegate *)        [message_loop.cc:198] - MessageLoop::RunInternal()        [message_loop.cc:181] - MessageLoop::RunHandler()        [message_loop.cc:155] - MessageLoop::Run()              [thread.cc:156] - base::Thread::ThreadMain()  [platform_thread_win.cc:26] - `anonymous namespace'::ThreadFunc(void *)    [kernel32.dll+0x00044910] - BaseThreadInitThunk       [ntdll.dll+0x0003e4b5] - __RtlUserThreadStart       [ntdll.dll+0x0003e488] - _RtlUserThreadStart  ---------------------------- *      Loaded Modules      * ----------------------------     avcodec-52.dll     avformat-52.dll     avutil-50.dll     chrome.dll     icudt38.dll     pthreadGC2.dll     chrome.exe     Wldap32.dll     advapi32.dll     gdi32.dll     imm32.dll     kernel32.dll     lpk.dll     msctf.dll     msvcrt.dll     netapi32.dll     nsi.dll     ntdll.dll     ntmarta.dll     ole32.dll     oleacc.dll     oleaut32.dll     psapi.dll     rpcrt4.dll     samlib.dll     secur32.dll     shell32.dll     shlwapi.dll     t2embed.dll     user32.dll     userenv.dll     usp10.dll     uxtheme.dll     version.dll     winmm.dll     ws2_32.dll     wsock32.dll     comctl32.dll  </pre>