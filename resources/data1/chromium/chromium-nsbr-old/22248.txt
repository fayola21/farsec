<title>Issue 22248 -   chromium -    ExtensionAPIClientTest.GetLastFocusedWindow and .GetCurrentWindow are crashing flakily - Project Hosting on Google Code</title> <pre> <a href="http://build.chromium.org/buildbot/waterfall/builders/Vista%20Tests%20(dbg)">http://build.chromium.org/buildbot/waterfall/builders/Vista%20Tests%20(dbg)</a>  (1)/builds/12548/steps/unit_tests/logs/stdio        [----------] 30 tests from ExtensionAPIClientTest  [ RUN      ] ExtensionAPIClientTest.CallbackDispatching  [       OK ] ExtensionAPIClientTest.CallbackDispatching (389 ms)  [ RUN      ] ExtensionAPIClientTest.GetWindow  [       OK ] ExtensionAPIClientTest.GetWindow (265 ms)  [ RUN      ] ExtensionAPIClientTest.GetCurentWindow  [       OK ] ExtensionAPIClientTest.GetCurentWindow (245 ms)  [ RUN      ] ExtensionAPIClientTest.GetLastFocusedWindow    ==== Stack trace ============================================    Security context: 073EF735 &lt;JS Object&gt;#0#      1: bind(this=073EF7B1 &lt;JS Global Object&gt;#1# obj=0A872001 &lt;an   Object&gt;&gt;#2# func=0BADDE91 &lt;JS Function&gt;#3#)      2: /* anonymous */(this=073EF7B1 &lt;JS Global   Object&gt;#1# functionDef=0A86EC65 &lt;an Object&gt;&gt;#4#)      3: arguments adaptor frame: 2-&gt;1      4: forEach(this=073EF7B1 &lt;JS Global Object&gt;#1# a=0A86EB15 &lt;JS   array[7]&gt;#5# f=0BADDDF5 &lt;JS Function&gt;#6#)      5: /* anonymous */(this=073EF7B1 &lt;JS Global Object&gt;#1# apiDef=0A86E9F5   &lt;an Object&gt;&gt;#7#)      6: arguments adaptor frame: 2-&gt;1      7: forEach(this=073EF7B1 &lt;JS Global Object&gt;#1# a=0A86E575 &lt;JS   array[9]&gt;#8# f=0BADDC69 &lt;JS Function&gt;#9#)      8: /* anonymous */(this=073EF7B1 &lt;JS Global   Object&gt;#1# extensionId=0A84CEBD &lt;String[0]: &gt;)     10: dispatch(this=0A8323A1 &lt;JS Object&gt;#10# varargs=0A84CEBD &lt;String[0]:   &gt;)     11: /* anonymous */(this=0A84CF09 &lt;an Object&gt;&gt;#11# extensionId=0A84CEBD   &lt;String[0]: &gt;)    ==== Details ================================================    [1]: bind(this=073EF7B1 &lt;JS Global Object&gt;#1# obj=0A872001 &lt;an   Object&gt;&gt;#2# func=0BADDE91 &lt;JS Function&gt;#3#) {    // heap-allocated locals    var obj = 0A872001 &lt;an Object&gt;&gt;#2#    var func = 0BADDE91 &lt;JS Function&gt;#3#    // expression stack (top to bottom)    [01] : 0A872061 &lt;FixedArray[7]&gt;#12#    [00] : 073C2289 &lt;JS Function&gt;#13#  --------- s o u r c e   c o d e ---------  function bind(obj  func) {?    return function() {?      return   func.apply(obj  arguments);?    };?  }  -----------------------------------------  }    [2]: /* anonymous */(this=073EF7B1 &lt;JS Global   Object&gt;#1# functionDef=0A86EC65 &lt;an Object&gt;&gt;#4#) {    // stack-allocated locals    var apiFunction = 0A872001 &lt;an Object&gt;&gt;#2#    // expression stack (top to bottom)    [03] : 073CA851 &lt;JS Function bind&gt;#14#    [02] : 0627E179 &lt;String[14]: getLastFocused&gt;    [01] : 0A871BCD &lt;an Object&gt;&gt;#15#  --------- s o u r c e   c o d e ---------  function (functionDef) {?          // Module functions may have been   defined earlier by hand. Don't?          // clobber them.?          if   (module[functionDef.name])?            return;??          var apiFunction =   {};?          apiFunction.definition = functionDef;?            apiFunction.name = apiDef.names...    -----------------------------------------  }    [3]: arguments adaptor frame: 2-&gt;1 {    // actual arguments    [00] : 0A86EC65 &lt;an Object&gt;&gt;#4#    [01] : 2  // not passed to callee  }    [4]: forEach(this=073EF7B1 &lt;JS Global Object&gt;#1# a=0A86EB15 &lt;JS   array[7]&gt;#5# f=0BADDDF5 &lt;JS Function&gt;#6#) {    // stack-allocated locals    var i = 2    // expression stack (top to bottom)    [01] : 0BADDDF5 &lt;JS Function&gt;#6#  --------- s o u r c e   c o d e ---------  function forEach(a  f) {?    for (var i = 0; i &lt; a.length; i++) {?        f(a[i]  i);?    }?  }  -----------------------------------------  }    [5]: /* anonymous */(this=073EF7B1 &lt;JS Global Object&gt;#1# apiDef=0A86E9F5   &lt;an Object&gt;&gt;#7#) {    // heap-allocated locals    var apiDef = 0A86E9F5 &lt;an Object&gt;&gt;#7#    var module = 0A871BCD &lt;an Object&gt;&gt;#15#    // expression stack (top to bottom)    [00] : 073CA835 &lt;JS Function forEach&gt;#16#  --------- s o u r c e   c o d e ---------  function (apiDef) {?      chrome[apiDef.namespace] =   chrome[apiDef.namespace] || {};?      var module =   chrome[apiDef.namespace];??      // Add types to global validationTypes?        if (apiDef.types) {?        forEach(apiDef.types  function(t) {?            chromeHidden.validationTypes.push(t);?        });?   ...    (...) </pre>