<title>Issue 2297 -   chromium -    HMAC interface is ugly  does too much work in the constructor - Project Hosting on Google Code</title> <pre> base/hmac.h has an ugly interface.  It splits key setting (in the  constructor) from digesting (in the Sign function)  which is fine if we  need them split  but it doesn't appear that we do.  The bigger problem is  that in some implementations (hmac_win.cc and hmac_nss.cc)  the constructor  does work that might fail  and the only guard we have is a handful of CHECK  macros.    At the very least  the work we currently do in the constructor that might  fail should be moved to a separate Init method.   <a href="http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml?showone=Doing_Work_in_Constructors#Doing_Work_in_Constructors">http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml?showone=Doing_Work_in_Constructors#Doing_Work_in_Constructors</a>  .    We might also want to redesign the interface to more easily support the  one-shot key+data in/digest out mode of operation that we seem to care about. </pre>