<title>Issue 8029 -   chromium -    DCHECK hit in ObjectWatcher from IPC::Logging - Project Hosting on Google Code</title> <pre> I just happened upon this in a tip of tree build when exiting. It isn't always reproducible.    Here's the trace:     	chrome.dll!DebugUtil::BreakDebugger()  Line 102	C++   	chrome.dll!logging::LogMessage::~LogMessage()  Line 509	C++   	chrome.dll!base::ObjectWatcher::StopWatching()  Line 84	C++   	chrome.dll!base::WaitableEventWatcher::StopWatching()  Line 44	C++  &gt;	chrome.dll!IPC::Logging::~Logging()  Line 103	C++   	chrome.dll!IPC::Logging::`scalar deleting destructor'()  + 0x16 bytes	C++   	chrome.dll!DefaultSingletonTraits&lt;IPC::Logging&gt;::Delete(IPC::Logging * x=0x046f1a98)    Line 26 + 0x22 bytes	C++   	  chrome.dll!Singleton&lt;IPC::Logging DefaultSingletonTraits&lt;IPC::Logging&gt; IPC::Logging&gt;::OnExit(vo  id * unused=0x00000000)  Line 172 + 0x15 bytes	C++   	chrome.dll!base::AtExitManager::ProcessCallbacksNow()  Line 63 + 0x9 bytes	C++   	chrome.dll!base::AtExitManager::~AtExitManager()  Line 34	C++   	chrome.dll!ChromeMain(HINSTANCE__ * instance=0x00400000  sandbox::SandboxInterfaceInfo   * sandbox_info=0x0012fe88  wchar_t * command_line=0x000209aa)  Line 349 + 0x48 bytes	C++   	chrome.exe!wWinMain(HINSTANCE__ * instance=0x00400000  HINSTANCE__ *   prev_instance=0x00000000  wchar_t * command_line=0x000209aa  int __formal=1)  Line 103 + 0x12   bytes	C++   	chrome.exe!__tmainCRTStartup()  Line 324 + 0x35 bytes	C   	chrome.exe!wWinMainCRTStartup()  Line 196	C   	kernel32.dll!7c817067() 	   	[Frames below may be incorrect and/or missing  no symbols loaded for kernel32.dll]	    Darin says the key thing is that IPC Logging shutdown occurs AFTER the MessageLoop has been   shutdown  which then tries to stop the ObjectWatcher. This is bad because UnregisterWaitEx done   by ObjectWatcher may try and post something to the message loop  but the message loop is now   dead. The ObjectWatcher owned by IPC Logging needs to be stopped while the MessageLoop is   running. </pre>