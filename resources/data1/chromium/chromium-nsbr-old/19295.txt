<title>Issue 19295 -   chromium -    Mysterious &quot;Whoa!&quot; crash; browser still functional - Project Hosting on Google Code</title> <pre> Dev channel  3.0.197.11    Every so often (sorry for lack of repro steps)  I get this strange crash   where the browser still seems response (all tabs alive)  but a &quot;Whoa!&quot;  dialog comes up.  If I ignore the &quot;Whoa!&quot; dialog  I can keep using Chrome.   If I click &quot;Restart&quot;  it shuts down and restarts  but won't offer to  restore tabs.  Attaching a debugger yields the stack trace below (maybe  sqlite db corruption?)    &gt;	chrome.dll!tcmalloc::ThreadCache::Allocate(unsigned int size=232)  Line  364 + 0x14 bytes	C++   	chrome.dll!`anonymous namespace'::do_malloc(unsigned int size=232)   Line 794	C++   	chrome.dll!`anonymous namespace'::cpp_alloc(unsigned int size=232  bool  nothrow=true)  Line 1063	C++   	chrome.dll!malloc(unsigned int s=232)  Line 1123 + 0x13 bytes	C++   	chrome.dll!sqlite3MemMalloc(int nByte=224)  Line 43 + 0x9 bytes	C   	chrome.dll!mallocWithAlarm(int n=224  void * * pp=0x0185f93c)  Line 228 +  0x7 bytes	C   	chrome.dll!sqlite3Malloc(int n=224)  Line 252	C   	chrome.dll!sqlite3DbMallocRaw(sqlite3 * db=0x00000000  int n=224)  Line 617	C   	chrome.dll!sqlite3VdbeMemGrow(Mem * pMem=0x00000000  int n=0  int  preserve=0)  Line 95 + 0x9 bytes	C   	chrome.dll!allocateCursor(Vdbe * p=0x00000000  int iCur=0  VdbeOp *  pOp=0x00000000  int iDb=0  int isBtreeCursor=1)  Line 242 + 0xa bytes	C   	chrome.dll!sqlite3VdbeExec(Vdbe * p=0x03087c08)  Line 2702 + 0x11 bytes	C   	chrome.dll!sqlite3Step(Vdbe * p=0x00000000)  Line 487	C   	chrome.dll!sqlite3_step(sqlite3_stmt * pStmt=0x03087c08)  Line 544 +  0xc bytes	C   	chrome.dll!history::VisitDatabase::AddVisit()  Line 118 + 0x7 bytes	C++   	chrome.dll!history::HistoryBackend::AddPageVisit(const GURL &amp; url={...}   base::Time time={...}  __int64 referring_visit=220690  unsigned int  transition=1610612736)  Line 645	C++     chrome.dll!history::HistoryBackend::AddPage(scoped_refptr&lt;history::HistoryAddPageArgs&gt;  request={...})  Line 433	C++   	chrome.dll!RunnableMethod&lt;history::HistoryBackend void (__thiscall  history::HistoryBackend::*)(scoped_refptr&lt;history::HistoryAddPageArgs&gt;) Tuple1&lt;scoped_refptr&lt;history::HistoryAddPageArgs&gt;  &gt; &gt;::Run()  Line 308	C++   	chrome.dll!MessageLoop::RunTask(Task * task=0x00000000)  Line 315	C++   	chrome.dll!MessageLoop::DeferOrRunPendingTask(const  MessageLoop::PendingTask &amp; pending_task={...})  Line 325	C++   	chrome.dll!MessageLoop::DoWork()  Line 429 + 0x7 bytes	C++   	chrome.dll!base::MessagePumpDefault::Run(base::MessagePump::Delegate *  delegate=0x0185fef0)  Line 50 + 0xe bytes	C++   	chrome.dll!MessageLoop::RunInternal()  Line 200	C++   	chrome.dll!MessageLoop::RunHandler()  Line 182	C++   	chrome.dll!MessageLoop::Run()  Line 156	C++   	chrome.dll!base::Thread::ThreadMain()  Line 159	C++   	chrome.dll!`anonymous namespace'::ThreadFunc(void * closure=0x015cc270)   Line 27	C++   	kernel32.dll!_BaseThreadStart@8()  + 0x37 bytes	   </pre>