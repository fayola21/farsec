<title>Issue 12516 -   chromium -    Crash - Naomi internet filtering program - net::HttpNetworkTransaction::DoReadHeaders() - Project Hosting on Google Code</title> <pre> This crash was detected in 2.0.172.28 and appears to be a regression from 2.0.172.27. It is currently ranked #15 (based on the relative number of reports in the release).  There have been 41 reports from 29 clients. Search query: http://crash/search?query=Chrome+2.0.172.28+net%3A%3AHttpNetworkTransaction%3A%3ADoReadHeaders%28%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=b691a1d52ea0980f Mini Dump Link: http://crash/file?reportid=b691a1d52ea0980f&amp;name=upload_file_minidump  Uptime: 541 sec User Comments: null OS: Windows XP Service Pack 2 CPU Architecture: x86 CPU Info: GenuineIntel family 15 model 2 stepping 7 rept: null ptype: browser plat: Win32  ---------------------------- *      Loaded Modules      * ----------------------------     chrome.dll     chrome.exe     radhslib.dll     kernel32.dll     mswsock.dll     ntdll.dll     user32.dll     userenv.dll  ---------------------------- *        Crash Trace       * ----------------------------        [radhslib.dll+0x00003b6f] -  [http_network_transaction.cc:725] - net::HttpNetworkTransaction::DoReadHeaders() [http_network_transaction.cc:455] - net::HttpNetworkTransaction::DoLoop(int) [http_network_transaction.cc:76] - net::HttpNetworkTransaction::Start(net::HttpRequestInfo const * CallbackRunner&lt;Tuple1&lt;int&gt; &gt; *)              [http_cache.cc:693] - net::HttpCache::Transaction::BeginNetworkRequest()              [http_cache.cc:549] - net::HttpCache::Transaction::EntryAvailable(net::HttpCache::ActiveEntry *)             [http_cache.cc:1369] - net::HttpCache::AddTransactionToEntry(net::HttpCache::ActiveEntry * net::HttpCache::Transaction *)              [http_cache.cc:523] - net::HttpCache::Transaction::AddToEntry()              [http_cache.cc:353] - net::HttpCache::Transaction::Start(net::HttpRequestInfo const * CallbackRunner&lt;Tuple1&lt;int&gt; &gt; *)    [url_request_http_job.cc:535] - URLRequestHttpJob::StartTransaction()    [url_request_http_job.cc:124] - URLRequestHttpJob::Start()             [url_request.cc:260] - URLRequest::Start() [resource_dispatcher_host.cc:1055] - ResourceDispatcherHost::BeginRequestInternal(URLRequest *) [resource_dispatcher_host.cc:406] - ResourceDispatcherHost::BeginRequest(int ViewHostMsg_Resource_Request const &amp; IPC::Message * int) [resource_dispatcher_host.cc:245] - ResourceDispatcherHost::OnRequestResource(IPC::Message const &amp; int ViewHostMsg_Resource_Request const &amp;)       [ipc_message_utils.h:1154] - IPC::MessageWithTuple&lt;Tuple2&lt;int ViewHostMsg_Resource_Request&gt; &gt;::Dispatch&lt;ResourceDispatcherHost int ViewHostMsg_Resource_Request const &amp;&gt;(IPC::Message const * ResourceDispatcherHost * void ( ResourceDispatcherHost::*)(IPC::Message const &amp; int ViewHostMsg_Resource_Request const &amp;)) [resource_dispatcher_host.cc:227] - ResourceDispatcherHost::OnMessageReceived(IPC::Message const &amp; ResourceDispatcherHost::Receiver * bool *) [resource_message_filter.cc:192] - ResourceMessageFilter::OnMessageReceived(IPC::Message const &amp;)        [ipc_channel_proxy.cc:43] - IPC::ChannelProxy::Context::TryFilters(IPC::Message const &amp;)        [ipc_sync_channel.cc:277] - IPC::SyncChannel::SyncContext::OnMessageReceived(IPC::Message const &amp;)         [ipc_channel_win.cc:306] - IPC::Channel::ChannelImpl::ProcessIncomingMessages(base::MessagePumpForIO::IOContext * unsigned long)         [ipc_channel_win.cc:400] - IPC::Channel::ChannelImpl::OnIOCompleted(base::MessagePumpForIO::IOContext * unsigned long unsigned long)        [message_pump_win.cc:504] - base::MessagePumpForIO::WaitForIOCompletion(unsigned long base::MessagePumpForIO::IOHandler *)        [message_pump_win.cc:449] - base::MessagePumpForIO::DoRunLoop()         [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)          [message_pump_win.h:78] - base::MessagePumpWin::Run(base::MessagePump::Delegate *)            [message_loop.cc:197] - MessageLoop::RunInternal()            [message_loop.cc:180] - MessageLoop::RunHandler()            [message_loop.cc:154] - MessageLoop::Run()                  [thread.cc:156] - base::Thread::ThreadMain()      [platform_thread_win.cc:26] - `anonymous namespace'::ThreadFunc(void *)        [kernel32.dll+0x0000b50a] - BaseThreadStart  </pre>