<title>Issue 18176 -   chromium -    Crash - `anonymous namespace'::DispatchOnConnect - Project Hosting on Google Code</title> <pre> This crash was detected in 3.0.196.0 and appears to be a regression from 3.0.195.4. It is currently ranked #7 (based on the relative number of reports in the release).  There have been 16 reports from 10 clients. Search query: http://crash/search?query=Chrome+3.0.196.0+%60anonymous+namespace%27%3A%3ADispatchOnConnect ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=bd1389af4c36c852 Mini Dump Link: http://crash/file?reportid=bd1389af4c36c852&amp;name=upload_file_minidump  Uptime: 5 sec User Comments: null OS: Windows XP Service Pack 3 CPU Architecture: x86 CPU Info: GenuineIntel family 15 model 4 stepping 3 rept: null ptype: browser plat: Win32 crash type:(EXCEPTION_ACCESS_VIOLATION@0x00000000)  ---------------------------- *        Crash Trace       * ---------------------------- [extension_message_service.cc:65] - `anonymous namespace'::DispatchOnConnect [extension_message_service.cc:283] - ExtensionMessageService::OpenChannelOnUIThreadImpl(IPC::Message::Sender * int int ExtensionMessageService::MessagePort const &amp; int std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp;) [extension_message_service.cc:306] - ExtensionMessageService::OpenAutomationChannelToExtension(int int std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; IPC::Message::Sender *) [extension_port_container.cc:182] - ExtensionPortContainer::InterceptMessageFromExternalHost(std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; AutomationProvider * RenderViewHost * int)     [automation_provider.cc:2686] - AutomationProvider::OnMessageFromExternalHost(int std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp;)         [ipc_message_utils.h:944] - IPC::MessageWithTuple&lt;Tuple4&lt;int std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; &gt; &gt;::Dispatch&lt;AutomationProvider void ( AutomationProvider::*)(int std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp;)&gt;(IPC::Message const * AutomationProvider * void ( AutomationProvider::*)(int std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; const &amp;))     [automation_provider.cc:1035] - AutomationProvider::OnMessageReceived(IPC::Message const &amp;)                      [task.h:307] - RunnableMethod&lt;ProfileWriter void ( ProfileWriter::*)(std::vector&lt;history::ImportedFavIconUsage std::allocator&lt;history::ImportedFavIconUsage&gt; &gt; const &amp;) Tuple1&lt;std::vector&lt;history::ImportedFavIconUsage std::allocator&lt;history::ImportedFavIconUsage&gt; &gt; &gt; &gt;::Run()             [message_loop.cc:313] - MessageLoop::RunTask(Task *)             [message_loop.cc:321] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;)             [message_loop.cc:428] - MessageLoop::DoWork()         [message_pump_win.cc:209] - base::MessagePumpForUI::DoRunLoop()          [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)             [message_loop.cc:193] - MessageLoop::RunInternal()             [message_loop.cc:181] - MessageLoop::RunHandler()             [message_loop.cc:590] - MessageLoopForUI::Run(base::MessagePumpWin::Dispatcher *)             [browser_main.cc:195] - `anonymous namespace'::RunUIMessageLoop(BrowserProcess *)             [browser_main.cc:786] - BrowserMain(MainFunctionParams const &amp;)          [chrome_dll_main.cc:539] - ChromeMain      [google_update_client.cc:96] - google_update::GoogleUpdateClient::Launch(HINSTANCE__ * sandbox::SandboxInterfaceInfo * wchar_t * char const * int *)         [kernel32.dll+0x0002ffff] - CreateFiberEx  ---------------------------- *      Loaded Modules      * ----------------------------     en-US.dll     default.dll     chrome.dll     gears.dll     icudt38.dll     chrome.exe     mdnsNSP.dll     GoogleDesktopAPI2.dll     GoogleDesktopCommon.dll     GoogleDesktopNetwork3.dll     GoogleDesktopResources_en.dll     sophos_detoured.dll     comctl32.dll     advapi32.dll     clbcatq.dll     comres.dll     dnsapi.dll     gdi32.dll     hnetcfg.dll     iertutil.dll     imm32.dll     iphlpapi.dll     kernel32.dll     lpk.dll     lz32.dll     msctfime.ime     msvcp60.dll     msvcrt.dll     mswsock.dll     netapi32.dll     normaliz.dll     ntdll.dll     ntmarta.dll     ole32.dll     oleacc.dll     oleaut32.dll     psapi.dll     rasadhlp.dll     rdpsnd.dll     rpcrt4.dll     samlib.dll     secur32.dll     shell32.dll     shlwapi.dll     t2embed.dll     urlmon.dll     user32.dll     usp10.dll     uxtheme.dll     version.dll     wininet.dll     winmm.dll     winsta.dll     wldap32.dll     ws2_32.dll     ws2help.dll     wshtcpip.dll  </pre>