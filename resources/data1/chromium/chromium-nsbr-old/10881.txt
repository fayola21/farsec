<title>Issue 10881 -   chromium -    NULL pointer in CANVAS 2d context fill with createPattern(new Image  &quot;repeat&quot;) - Project Hosting on Google Code</title> <pre> Repro code:  &lt;SCRIPT&gt;    oCanvas=document.createElement(&quot;CANVAS&quot;);    o2dContext=oCanvas.getContext(&quot;2d&quot;)    o2dContext.fillStyle=o2dContext.createPattern(new Image  &quot;repeat&quot;)    o2dContext.fillRect(0 0 1 1)  &lt;/SCRIPT&gt;  It seems that the &quot;new Image&quot; creates an Image object with pixel data set   to NULL. There is no check for that in the pattern or fill code so when the   fill tries to copy the pixel data into the rect to be filled  this causes   an AV. This should not be exploitable; the value will always be NULL or   valid.    === FuzzFramework v3.1 case report ===  Target application : Chrome 2.0.175.0 (WebKit 530.6) on Windows   5.1.2600(x86)  Original Fuzzer    : CanvasFuzzer(running in Application(chrome))    === Problem details ===      CdbFatalExceptionInfo(ReadAV [NULL]@chrome!memcpy+0x5a) (54%   reproducable after 11 attempts  reducing)          Attempt to read from a NULL pointer at NULL+0  instruction:          03b6d57a f3a5            rep movs dword ptr es:[edi] dword ptr   [esi]          Registers:              eax=00000024 ebx=03419b90 ecx=00000009 edx=00000000   esi=00000000 edi=0cf19058 esp=05fef228 ebp=05fef230 eip=03b6d57a          Stack:              ChildEBP RetAddr                05fef230 03f6fd5d chrome_28f0000!memcpy(unsigned char * dst =   0x0cf19058 &quot;&quot;  unsigned char * src = 0x00000000 &quot;&quot;  unsigned long count =   0x24)+0x5a              05fef248 03fab384 chrome_28f0000!SkBitmap::operator=(class   SkBitmap * src = 0x00000000)+0x2d              05fef258 03fabbc5   chrome_28f0000!SkBitmapProcShader::SkBitmapProcShader(class SkBitmap * src   = 0x00000000  SkShader::TileMode tmx = kRepeat_TileMode (1)    SkShader::TileMode tmy = kRepeat_TileMode (1))+0x44              05fef278 03f77e88   chrome_28f0000!SkShader::CreateBitmapShader(class SkBitmap * src =   0x00000000  SkShader::TileMode tmx = kRepeat_TileMode (1)    SkShader::TileMode tmy = kRepeat_TileMode (1)  void * storage = 0x00000000    unsigned int storageSize = 0)+0x45              05fef294 03924e65   chrome_28f0000!SkShader::CreateBitmapShader(class SkBitmap * src =   0x00000000  SkShader::TileMode tmx = kRepeat_TileMode (1)    SkShader::TileMode tmy = kRepeat_TileMode (1))+0x18              05fef3c0 0368a0b2   chrome_28f0000!WebCore::Pattern::createPlatformPattern(class   WebCore::TransformationMatrix * patternTransform = 0x05fef3d8)+0x75              05fef574 03529195   chrome_28f0000!WebCore::GraphicsContext::fillRect(class WebCore::FloatRect   * rect = 0x05fef584)+0x112              05fef5a0 02c07794   chrome_28f0000!WebCore::CanvasRenderingContext2D::fillRect(float x = 69    float y = 10  float width = 33  float height = 25)+0xb5              05fef5f8 03419eb9   chrome_28f0000!WebCore::CanvasRenderingContext2DInternal::fillRectCallback(  class v8::Arguments * args = 0x05fef658)+0xe4              05fef730 064f018b   chrome_28f0000!v8::internal::Builtin_HandleApiCall(int __argc__ = 5  class   v8::internal::Object ** __argv__ = 0x05fef760)+0x329              WARNING: Frame IP not in any known module. Following frames may   be wrong.              05fef824 03351891 0x64f018b              05fef8b8 03351762 chrome_28f0000!v8::internal::Invoke(bool   construct = true  class v8::internal::Handle&lt;v8::internal::JSFunction&gt; func   = class v8::internal::Handle&lt;v8::internal::JSFunction&gt;  class   v8::internal::Handle&lt;v8::internal::Object&gt; receiver = class   v8::internal::Handle&lt;v8::internal::Object&gt;  int argc = 100595660  class   v8::internal::Object *** args = 0x06502cd9  bool * has_pending_exception =   0x06a5131d)+0x111              05fef8dc 03320bb8   chrome_28f0000!v8::internal::Execution::Call(class   v8::internal::Handle&lt;v8::internal::JSFunction&gt; func = class   v8::internal::Handle&lt;v8::internal::JSFunction&gt;  class   v8::internal::Handle&lt;v8::internal::Object&gt; receiver = class   v8::internal::Handle&lt;v8::internal::Object&gt;  int argc = 0  class   v8::internal::Object *** args = 0x00000000  bool * pending_exception =   0x05fef92b)+0x22              05fef96c 02a5e5ef chrome_28f0000!v8::Function::Call(class   v8::Handle&lt;v8::Object&gt; recv = class v8::Handle&lt;v8::Object&gt;  int argc = 0    class v8::Handle&lt;v8::Value&gt; * argv = 0x00000000)+0x108              05fef9a4 02ace0bf   chrome_28f0000!WebCore::V8Proxy::CallFunction(class   v8::Handle&lt;v8::Function&gt; function = class v8::Handle&lt;v8::Function&gt;  class   v8::Handle&lt;v8::Object&gt; receiver = class v8::Handle&lt;v8::Object&gt;  int argc =   0  class v8::Handle&lt;v8::Value&gt; * args = 0x00000000)+0x5f              05fefa20 035cb3da   chrome_28f0000!WebCore::ScheduledAction::execute(class   WebCore::ScriptExecutionContext * context = 0x08fb9054)+0xff              05fefa5c 036920c5   chrome_28f0000!WebCore::DOMTimer::fired(void)+0x12a              05fefa94 036921ea   chrome_28f0000!WebCore::ThreadTimers::fireTimers(double fireTime =   1240426862.69575  class WTF::Vector&lt;WebCore::TimerBase * 0&gt; * firingTimers   = 0x05fefaac)+0xb5              05fefac8 03692136   chrome_28f0000!WebCore::ThreadTimers::sharedTimerFiredInternal(void)+0xaa              05fefad0 02904562   chrome_28f0000!WebCore::ThreadTimers::sharedTimerFired(void)+0x16              05fefae0 02904fdc   chrome_28f0000!webkit_glue::WebKitClientImpl::DoTimeout(void)+0x22              05fefaec 02904af4   chrome_28f0000!DispatchToMethod&lt;webkit_glue::WebKitClientImpl void (class   webkit_glue::WebKitClientImpl * obj = 0x061a9020  &lt;function&gt; * method =   0x02904540  struct Tuple0 * arg = 0x05fefb03)+0xc              05fefb08 03ac4b29   chrome_28f0000!base::BaseTimer&lt;webkit_glue::WebKitClientImpl 0&gt;::TimerTask:  :Run(void)+0x54              05fefbbc 03ac4bd5 chrome_28f0000!MessageLoop::RunTask(class   Task * task = 0x0c919020)+0xb9              05fefbcc 03ac5246   chrome_28f0000!MessageLoop::DeferOrRunPendingTask(struct   MessageLoop::PendingTask * pending_task = 0x05fefbf0)+0x35              05fefc10 03b51aa0   chrome_28f0000!MessageLoop::DoDelayedWork(class base::Time *   next_delayed_work_time = 0x05dc9038)+0x116              05fefcf8 03ac444b   chrome_28f0000!base::MessagePumpDefault::Run(class   base::MessagePump::Delegate * delegate = 0x05fefeb0)+0xf0              05fefda8 03ac42b0   chrome_28f0000!MessageLoop::RunInternal(void)+0xfb              05fefde0 03ac413a   chrome_28f0000!MessageLoop::RunHandler(void)+0x90              05fefe08 03ae9138 chrome_28f0000!MessageLoop::Run(void)+0x3a              05feffa4 03ae8271   chrome_28f0000!base::Thread::ThreadMain(void)+0xb8              05feffb4 7c80b729 chrome_28f0000!`anonymous   namespace'::ThreadFunc(void * closure = 0x05ded02c)+0x21              05feffec 00000000 kernel32!GetModuleFileNameA+0x1ba           </pre>