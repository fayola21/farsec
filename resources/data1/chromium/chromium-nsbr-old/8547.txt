<title>Issue 8547 -   chromium -    Crash - PasswordManagerTableModel::ForgetAndRemoveSignon(int) - Project Hosting on Google Code</title> <pre> This crash was detected in 2.0.168.0 and appears to be a regression from 2.0.166.1. It is currently ranked #7 (based on the relative number of reports in the release).  There have been 27 reports from 17 clients. Search query: http://crash/search?query=Chrome+2.0.168.0+PasswordManagerTableModel%3A%3AForgetAndRemoveSignon%28int%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=8a5016dcf4a69b62 Mini Dump Link: http://crash/file?reportid=8a5016dcf4a69b62&amp;name=upload_file_minidump  Uptime: 550 sec User Comments: null OS: Windows Vista or Windows Server 2008 Service Pack 1 CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 15 stepping 13 rept: null ptype: browser plat: Win32  ---------------------------- *      Loaded Modules      * ----------------------------     chrome.dll     chrome.exe     SogouPy.ime     kernel32.dll     mswsock.dll     ntdll.dll     rpcrt4.dll     user32.dll     comctl32.dll  ---------------------------- *        Crash Trace       * ----------------------------           [password_manager_view.cc:163] - PasswordManagerTableModel::ForgetAndRemoveSignon(int) [password_manager_exceptions_view.cc:225] - PasswordManagerExceptionsView::ButtonPressed(views::NativeButton *)                   [native_button.cc:197] - views::NativeButton::Clicked()                   [native_button.cc:111] - views::NativeButton::OnCommand(unsigned int int HWND__ *)                   [native_control.cc:57] - views::NativeControlContainer::ProcessWindowMessage(HWND__ * unsigned int unsigned int long long &amp;amp; unsigned long)                          [atlwin.h:3073] - ATL::CWindowImplBaseT&amp;lt;ATL::CWindow ATL::CWinTraits&amp;lt;1073741824 0&amp;gt; &amp;gt;::WindowProc(HWND__ * unsigned int unsigned int long)                  [user32.dll+0x0001f8d1] - InternalCallWinProc                  [user32.dll+0x0001f793] - UserCallWinProcCheckWow                  [user32.dll+0x000206f5] - CallWindowProcAorW                  [user32.dll+0x0002069b] - CallWindowProcW                   [focus_manager.cc:205] - views::FocusWindowCallback                  [user32.dll+0x0001f8d1] - InternalCallWinProc                  [user32.dll+0x0001f793] - UserCallWinProcCheckWow                  [user32.dll+0x00020816] - DispatchClientMessage                  [user32.dll+0x00020a64] - __fnDWORD                   [ntdll.dll+0x000599cd] - KiUserCallbackDispatcher                   [ntdll.dll+0x0005997f] - KiUserApcDispatcher                  [user32.dll+0x00020af9] - SendMessageW                [comctl32.dll+0x0001f94e] - Button_NotifyParent(tagBUTN * unsigned int)                [comctl32.dll+0x0001f9b0] - Button_NotifyParent(tagBUTN * unsigned int)                [comctl32.dll+0x0001fc96] - AlterWindowStyle                  [user32.dll+0x0001f8d1] - InternalCallWinProc                  [user32.dll+0x0001f793] - UserCallWinProcCheckWow                  [user32.dll+0x000206f5] - CallWindowProcAorW                  [user32.dll+0x0002069b] - CallWindowProcW                   [focus_manager.cc:205] - views::FocusWindowCallback                  [user32.dll+0x0001f8d1] - InternalCallWinProc                  [user32.dll+0x0001f793] - UserCallWinProcCheckWow                  [user32.dll+0x000206f5] - CallWindowProcAorW                  [user32.dll+0x0002069b] - CallWindowProcW                  [native_control.cc:383] - views::NativeControl::NativeControlWndProc(HWND__ * unsigned int unsigned int long)                  [user32.dll+0x0001f8d1] - InternalCallWinProc                  [user32.dll+0x0001f793] - UserCallWinProcCheckWow                  [user32.dll+0x00020007] - DispatchMessageWorker                  [user32.dll+0x0002005f] - DispatchMessageW              [accelerator_handler.cc:29] - views::AcceleratorHandler::Dispatch(tagMSG const &amp;amp;)                [message_pump_win.cc:356] - base::MessagePumpForUI::ProcessMessageHelper(tagMSG const &amp;amp;)                [message_pump_win.cc:204] - base::MessagePumpForUI::DoRunLoop()                 [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)                    [message_loop.cc:192] - MessageLoop::RunInternal()                    [message_loop.cc:180] - MessageLoop::RunHandler()                    [message_loop.cc:558] - MessageLoopForUI::Run(base::MessagePumpWin::Dispatcher *)                    [browser_main.cc:181] - `anonymous namespace&amp;#39;::RunUIMessageLoop(BrowserProcess *)                    [browser_main.cc:560] - BrowserMain(MainFunctionParams const &amp;amp;)                 [chrome_dll_main.cc:379] - ChromeMain             [google_update_client.cc:93] - google_update::GoogleUpdateClient::Launch(HINSTANCE__ * sandbox::SandboxInterfaceInfo * wchar_t * char const * int *)                  [chrome_exe_main.cc:67] - wWinMain  </pre>