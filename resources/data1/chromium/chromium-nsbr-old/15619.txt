<title>Issue 15619 -   chromium -    Crash - DetermineTargetTypeFromLoader - Project Hosting on Google Code</title> <pre> This crash was detected in 3.0.190.1 and was seen in 3.0.189.0. It is currently ranked #89 (based on the relative number of reports in the release).  There have been 4 reports from 4 clients. Search query: http://crash/search?query=Chrome+3.0.190.1+DetermineTargetTypeFromLoader ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=532dabc6841b827d Mini Dump Link: http://crash/file?reportid=532dabc6841b827d&amp;name=upload_file_minidump  Uptime: 144 sec User Comments: null OS: Windows 7  CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 23 stepping 7 rept: null ptype: renderer plat: Win32 crash type:(EXCEPTION_ACCESS_VIOLATION@0x00000014)  ---------------------------- *        Crash Trace       * ---------------------------- [webframeloaderclient_impl.cc:204] - DetermineTargetTypeFromLoader [webframeloaderclient_impl.cc:294] - WebFrameLoaderClient::dispatchDidReceiveResponse(WebCore::DocumentLoader * unsigned long WebCore::ResourceResponse const &amp;)            [frameloader.cpp:5161] - WebCore::FrameLoader::dispatchDidReceiveResponse(WebCore::DocumentLoader * unsigned long WebCore::ResourceResponse const &amp;)            [frameloader.cpp:3741] - WebCore::FrameLoader::didReceiveResponse(WebCore::ResourceLoader * WebCore::ResourceResponse const &amp;)          [resourceloader.cpp:242] - WebCore::ResourceLoader::didReceiveResponse(WebCore::ResourceResponse const &amp;)      [mainresourceloader.cpp:256] - WebCore::MainResourceLoader::continueAfterContentPolicy(WebCore::PolicyAction WebCore::ResourceResponse const &amp;)      [mainresourceloader.cpp:271] - WebCore::MainResourceLoader::callContinueAfterContentPolicy(void * WebCore::PolicyAction)            [frameloader.cpp:3367] - WebCore::FrameLoader::continueAfterContentPolicy(WebCore::PolicyAction) [webframeloaderclient_impl.cc:867] - WebFrameLoaderClient::dispatchDecidePolicyForMIMEType(void ( WebCore::FrameLoader::*)(WebCore::PolicyAction) WebCore::String const &amp; WebCore::ResourceRequest const &amp;)            [frameloader.cpp:2481] - WebCore::FrameLoader::checkContentPolicy(WebCore::String const &amp; void (*)(void * WebCore::PolicyAction) void *)      [mainresourceloader.cpp:331] - WebCore::MainResourceLoader::didReceiveResponse(WebCore::ResourceResponse const &amp;)          [resourceloader.cpp:406] - WebCore::ResourceLoader::didReceiveResponse(WebCore::ResourceHandle * WebCore::ResourceResponse const &amp;)          [resourcehandle.cpp:124] - WebCore::ResourceHandleInternal::didReceiveResponse(WebKit::WebURLLoader * WebKit::WebURLResponse const &amp;)        [weburlloader_impl.cc:413] - webkit_glue::WebURLLoaderImpl::Context::OnReceivedResponse(webkit_glue::ResourceLoaderBridge::ResponseInfo const &amp; bool)      [resource_dispatcher.cc:347] - ResourceDispatcher::OnReceivedResponse(int ResourceResponseHead const &amp;)        [ipc_message_utils.h:1101] - IPC::MessageWithTuple&lt;Tuple2&lt;int ResourceResponseHead&gt; &gt;::Dispatch&lt;ResourceDispatcher void ( ResourceDispatcher::*)(int ResourceResponseHead const &amp;)&gt;(IPC::Message const * ResourceDispatcher * void ( ResourceDispatcher::*)(int ResourceResponseHead const &amp;))      [resource_dispatcher.cc:484] - ResourceDispatcher::DispatchMessageW(IPC::Message const &amp;)      [resource_dispatcher.cc:293] - ResourceDispatcher::OnMessageReceived(IPC::Message const &amp;)              [child_thread.cc:70] - ChildThread::OnMessageReceived(IPC::Message const &amp;)                      [task.h:307] - RunnableMethod&lt;CancelableRequest&lt;CallbackRunner&lt;Tuple2&lt;int scoped_refptr&lt;BaseSessionService::InternalGetCommandsRequest&gt; &gt; &gt; &gt; void ( CancelableRequest&lt;CallbackRunner&lt;Tuple2&lt;int scoped_refptr&lt;BaseSessionService::InternalGetCommandsRequest&gt; &gt; &gt; &gt;::*)(Tuple2&lt;int scoped_refptr&lt;BaseSessionService::InternalGetCommandsRequest&gt; &gt; const &amp;) Tuple1&lt;Tuple2&lt;int scoped_refptr&lt;BaseSessionService::InternalGetCommandsRequest&gt; &gt; &gt; &gt;::Run()             [message_loop.cc:309] - MessageLoop::RunTask(Task *)             [message_loop.cc:317] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;)             [message_loop.cc:423] - MessageLoop::DoWork()      [message_pump_default.cc:50] - base::MessagePumpDefault::Run(base::MessagePump::Delegate *)             [message_loop.cc:198] - MessageLoop::RunInternal()             [message_loop.cc:181] - MessageLoop::RunHandler()             [message_loop.cc:155] - MessageLoop::Run()         [ipc_sync_channel.cc:432] - IPC::SyncChannel::WaitForReplyWithNestedMessageLoop()         [ipc_sync_channel.cc:420] - IPC::SyncChannel::WaitForReply(base::WaitableEvent *)         [ipc_sync_channel.cc:396] - IPC::SyncChannel::SendWithTimeout(IPC::Message * int)         [ipc_sync_channel.cc:361] - IPC::SyncChannel::Send(IPC::Message *)            [render_widget.cc:148] - RenderWidget::Send(IPC::Message *)             [render_view.cc:1533] - RenderView::RunJavaScriptMessage(int std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt; const &amp; std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt; const &amp; GURL const &amp; std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt; *)             [render_view.cc:1497] - RenderView::RunJavaScriptAlert(WebFrame * std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt; const &amp;)       [chrome_client_impl.cc:368] - ChromeClientImpl::runJavaScriptAlert(WebCore::Frame * WebCore::String const &amp;)                  [chrome.cpp:256] - WebCore::Chrome::runJavaScriptAlert(WebCore::Frame * WebCore::String const &amp;)             [v8domwindow.cpp:568] - WebCore::DOMWindowInternal::alertCallback                 [builtins.cc:381] - v8::internal::Builtin_HandleApiCall           [chrome.dll+0x006d98df] -   ---------------------------- *      Loaded Modules      * ----------------------------     avcodec-52.dll     avformat-52.dll     avutil-50.dll     chrome.dll     icudt38.dll     pthreadGC2.dll     chrome.exe     KERNELBASE.dll     Wldap32.dll     advapi32.dll     gdi32.dll     imm32.dll     kernel32.dll     lpk.dll     msctf.dll     msvcrt.dll     nsi.dll     ntdll.dll     ntmarta.dll     ole32.dll     oleacc.dll     oleaut32.dll     profapi.dll     rpcrt4.dll     sechost.dll     secur32.dll     shell32.dll     shlwapi.dll     sspicli.dll     t2embed.dll     user32.dll     userenv.dll     usp10.dll     uxtheme.dll     version.dll     winmm.dll     ws2_32.dll     wsock32.dll     comctl32.dll  </pre>