<title>Issue 13086 -   chromium -    Crash - ResourceDispatcherHost::IncrementOutstandingRequestsMemoryCost(int int) - Project Hosting on Google Code</title> <pre> This crash was detected in 3.0.182.3 and was seen in 2.0.181.1. It is currently ranked #20 (based on the relative number of reports in the release).  There have been 21 reports from 21 clients. Search query: http://crash/search?query=Chrome+3.0.182.3+ResourceDispatcherHost%3A%3AIncrementOutstandingRequestsMemoryCost%28int%2Cint%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=4f969ba7cf0fdd32 Mini Dump Link: http://crash/file?reportid=4f969ba7cf0fdd32&amp;name=upload_file_minidump  Uptime: 6025 sec User Comments: null OS: Windows XP Service Pack 3 CPU Architecture: x86 CPU Info: GenuineIntel family 15 model 6 stepping 5 rept: null ptype: browser plat: Win32  ---------------------------- *      Loaded Modules      * ----------------------------     chrome.dll     chrome.exe     kernel32.dll     mswsock.dll     ntdll.dll     user32.dll     userenv.dll  ---------------------------- *        Crash Trace       * ----------------------------                 [logging.cc:543] - logging::LogMessage::~LogMessage() [resource_dispatcher_host.cc:971] - ResourceDispatcherHost::IncrementOutstandingRequestsMemoryCost(int int) [resource_dispatcher_host.cc:800] - ResourceDispatcherHost::RemovePendingRequest(std::_Tree&lt;std::_Tmap_traits&lt;ResourceDispatcherHost::GlobalRequestID URLRequest * std::less&lt;ResourceDispatcherHost::GlobalRequestID&gt; std::allocator&lt;std::pair&lt;ResourceDispatcherHost::GlobalRequestID const  URLRequest *&gt; &gt; 0&gt; &gt;::iterator const &amp;) [resource_dispatcher_host.cc:790] - ResourceDispatcherHost::RemovePendingRequest(int int) [resource_dispatcher_host.cc:1248] - ResourceDispatcherHost::OnResponseCompleted(URLRequest *) [resource_dispatcher_host.cc:1205] - ResourceDispatcherHost::OnReadCompleted(URLRequest * int)         [url_request_job.cc:419] - URLRequestJob::NotifyReadComplete(int)    [url_request_file_job.cc:275] - URLRequestFileJob::DidRead(int)                     [task.h:571] - CallbackImpl&lt;media::VideoThread void ( media::VideoThread::*)(media::VideoFrame *) Tuple1&lt;media::VideoFrame *&gt; &gt;::RunWithParams(Tuple1&lt;media::VideoFrame *&gt; const &amp;)         [file_stream_win.cc:105] - net::FileStream::AsyncContext::OnIOCompleted(base::MessagePumpForIO::IOContext * unsigned long unsigned long)        [message_pump_win.cc:505] - base::MessagePumpForIO::WaitForIOCompletion(unsigned long base::MessagePumpForIO::IOHandler *)          [file_stream_win.cc:77] - net::FileStream::AsyncContext::~AsyncContext()          [chrome.dll+0x005cd556] - net::FileStream::AsyncContext::`vector deleting destructor'(unsigned int)         [file_stream_win.cc:132] - net::FileStream::Close()    [url_request_file_job.cc:124] - URLRequestFileJob::Kill()             [url_request.cc:311] - URLRequest::DoCancel(int net::SSLInfo const &amp;)             [url_request.cc:280] - URLRequest::Cancel()              [url_request.cc:65] - URLRequest::~URLRequest() [resource_dispatcher_host.cc:806] - ResourceDispatcherHost::RemovePendingRequest(std::_Tree&lt;std::_Tmap_traits&lt;ResourceDispatcherHost::GlobalRequestID URLRequest * std::less&lt;ResourceDispatcherHost::GlobalRequestID&gt; std::allocator&lt;std::pair&lt;ResourceDispatcherHost::GlobalRequestID const  URLRequest *&gt; &gt; 0&gt; &gt;::iterator const &amp;) [resource_dispatcher_host.cc:754] - ResourceDispatcherHost::CancelRequestsForRoute(int int)    [render_widget_helper.cc:195] - RenderWidgetHelper::OnCancelResourceRequests(int)                     [task.h:307] - RunnableMethod&lt;RenderWidgetHelper void ( RenderWidgetHelper::*)(int) Tuple1&lt;int&gt; &gt;::Run()            [message_loop.cc:309] - MessageLoop::RunTask(Task *)            [message_loop.cc:317] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;)            [message_loop.cc:423] - MessageLoop::DoWork()        [message_pump_win.cc:469] - base::MessagePumpForIO::DoRunLoop()         [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)          [message_pump_win.h:78] - base::MessagePumpWin::Run(base::MessagePump::Delegate *)            [message_loop.cc:198] - MessageLoop::RunInternal()            [message_loop.cc:181] - MessageLoop::RunHandler()            [message_loop.cc:155] - MessageLoop::Run()                  [thread.cc:156] - base::Thread::ThreadMain()      [platform_thread_win.cc:26] - `anonymous namespace'::ThreadFunc(void *)        [kernel32.dll+0x0000b712] - BaseThreadStart  </pre>