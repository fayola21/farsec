<title>Issue 20249 -   chromium -    SharedMemory::CreateOrOpen allocates  zeros  and writes larges amounts of memory. - Project Hosting on Google Code</title> <pre> In order to avoid calling truncate() to extend a file  we write a bunch of zeros  which involves   allocating a block of memory (possibly very big for DIBs  etc).  We then zero it and write it to the   file.  After talking to Markus and AGL  it sounds like truncate() is portable enough to extend a file   on the platforms we care about (Linux and OSX)  and should be more efficient.      // Make sure the (new) file is the right size.    // According to the man page  &quot;Use of truncate() to extend a file is    // not portable.&quot;    ...      7  17865                    munmap:return 392106 munmap                  libSystem.B.dylib`munmap$UNIX2003+0xa                libSystem.B.dylib`free+0x6a                Chromium Framework`scoped_array&lt;char&gt;::~scoped_array()+0x1c                Chromium Framework`base::SharedMemory::CreateOrOpen(std::basic_string&lt;wchar_t    std::char_traits&lt;wchar_t&gt;  std::allocator&lt;wchar_t&gt; &gt; const&amp;    int  unsigned long)+0x512                Chromium Framework`base::SharedMemory::Create(std::basic_string&lt;wchar_t    std::char_traits&lt;wchar_t&gt;  std::allocator&lt;wchar_t&gt; &gt; const&amp;  bool    bool  unsigned long)+0x7a                Chromium Framework`RenderWidgetHelper::AllocTransportDIB(unsigned long    base::FileDescriptor*)+0x77                Chromium Framework`ResourceMessageFilter::OnAllocTransportDIB(unsigned long    base::FileDescriptor*)+0x2e   </pre>