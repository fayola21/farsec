<title>Issue 19546 -   chromium -    Another pair of SafeBrowsingService-related leaks - Project Hosting on Google Code</title> <pre> see also bug 19490    <a href="http://build.chromium.org/buildbot/waterfall/builders/Linux%20UI%202%20of%203%20(valgrind)/builds/768/steps/valgrind%20test:%20ui/logs/stdio">http://build.chromium.org/buildbot/waterfall/builders/Linux%20UI%202%20of%203%20(valgrind)/builds/768/steps/valgrind%20test:%20ui/logs/stdio</a>    complained    40 bytes in 1 blocks are definitely lost in loss record 7 586 of 10 099    operator new(unsigned int) (vg_replace_malloc.c:213)    SafeBrowsingService::Start() (base/task.h:350)    SafeBrowsingService::Initialize(MessageLoop*)  (chrome/browser/safe_browsing/safe_browsing_service.cc:64)    ResourceDispatcherHost::Initialize()  (chrome/browser/renderer_host/resource_dispatcher_host.cc:289)    BrowserProcessImpl::CreateResourceDispatcherHost()  (chrome/browser/browser_process_impl.cc:293)    BrowserProcessImpl::resource_dispatcher_host()  (chrome/browser/browser_process_impl.h:43)    BrowserRenderProcessHost::Init()  (chrome/browser/renderer_host/browser_render_process_host.cc:282)    RenderViewHost::CreateRenderView()  (chrome/browser/renderer_host/render_view_host.cc:174)    and    1 492 (184 direct  1 308 indirect) bytes in 1 blocks are definitely lost in  loss record 9 926 of 10 099    operator new(unsigned int) (vg_replace_malloc.c:213)    SafeBrowsingService::OnIOInitialize(MessageLoop*  std::basic_string&lt;char   std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const&amp;   std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;  const&amp;) (chrome/browser/safe_browsing/safe_browsing_service.cc:106)    RunnableMethod&lt;SafeBrowsingService  void  (SafeBrowsingService::*)(MessageLoop*  std::basic_string&lt;char   std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const&amp;   std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;  const&amp;)  Tuple3&lt;MessageLoop*  std::basic_string&lt;char   std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;  std::basic_string&lt;char   std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; &gt; &gt;::Run() (base/tuple.h:435)    MessageLoop::RunTask(Task*) (base/message_loop.cc:314)   </pre>