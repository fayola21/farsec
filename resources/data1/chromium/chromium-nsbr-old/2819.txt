<title>Issue 2819 -   chromium -    Need more aggressive eliding algorithms for omnibox - Project Hosting on Google Code</title> <pre> See &lt;b1222425&gt;    As noted in the following comment of pkasting  the current eliding  algorithm of the AutocompletePopup class is very conservative. We need to  implement more aggressive one which can handle the following case as well.    &gt; The basic problem is  we elide if the current segment doesn't fit in  (remaining space - ellipsis width).  This is too conservative.  Imagine the  following cases with an available width of 6 characters (monospaced):  &gt; Segments: &quot;aaaaaa&quot;  &gt; Segments: &quot;aaaaa&quot;  &quot;b&quot;  &gt; Segments: &quot;aaaa&quot;  &quot;bb&quot;  &gt; Segments: &quot;aaaa&quot;  &quot;b&quot;  &quot;b&quot;  &gt; Now pretend that the width of the ellipsis is the width of three  characters.  In each of the above cases  we elide the first segment  but a  correct algorithm would draw all the segments with no eliding.  I think the  fix is  in the current code where we see that the run won't fit in  (remaining space - ellipsis width)  we call a function (perhaps this could  be factored in such a way as to make it the same as the current function)  that instead tries to draw this run and all the remaining ones in the  remaining width _without_ subtracting the ellipsis width or eliding  and  simply returns false if one of them overruns.  Then in the caller  if the  function returned false  go ahead and elide as we currently do  otherwise  use the results from the function call.          </pre>