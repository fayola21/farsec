<title>Issue 16630 -   chromium -    Don't run or initialize the spellchecker on the I/O thread. - Project Hosting on Google Code</title> <pre> The spellchecker is currently initialized on the I/O thread. This involves   poking around a few directories  and reading a bunch of data from the   dictionary file which blocks all browser &lt;-&gt; renderer communication.    Note that whatever we do will block the requesting renderer since   spellchecking is synchronous. This is really about other renderers being   freed up.    We should instead move initialization of the spellchecker to a background   thread. When the first request comes in  the I/O thread would fire off the   request to load it and possibly pass the current word to spellcheck (or   save it somewhere). When that thread comes back  it would send the results   of the spellchecking to the renderer which will be blocked the whole time.    The edge cases make this a bit harder. The user could change the   spellchecking language  and more requests for spellchecking could come in   from other renderers while we're initializing in the background. We would   need to deal with this properly.    A second optional step would be to do all spellchecking from another   thread. Since the dictionary is a memory mapped file  there is implicit I/O   in doing spellchecking. It's also a large block of memory that would be   prone to getting paged out. The tradeoffs of this approach are less clear   since there will be less I/O than during initialization  and adding the   extra thread hop might actually slow down the common case. </pre>