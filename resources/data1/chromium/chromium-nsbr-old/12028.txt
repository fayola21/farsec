<title>Issue 12028 -   chromium -    Linux: improve memory usage on low memory devices - Project Hosting on Google Code</title> <pre> We currently have Chrome running on an ARM beagleboard with 128m of ram.   This is pretty low memory  and chrome will often swap hard (off of a slow  SD card).  It's not really a usable experience.    Just starting loading google.com on my desktop I see about ~60M of resident  and ~200M of virtual memory used between the browser and renderer.    deanm    20307  0.2  0.4 142256 35116 pts/6    Sl+  11:38   0:00  ./out/Release/chrome  deanm    20726  5.0  0.2  59332 22492 pts/6    Sl+  11:41   0:00  /usr/local/google/home/deanm/chrome/git/new/src/out/Release/chrome  --lang=en-US --type=renderer --channel=20307.9ed1ac8.1636941205    This is sort of a metabug  as there are lots of components that will need  to be investigated:    - What's using memory (sqlite  strings  GUI resources  images  etc).  - What's shared between the browser and the renderer.  - What's not shared between the browser and the renderer  investigating  things like zygoting  etc.  - Are there optimization we're doing for higher memory systems (like sqlite  preloading) that might hurt on lower memory systems.  - Investigate and make sure all big chunks of data are marked const  so  they are shared.  - Look at what's happening with our pak files  and if string16 hurting us   if we're keeping copies of the same strings in different encodings  etc.    Some interesting tools:    exmap - detailed information about process memory usage (I can't actually  get this to work correctly).    xrestop - show which process have which resources on the X server.  For  example:      mres-base Wins  GCs Fnts Pxms Misc   Pxm mem  Other   Total   PID  Identifier          24   39    1    9   24     2301K 3K   2304K 20307 Google - Chromium  0800000   354  174    1  142  305 200K     20K    220K  9566 Firefox    You can see that in chrome is uses 2304K of X-server memory  while Firefox  (which has way more tabs and stuff going on) is using 200k.  This probably  has a lot to do with our custom drawing and backing stores. </pre>