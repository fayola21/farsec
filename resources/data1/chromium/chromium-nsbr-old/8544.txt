<title>Issue 8544 -   chromium -    Crash - SafeBrowsingResourceHandler::OnUrlCheckResult - Project Hosting on Google Code</title> <pre> This crash was detected in 2.0.168.0 and appears to be a regression from 2.0.166.1. It is currently ranked #1 (based on the relative number of reports in the release).  There have been 61 reports from 57 clients. Search query: http://crash/search?query=Chrome+2.0.168.0+%60anonymous+namespace%27%3A%3APureCall%28%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=194595eb2da8cd9c Mini Dump Link: http://crash/file?reportid=194595eb2da8cd9c&amp;name=upload_file_minidump  Uptime: 26095 sec User Comments: null OS: Windows XP Service Pack 3 CPU Architecture: x86 CPU Info: GenuineIntel family 15 model 4 stepping 9 rept: null ptype: browser plat: Win32  ---------------------------- *      Loaded Modules      * ----------------------------     chrome.dll     chrome.exe     dnsapi.dll     kernel32.dll     mswsock.dll     ntdll.dll     rpcrt4.dll     user32.dll     userenv.dll     ws2_32.dll  ---------------------------- *        Crash Trace       * ----------------------------     [chrome_dll_main.cc:100] - `anonymous namespace&amp;#39;::PureCall()              [purevirt.c:47] - _purecall                  [xhash:560] - stdext::_Hash&amp;lt;stdext::_Hmap_traits&amp;lt;int ResourceDispatcher::PendingRequestInfo stdext::hash_compare&amp;lt;int std::less&amp;lt;int&amp;gt; &amp;gt; std::allocator&amp;lt;std::pair&amp;lt;int const  ResourceDispatcher::PendingRequestInfo&amp;gt; &amp;gt; 0&amp;gt; &amp;gt;::lower_bound(int const &amp;amp;) [safe_browsing_service.cc:517] - SafeBrowsingService::HandleOneCheck(SafeBrowsingService::SafeBrowsingCheck * std::vector&amp;lt;SBFullHashResult std::allocator&amp;lt;SBFullHashResult&amp;gt; &amp;gt; const &amp;amp;) [safe_browsing_service.cc:501] - SafeBrowsingService::OnHandleGetHashResults(SafeBrowsingService::SafeBrowsingCheck * std::vector&amp;lt;SBFullHashResult std::allocator&amp;lt;SBFullHashResult&amp;gt; &amp;gt; const &amp;amp;) [safe_browsing_service.cc:474] - SafeBrowsingService::HandleGetHashResults(SafeBrowsingService::SafeBrowsingCheck * std::vector&amp;lt;SBFullHashResult std::allocator&amp;lt;SBFullHashResult&amp;gt; &amp;gt; const &amp;amp; bool)    [protocol_manager.cc:223] - SafeBrowsingProtocolManager::OnURLFetchComplete(URLFetcher const * GURL const &amp;amp; URLRequestStatus const &amp;amp; int std::vector&amp;lt;std::basic_string&amp;lt;char std::char_traits&amp;lt;char&amp;gt; std::allocator&amp;lt;char&amp;gt; &amp;gt; std::allocator&amp;lt;std::basic_string&amp;lt;char std::char_traits&amp;lt;char&amp;gt; std::allocator&amp;lt;char&amp;gt; &amp;gt; &amp;gt; &amp;gt; const &amp;amp; std::basic_string&amp;lt;char std::char_traits&amp;lt;char&amp;gt; std::allocator&amp;lt;char&amp;gt; &amp;gt; const &amp;amp;)         [url_fetcher.cc:262] - URLFetcher::Core::OnCompletedURLRequest(URLRequestStatus const &amp;amp;)                 [task.h:308] - RunnableMethod&amp;lt;CancelableRequest&amp;lt;CallbackRunner&amp;lt;Tuple5&amp;lt;int bool scoped_refptr&amp;lt;RefCountedVector&amp;lt;unsigned char&amp;gt; &amp;gt; bool GURL&amp;gt; &amp;gt; &amp;gt; void ( CancelableRequest&amp;lt;CallbackRunner&amp;lt;Tuple5&amp;lt;int bool scoped_refptr&amp;lt;RefCountedVector&amp;lt;unsigned char&amp;gt; &amp;gt; bool GURL&amp;gt; &amp;gt; &amp;gt;::*)(Tuple5&amp;lt;int bool scoped_refptr&amp;lt;RefCountedVector&amp;lt;unsigned char&amp;gt; &amp;gt; bool GURL&amp;gt; const &amp;amp;) Tuple1&amp;lt;Tuple5&amp;lt;int bool scoped_refptr&amp;lt;RefCountedVector&amp;lt;unsigned char&amp;gt; &amp;gt; bool GURL&amp;gt; &amp;gt; &amp;gt;::Run()        [message_loop.cc:308] - MessageLoop::RunTask(Task *)        [message_loop.cc:316] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;amp;)        [message_loop.cc:408] - MessageLoop::DoWork()    [message_pump_win.cc:468] - base::MessagePumpForIO::DoRunLoop()     [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)      [message_pump_win.h:78] - base::MessagePumpWin::Run(base::MessagePump::Delegate *)        [message_loop.cc:197] - MessageLoop::RunInternal()        [message_loop.cc:180] - MessageLoop::RunHandler()        [message_loop.cc:154] - MessageLoop::Run()              [thread.cc:156] - base::Thread::ThreadMain()  [platform_thread_win.cc:26] - `anonymous namespace&amp;#39;::ThreadFunc(void *)    [kernel32.dll+0x0000b712] - BaseThreadStart  </pre>