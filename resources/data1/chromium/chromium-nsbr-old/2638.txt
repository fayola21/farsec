<title>Issue 2638 -   chromium -    Sanbox: Add a policy to prevent load of unknown dlls on the renderer. - Project Hosting on Google Code</title> <pre> We have two basic problems with injected dlls on a sandboxed process:    1. The dll is not aware of the sandbox  and at some point it will fail to   do what it was intended to do because it will not have enough privileges to   do it. This could very easily result in a process crash that we may or may   not be able to catch  identify and try to correct.    2. There is no crash  but because the dll is not aware of the sandbox it   fails to either do what is intended to do  or take into consideration the   security implications of its mere existence in the process. The most likely   outcome of this case is that the dll becomes a security liability for the   sandbox  while at the same time does not work as the developer intended. We   will not be able to find out about this case because there is no crash.    I think we should extend the sandbox policies so that it is not only   possible to blacklist a particular dll (our current approach to deal with   the first point)  but it is also possible to prevent any suspicious dll to   be loaded on the process. This could be accomplished with anything from a   set of heuristics to determine what is a harmless dll  to a white list that    includes all the dlls that we know we want to load on the renderer (this is   a finite number that we can determine).    Of course  by not doing anything about dlls injected on the browser process   itself  we should be allowing any third party product to interact with us.     </pre>