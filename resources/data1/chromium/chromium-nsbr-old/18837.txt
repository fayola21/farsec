<title>Issue 18837 -   chromium -    Crash - JumpList::OnFavIconDataAvailable(int bool scoped_refptr&lt;RefCountedVector&lt;unsigned char&gt; &gt; bool GURL) - Project Hosting on Google Code</title> <pre> This crash was detected in 3.0.197.11 and appears to be a regression from 3.0.196.2. It is currently ranked #1 (based on the relative number of reports in the release).  There have been 96 reports from 73 clients. Search query: http://crash/search?query=Chrome+3.0.197.11+JumpList%3A%3AOnFavIconDataAvailable%28int%2Cbool%2Cscoped_refptr%3CRefCountedVector%3Cunsigned+char%3E+%3E%2Cbool%2CGURL%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=16ec3853fcd19a9b Mini Dump Link: http://crash/file?reportid=16ec3853fcd19a9b&amp;name=upload_file_minidump  Uptime: 17961 sec User Comments: null OS: Windows 7  CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 15 stepping 6 rept: null ptype: browser plat: Win32 crash type:(EXCEPTION_BREAKPOINT@0x67063069)  ---------------------------- *        Crash Trace       * ----------------------------    [chrome_dll_main.cc:131] - `anonymous namespace'::InvalidParameter(wchar_t const * wchar_t const * wchar_t const * unsigned int unsigned int)               [invarg.c:99] - _invalid_parameter_noinfo           [jumplist.cc:719] - JumpList::OnFavIconDataAvailable(int bool scoped_refptr&lt;RefCountedVector&lt;unsigned char&gt; &gt; bool GURL)                [task.h:578] - CallbackImpl&lt;JumpList void ( JumpList::*)(int bool scoped_refptr&lt;RefCountedVector&lt;unsigned char&gt; &gt; bool GURL) Tuple5&lt;int bool scoped_refptr&lt;RefCountedVector&lt;unsigned char&gt; &gt; bool GURL&gt; &gt;::RunWithParams(Tuple5&lt;int bool scoped_refptr&lt;RefCountedVector&lt;unsigned char&gt; &gt; bool GURL&gt; const &amp;)  [cancelable_request.h:503] - CancelableRequest&lt;CallbackRunner&lt;Tuple4&lt;int bool std::vector&lt;GURL std::allocator&lt;GURL&gt; &gt; * std::map&lt;GURL scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; std::less&lt;GURL&gt; std::allocator&lt;std::pair&lt;GURL const  scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; &gt; &gt; &gt; *&gt; &gt; &gt;::ExecuteCallback(Tuple4&lt;int bool std::vector&lt;GURL std::allocator&lt;GURL&gt; &gt; * std::map&lt;GURL scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; std::less&lt;GURL&gt; std::allocator&lt;std::pair&lt;GURL const  scoped_refptr&lt;RefCountedVector&lt;GURL&gt; &gt; &gt; &gt; &gt; *&gt; const &amp;)                [task.h:307] - RunnableMethod&lt;CancelableRequest&lt;CallbackRunner&lt;Tuple2&lt;int SkBitmap *&gt; &gt; &gt; void ( CancelableRequest&lt;CallbackRunner&lt;Tuple2&lt;int SkBitmap *&gt; &gt; &gt;::*)(Tuple2&lt;int SkBitmap *&gt; const &amp;) Tuple1&lt;Tuple2&lt;int SkBitmap *&gt; &gt; &gt;::Run()       [message_loop.cc:314] - MessageLoop::RunTask(Task *)       [message_loop.cc:322] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &amp;)       [message_loop.cc:429] - MessageLoop::DoWork()   [message_pump_win.cc:209] - base::MessagePumpForUI::DoRunLoop()    [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)       [message_loop.cc:194] - MessageLoop::RunInternal()       [message_loop.cc:181] - MessageLoop::RunHandler()       [message_loop.cc:599] - MessageLoopForUI::Run(base::MessagePumpWin::Dispatcher *)       [browser_main.cc:196] - `anonymous namespace'::RunUIMessageLoop(BrowserProcess *)       [browser_main.cc:789] - BrowserMain(MainFunctionParams const &amp;)    [chrome_dll_main.cc:540] - ChromeMain [google_update_client.cc:96] - google_update::GoogleUpdateClient::Launch(HINSTANCE__ * sandbox::SandboxInterfaceInfo * wchar_t * char const * int *)     [chrome_exe_main.cc:94] - wWinMain  ---------------------------- *      Loaded Modules      * ----------------------------     ieproxy.dll     chrome.dll     gears.dll     icudt38.dll     rlz.dll     chrome.exe     CRYPTBASE.dll     KERNELBASE.dll     Wldap32.dll     actxprxy.dll     advapi32.dll     bcryptprimitives.dll     cfgmgr32.dll     clbcatq.dll     comdlg32.dll     crypt32.dll     devobj.dll     gameux.dll     gdi32.dll     iertutil.dll     kernel32.dll     lpk.dll     msasn1.dll     msctf.dll     msvcrt.dll     normaliz.dll     nsi.dll     ntdll.dll     ole32.dll     oleaut32.dll     psapi.dll     rpcrt4.dll     schannel.dll     sechost.dll     setupapi.dll     shell32.dll     shlwapi.dll     sspicli.dll     urlmon.dll     user32.dll     usp10.dll     wer.dll     wininet.dll     wintrust.dll     ws2_32.dll     xmllite.dll     EhStorAPI.dll     EhStorShell.dll     FWPUCLNT.DLL     IPHLPAPI.DLL     IconCodecService.dll     NetworkExplorer.dll     PortableDeviceApi.dll     PortableDeviceTypes.dll     RpcRtRemote.dll     SearchFolder.dll     SensApi.dll     StructuredQuery.dll     WSHTCPIP.DLL     WindowsCodecs.dll     aclui.dll     apphelp.dll     atl.dll     avrt.dll     bcrypt.dll     cabinet.dll     credssp.dll     cryptnet.dll     cryptsp.dll     cscapi.dll     davclnt.dll     davhlpr.dll     devrtl.dll     dhcpcsvc.dll     dhcpcsvc6.DLL     dnsapi.dll     drprov.dll     dsrole.dll     dui70.dll     duser.dll     dwmapi.dll     gpapi.dll     ieframe.dll     imm32.dll     ksuser.dll     linkinfo.dll     mf.dll     mfplat.dll     mpr.dll     msls31.dll     mssprxy.dll     mswsock.dll     ncrypt.dll     netutils.dll     ntdsapi.dll     ntlanman.dll     ntmarta.dll     ntshrui.dll     oleacc.dll     profapi.dll     propsys.dll     rasadhlp.dll     riched20.dll     rsaenh.dll     secur32.dll     shdocvw.dll     slc.dll     srvcli.dll     sxs.dll     t2embed.dll     userenv.dll     uxtheme.dll     version.dll     webio.dll     winhttp.dll     winmm.dll     winnsi.dll     winsta.dll     wkscli.dll     wship6.dll     comctl32.dll     GdiPlus.dll  </pre>