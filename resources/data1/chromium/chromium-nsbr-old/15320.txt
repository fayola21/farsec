<title>Issue 15320 -   chromium -    Data race in ResourceMessageFilter - Project Hosting on Google Code</title> <pre> Chrome Version       : svn <a href="/p/chromium/source/detail?r=18950">r18950</a>  OS + version : Linux    The data race was detected using ThreadSanitizer (see  <a href="http://code.google.com/p/data-race-test/wiki/ThreadSanitizer">http://code.google.com/p/data-race-test/wiki/ThreadSanitizer</a> ).    The race can be proved using RaceChecker class (see  <a href="http://code.google.com/p/data-race-test/wiki/RaceCheckerClass">http://code.google.com/p/data-race-test/wiki/RaceCheckerClass</a> )      1. Apply the attached patch (adds RaceChecker class files into base/...   adds dependencies for these files and puts RaceChecker calls into  chrome/browser/renderer_host/resource_message_filter.cc)  2. gclient sync &amp;&amp; hammer chrome  3. RACECHECKER=1 RACECHECKER_SLEEP_MS=100 ./sconsbuild/Debug/chrome  --single-process      [18142:18145:13141298542:ERROR:chrome/browser/renderer_host/resource_message_filter.cc(197)]  RACE? peer_pid = 18142  [18142:18142:13141298683:ERROR:chrome/browser/renderer_host/resource_message_filter.cc(165)]  RACE? render_process_id = 4194307  Race found between these points  === writer:   ./sconsbuild/Debug/chrome(_ZN21ResourceMessageFilter18OnChannelConnectedEi+0x1fd)[0x949066f]  ./sconsbuild/Debug/chrome(_ZN3IPC12ChannelProxy7Context18OnChannelConnectedEi+0x4b)[0xa5489ab]  ./sconsbuild/Debug/chrome(_ZN3IPC7Channel11ChannelImpl23ProcessIncomingMessagesEv+0x996)[0xa545b98]  ./sconsbuild/Debug/chrome(_ZN3IPC7Channel11ChannelImpl28OnFileCanReadWithoutBlockingEi+0x165)[0xa5467ff]  ./sconsbuild/Debug/chrome(_ZN4base19MessagePumpLibevent22OnLibeventNotificationEisPv+0x5b)[0x9629655]  ./sconsbuild/Debug/chrome[0x97a5b74]  ./sconsbuild/Debug/chrome(event_base_loop+0x158)[0x97a5e49]  ./sconsbuild/Debug/chrome(_ZN4base19MessagePumpLibevent3RunEPNS_11MessagePump8DelegateE+0x24e)[0x9629d24]  ./sconsbuild/Debug/chrome(_ZN11MessageLoop11RunInternalEv+0xc7)[0x96203c5]  ./sconsbuild/Debug/chrome(_ZN11MessageLoop10RunHandlerEv+0x11)[0x96203df]  ./sconsbuild/Debug/chrome(_ZN11MessageLoop3RunEv+0x23)[0x9620443]  ./sconsbuild/Debug/chrome(_ZN4base6Thread10ThreadMainEv+0xca)[0x9658f48]  === writer:   ./sconsbuild/Debug/chrome(_ZN21ResourceMessageFilter4InitEi+0x8a)[0x94907ee]  ./sconsbuild/Debug/chrome(_ZN24BrowserRenderProcessHost4InitEv+0xdf3)[0x94801fb]  ./sconsbuild/Debug/chrome(_ZN14RenderViewHost16CreateRenderViewEv+0xd0)[0x92a3b76]  ./sconsbuild/Debug/chrome(_ZN11TabContents32CreateRenderViewForRenderManagerEP14RenderViewHost+0xa0)[0x9333646]  ./sconsbuild/Debug/chrome(_ZN21RenderViewHostManager8NavigateERK15NavigationEntry+0xfd)[0x94d5685]  ./sconsbuild/Debug/chrome(_ZN11TabContents22NavigateToPendingEntryEb+0x36)[0x9335cc2]  ./sconsbuild/Debug/chrome(_ZN20NavigationController22NavigateToPendingEntryEb+0xfc)[0x9329630]  ./sconsbuild/Debug/chrome(_ZN20NavigationController9LoadEntryEP15NavigationEntry+0xb5)[0x932a19b]  ./sconsbuild/Debug/chrome(_ZN20NavigationController7LoadURLERK4GURLS2_j+0x42)[0x932a1e0]  ./sconsbuild/Debug/chrome(_ZNK7Browser23CreateTabContentsForURLERK4GURLS2_P7ProfilejbP12SiteInstance+0x78)[0x93a4952]  ./sconsbuild/Debug/chrome(_ZN7Browser13AddTabWithURLERK4GURLS2_jbibP12SiteInstance+0xfe)[0x93aaa92]  ./sconsbuild/Debug/chrome(_ZN11BrowserInit17LaunchWithProfile17OpenURLsInBrowserEP7BrowserbRKSt6vectorI4GURLSaIS4_EE+0x157)[0x93b62a5]  ./sconsbuild/Debug/chrome(_ZN11BrowserInit17LaunchWithProfile6LaunchEP7Profileb+0x555)[0x93b6e41]  ./sconsbuild/Debug/chrome[0x93b7192]  ./sconsbuild/Debug/chrome(_ZN11BrowserInit18ProcessCmdLineImplERK11CommandLineRKSbIwSt11char_traitsIwESaIwEEbP7ProfilePiPS_+0xdf5)[0x93b8223]  ./sconsbuild/Debug/chrome(_ZN11BrowserInit5StartERK11CommandLineRKSbIwSt11char_traitsIwESaIwEEP7ProfilePi+0x35)[0x919d3f7]  ./sconsbuild/Debug/chrome(_Z11BrowserMainRK18MainFunctionParams+0x21ab)[0x91994bf]  ./sconsbuild/Debug/chrome(ChromeMain+0x7f9)[0x9192a73]    The comment in OnChannelConnected() says  // This doesn't work in single-process mode since peer_pid  // won't be the special fake PID we use  // for RenderProcessHost in that mode  so we just have to hope that Init  // is first in that case.  My patch just adds 100ms sleeps and checks whether two writes to  render_process_id_ happen simultaneously. It shows that in --single-process  mode we *can't* hope that Init happens first.  The values written to render_process_id_ are different.    Can it be harmful?    If you run chromium without --single-process  these both accesses write the  same value into render_process_id_. At least I haven't reproduced writes of  different values in this mode. </pre>