<title>Issue 32350 -   chromium -    Click events dispatched by content scripts should not trigger the popup blocker - Project Hosting on Google Code</title> <pre> Chrome Version       : 4.0.249.49 (Official Build 35163) beta (mac)      1. Create an extension with a content script which clicks on the first link   to be found in a webpage. Here's an example:    var link = document.getElementsByTagName(&quot;a&quot;)[0];  var clickEvent = document.createEvent(&quot;MouseEvents&quot;);  clickEvent.initMouseEvent(&quot;click&quot;  true  false  window  1  0  0  0  0  false    false  false  false  0  null);  link.dispatchEvent(clickEvent);      2. Visit a page which contains the following HTML:  &lt;a href=&quot;<a href="http://www.google.com">http://www.google.com</a>&quot; target=&quot;_blank&quot;&gt;Click here&lt;/a&gt;.        A tab with <a href="http://www.google.com">http://www.google.com</a> is opened without being blocked.      The popup is blocked  and it's listed as coming from the current page   instead of from the extension.      There are two related requests here:  1. Events dispatched by content scripts (like a mouse click event   dispatched on a link) should be in a trusted context  such that code on   the native web page can open popups via window.open()  just the same as   if the event came from a real user click.  2. window.open() should not be blocked by the Popup Blocker if issued by   a content script in an extension.    One use case is an extension which simulates user behavior on a   webpage  to perform automated functional testing.    Another use case is an extension (see Vimium) which simulates clicking   on a link when you type some keyboard shortcuts. Because of this   limitation  simulating clicks on a link which in turn runs some javascript   to open the window in a new tab (via window.open() or target=&quot;_blank&quot;)   does not work. </pre>