<title>Issue 33156 -   chromium -    Plugin crash in MessageLoop::DeferOrRunPendingTask() - Project Hosting on Google Code</title> <pre> #8 topcrash in 4.0.302.2:  http://crash/reportdetail?reportid=60f08475a030307a    Stack:  Thread 0 *CRASHED* ( EXC_BAD_ACCESS / KERN_PROTECTION_FAILURE @ 0x00000008 )    0x00572b78	 [Google Chrome Framework	 - message_loop.cc:320]	MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const&amp;)  0x00572d78	 [Google Chrome Framework	 - message_loop.cc:462]	MessageLoop::DoDelayedWork(base::Time*)  0x0054ed71	 [Google Chrome Framework	 - message_pump_mac.mm:324]	base::MessagePumpCFRunLoopBase::RunDelayedWork()  0x0054f3db	 [Google Chrome Framework	 - message_pump_mac.mm:396]	base::MessagePumpCFRunLoopBase::RunNestingDeferredWork()  0x9201e760	 [CoreFoundation	 + 0x0003e760]	__CFRunLoopDoSources0  0x9201c38e	 [CoreFoundation	 + 0x0003c38e]	__CFRunLoopRun  0x9201b863	 [CoreFoundation	 + 0x0003b863]	CFRunLoopRunSpecific  0x9201b690	 [CoreFoundation	 + 0x0003b690]	CFRunLoopRunInMode  0x904d2f0b	 [HIToolbox	 + 0x00034f0b]	RunCurrentEventLoopInMode  0x904d2cc2	 [HIToolbox	 + 0x00034cc2]	ReceiveNextEventCommon  0x904d2b47	 [HIToolbox	 + 0x00034b47]	BlockUntilNextEventMatchingListInMode  0x93978ac4	 [AppKit	 + 0x00048ac4]	_DPSNextEvent  0x93978305	 [AppKit	 + 0x00048305]	-[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:]  0x9393a49e	 [AppKit	 + 0x0000a49e]	-[NSApplication run]  0x0054ec3c	 [Google Chrome Framework	 - message_pump_mac.mm:677]	base::MessagePumpNSApplication::DoRun(base::MessagePump::Delegate*)  0x0054e3c5	 [Google Chrome Framework	 - message_pump_mac.mm:213]	base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*)  0x00572ac3	 [Google Chrome Framework	 - message_loop.cc:205]	MessageLoop::Run()  0x0153e496	 [Google Chrome Framework	 - plugin_main.cc:131]	PluginMain(MainFunctionParams const&amp;)  0x0000da76	 [Google Chrome Framework	 - chrome_dll_main.cc:672]	ChromeMain  0x00001fc5	 [Google Chrome Helper	 + 0x00000fc5]	  0x00000006			      The offending line is:  void MessageLoop::RunTask(Task* task) {    DCHECK(nestable_tasks_allowed_);    // Execute the task and assume the worst: It is probably not reentrant.    nestable_tasks_allowed_ = false;      HistogramEvent(kTaskRunEvent);    task-&gt;Run();                                         &lt;-------------------    delete task;      nestable_tasks_allowed_ = true;  }      Any chance we're holding onto a stale task? </pre>