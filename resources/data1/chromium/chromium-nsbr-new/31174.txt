<title>Issue 31174 -   chromium -    ChildProcessLauncher is maybe missing code for extension processes - Project Hosting on Google Code</title> <pre> ChildProcessLauncher contains this code:    #if defined(OS_LINUX)        // On Linux  we need to add some extra file descriptors for crash   handling        // and the sandbox.        if (is_renderer || is_plugin) {          int crash_signal_fd;          if (is_renderer) {            crash_signal_fd = Singleton&lt;RendererCrashHandlerHostLinux&gt;()-&gt;                GetDeathSignalSocket();          } else {            crash_signal_fd = Singleton&lt;PluginCrashHandlerHostLinux&gt;()-&gt;                GetDeathSignalSocket();          }          if (crash_signal_fd &gt;= 0) {            fds_to_map.push_back(std::make_pair(                crash_signal_fd                 kCrashDumpSignal + base::GlobalDescriptors::kBaseDescriptor));          }        }        if (is_renderer) {          const int sandbox_fd =              Singleton&lt;RenderSandboxHostLinux&gt;()-&gt;GetRendererSocket();          fds_to_map.push_back(std::make_pair(              sandbox_fd               kSandboxIPCChannel + base::GlobalDescriptors::kBaseDescriptor));        }  #endif  // defined(OS_LINUX)    Is this necessary for extension processes too? Extension processes are   renderer processes  but they are started as a different process type so that   their crashes can be counted independently. (see `is_extension` a couple   lines above the lines I pasted in child_process_launcher.cc)    It's not completely clear from the history of that file if this was an oversight   when the extension process type was added or if this intentional. </pre>