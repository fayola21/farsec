<title>Issue 40679 -   chromium -    Refactor SiteInstance support for redirects - Project Hosting on Google Code</title> <pre> We should improve how SiteInstances are assigned to sites in the case of redirects and   downloads.    Longer version:    Chromium creates new SiteInstances when the user navigates to a different web site via the   browser process (e.g.  omnibox  bookmark  etc).  This gets tricky if the navigation redirects to a   different web site than the user typed in.    Currently  we wait to assign a SiteInstance to a site until DidNavigate  so that we wait until all the   redirects are finished.  This creates opportunities for races  where two different renderers in the   same BrowsingInstance could be used for the same site (which could break JavaScript calls   between pages).  We already have to create special cases for session restore and DOM UI pages to   avoid such races.  (See RenderViewHostManager::GetSiteInstanceForEntry.)    We should refactor the SiteInstance logic to better handle redirects.  We should assume the typed   URL will be correct (optimistically firing up a process if needed)  but we should be able to switch   to an existing renderer process if the navigation redirects to a site that's already open in the   BrowsingInstance.  If possible  we should also eagerly assign SiteInstances to simplify the logic.    (Note that separating SiteInstance logic from process logic may help with this.  See <a title="Refactor BrowsingInstances and process logic"  href="/p/chromium/issues/detail?id=11629">issue 11629</a>.)    Another reason we are lazy about assigning a SiteInstance to a site is because the navigation   could be a download.  If we change to an eager approach  we should try to allow an unused   (blank) renderer to still be used even if a download has occurred. </pre>