<title>Issue 45194 -   chromium -    Incorrect digest authentication behavior with less common qop values - Project Hosting on Google Code</title> <pre> Chrome Version: Google Chrome  5.0.375.55 (Official Build 47796) beta  URLs (if applicable): <a href="http://tools.ietf.org/html/rfc2617#section-3.2.2.1">http://tools.ietf.org/html/rfc2617#section-3.2.2.1</a>      Firefox 3.x: OK    There are several quirks with Chrome's HTTP digest authentication   (specified in RFC 2617) that seem noncompliant  though none of them too   pressing. They are valid combinations which the RFC say Chrome should   accept  and it does  but behaves oddly. To reproduce two of them I've   found:    1. Connect to a server which sends a digest challenge qop=&quot;auth-int&quot;  2. Chome will send back a response containing qop=auth-int  but where the   second hash component does not include the hashed entity body  as is   required in this case.    1. Connect to a server which sends a digest challenge qop=&quot;auth auth-int&quot;  2. Chrome will send back qop=  but use the variant of the response hash   with a nonce count  client nonce  and (empty string) qop  which requires a   response of either qop=auth or qop=auth-int.    I've attached a text file containing the authentication headers  obtained   from a Wireshark capture of the loopback interface  with analyses of   Chrome's response. The server is Happstack  a Haskell framework  and I was   writing a module to do digest authentication when I came across these   behaviors.    As auth-int isn't too commonly used  this shouldn't affect too many   client/server interactions in the wild. Nonetheless  Firefox seems to   handle the requests fine: if given auth-int  it ignores it  falling back to   the RFC 2069 standard if nothing else is specified  which is permitted by   RFC 2617. </pre>