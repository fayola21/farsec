<title>Issue 24195 -   chromium -    Layout Tests : Timer dependent layout tests - Project Hosting on Google Code</title> <pre> (Migrated from http://buganizer/issue?id=972450 )    mbelshe on January 04 2008 10:20  (Assigned)  Summary     Layout Tests: history_reload is timer dependent  Component     Chrome &gt; Deprecated &gt; WebKit  Reporter     mbelshe  Assignee     mbelshe  CC     chrome-bugs  Type     Bug  Priority     P2  Severity     S2  In prod     false  Notes  history_reload.html is timing dependent.    The basic algorithm is this:     Frame1        content = &quot;&quot;        create Frame2             content = &quot;Test Passed&quot;             onload                 if (owner.i == 0)                     content = &quot;Test Failed&quot;                     history.go(0)                 else                     content = &quot;Test Passed&quot;                     window.close             onunload                  notify layout test controller we are done  with timeout == 0      The problem is that calling history.go() replaces the content in Frame2.   This causes the Unload handler to be called.  The unload handler notifies  the layout test controller that the test is done.  With a slow clock  this  happened in 10ms.  With a fast clock  this happens immediately.  The test  isn't actually done until the second frame loads up.  mbelshe on January 04 2008 15:50  (Assigned)  Summary     Layout Tests: Timer dependent layout tests  Notes  Also found cross-frame-access-put.html has another timer-dependent  implementation.    Here the problem is different.  The test page has the main page running  script  plus an iframe running script.  both run in parallel.  Each of  these logs its test results.  With a zero-timeout in the subframe  it ends  up running before the output of the first subframe  and this makes the  lines in the expected results file not match.  So the test passed; it just  had the output lines jumbled up.  mbelshe on January 11 2008 14:05  (Assigned)  Notes  cross-frame-access-put appears to be okay.  I believe unfair scheduling of  equivalent timers was causing the ordering to differ.  The latest  scheduling changes preserve fifo order better  and it seems to be working now.  mbelshe on January 14 2008 16:09  (Assigned)  Notes  fast/repaint/bugzilla-6473.html is another racy test.  This test doesn't  use LayoutTestController.waitForFinish()  but does use setTimeout.  I  believe the current recorded expected results are wrong  and now that  timeouts are fast  sometimes you get the right results  and sometimes not.  mbelshe on February 05 2008 15:41  (Fixed / Fixed)   </pre>