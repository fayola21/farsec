<title>Issue 27641 -   chromium -    DCHECK_IS_NOT_PATCHED hit when concurrent calls to CoCreateInstance(ChromFrame) occur. - Project Hosting on Google Code</title> <pre>   1. Very quickly creating new tabs that use a Chrome Frame in IE  2. A DCHECK dialog pops up.        DCHECK dialog should not pop up :-).    Call stack:  &gt;	npchrome_tab.dll!HttpNegotiatePatch::PatchHttpNegotiate(IUnknown * to_patch=0x0088c0a0)  Line 71 + 0x85 bytes	C++   	npchrome_tab.dll!HttpNegotiatePatch::Initialize()  Line 52 + 0x11 bytes	C++   	npchrome_tab.dll!PatchHelper::InitializeAndPatchProtocolsIfNeeded()  Line 256	C++   	npchrome_tab.dll!DllGetClassObject(const _GUID &amp; rclsid={...}  const _GUID &amp; riid={...}  void * * ppv=0x03c4b2c4)  Line 264	C++   	ole32.dll!CClassCache::CDllPathEntry::DllGetClassObject()  + 0x1f bytes	   	ole32.dll!CClassCache::CDllFnPtrMoniker::BindToObjectNoSwitch()  + 0x1f bytes	   	ole32.dll!CClassCache::GetClassObject()  + 0x49 bytes	   	ole32.dll!CServerContextActivator::CreateInstance()  + 0xea bytes	   	ole32.dll!ActivationPropertiesIn::DelegateCreateInstance()  + 0x55 bytes	   	ole32.dll!CApartmentActivator::CreateInstance()  + 0x74 bytes	   	ole32.dll!CProcessActivator::CCICallback()  + 0x3d bytes	   	ole32.dll!CProcessActivator::AttemptActivation()  + 0x2c bytes	   	ole32.dll!CProcessActivator::ActivateByContext()  + 0x4f bytes	   	ole32.dll!CProcessActivator::CreateInstance()  + 0x49 bytes	   	ole32.dll!ActivationPropertiesIn::DelegateCreateInstance()  + 0x55 bytes	   	ole32.dll!CClientContextActivator::CreateInstance()  + 0xb0 bytes	   	ole32.dll!ActivationPropertiesIn::DelegateCreateInstance()  + 0x55 bytes	   	ole32.dll!ICoCreateInstanceEx()  - 0x27023 bytes	   	ole32.dll!CComActivator::DoCreateInstance()  + 0x96 bytes	   	ole32.dll!_CoCreateInstanceEx@24()  + 0x38 bytes	   	ole32.dll!_CoCreateInstance@20()  + 0x34 bytes	   	ieframe.dll!Detour_CoCreateInstance()  + 0x7c bytes	   	IEShims.dll!NS_LRIECoCreate::APIHook_CoCreateInstance()  + 0x6f bytes	    Locals:  Data:  -		it	0x5fef92b0 struct vtable_patch::MethodPatchInfo * IHttpNegotiate_PatchInfo {index_=3 method_=0x5f8c3945 stub_=0x02980000 }	vtable_patch::MethodPatchInfo *  		index_	3	int  		method_	0x5f8c3945 HttpNegotiatePatch::BeginningTransaction(long (stdcall*)(struct IHttpNegotiate * wchar_t const * wchar_t const * unsigned long wchar_t * *) struct IHttpNegotiate * wchar_t const * wchar_t const * unsigned long wchar_t * *)	  int (void)*  -		stub_	0x02980000 {signature_=0x5f8c0000 code_={...} }	FunctionStub *  -		signature_	0x5f8c0000 {unused=9460301 }	HINSTANCE__ *  		unused	9460301	int  -		code_	{hook_={...} bypassed_={...} }	FunctionStub::Opcodes  -		hook_	{pop_return_addr_='X' push_='h' arg_=2003548857 ...}	FunctionStub::Opcodes::Hook  		pop_return_addr_	88 'X'	unsigned char  		push_	104 'h'	unsigned char  		arg_	2003548857	unsigned int  		push_return_addr_	80 'P'	unsigned char  		jump_to_	233 '��_��_'	unsigned char  		target_	1559509301	unsigned int  -		bypassed_	{jump_to_='X' target_=1807399272 }	FunctionStub::Opcodes::Bypassed  		jump_to_	88 'X'	unsigned char  		target_	1807399272	unsigned int  -		to_patch	0x0088c0a0	IUnknown *  -		__vfptr	0x776958e8 const CBSCHolder::`vftable'{for `IBindStatusCallbackEx'}	*  		[0]	0x77696715 CBSCHolder::QueryInterface(struct _GUID const &amp; void * *)	*  		[1]	0x776f26ad CBSCHolder::AddRef(void)	*  		[2]	0x77695b5b CBSCHolder::Release(void)	*  		hr	-858993460	HRESULT  -		http	{...}	ScopedComPtr&lt;IHttpNegotiate &amp;_GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b&gt;  +		scoped_refptr&lt;IHttpNegotiate&gt;	{ptr_=0xcccccccc }	scoped_refptr&lt;IHttpNegotiate&gt;   </pre>