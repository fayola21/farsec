<title>Issue 40153 -   chromium -    ChromeFrame: Crash Report - Stack Signature: CFUrlmonBindStatusCallback::GetBindInfo(unsigned long * _tagBINDINFO *)-75B98 - Project Hosting on Google Code</title> <pre> This was reported on the crash server.    Product: ChromeFrame  Stack Signature: CFUrlmonBindStatusCallback::GetBindInfo(unsigned long   * _tagBINDINFO *)-75B98  New Signature Label: CFUrlmonBindStatusCallback::GetBindInfo(unsigned long   * _tagBINDINFO *)  New Signature Hash: d57ba255_74a880d8_f44ddf0c_91e9fb58_8392fffe    Report link: http://go/crash/reportdetail?reportid=64b0c0173644ce18    Meta information:  Product Name: ChromeFrame  Product Version: 5.0.366.0  Report ID: 64b0c0173644ce18  Report Time: 2010/04/01 16:50:25  Thu  Uptime: 3 sec  Cumulative Uptime: 0 sec  OS Name: Windows NT  OS Version: 5.1.2600 Service Pack 3  CPU Architecture: x86  CPU Info: GenuineIntel family 6 model 22 stepping 1    Callstack as below:-  - urlmon_bind_status_callback.cc:159]	  CFUrlmonBindStatusCallback::GetBindInfo(unsigned long * _tagBINDINFO *)  0x43fa6e43	 [urlmon.dll	 + 0x00016e43]	CopyStgMedium  0x43f99909	 [urlmon.dll	 + 0x00009909]	  CBinding::CallGetBindInfoEx(unsigned long * _tagBINDINFO * unsigned long   * unsigned long *)  0x43f99156	 [urlmon.dll	 + 0x00009156]	CBinding::StartBinding(IUri   * IBindCtx * _GUID const &amp; int unsigned short * * void * *)  0x43f99021	 [urlmon.dll	 + 0x00009021]	  CUrlMon::StartBinding(int IBindCtx * IMoniker * _GUID const &amp; void * *)  0x43f99fbf	 [urlmon.dll	 + 0x00009fbf]	  CUrlMon::BindToStorage(IBindCtx * IMoniker * _GUID const &amp; void * *)  0x33039fb7	 [npchrome_frame.dll	 - urlmon_moniker.cc:518]	  MonikerPatch::BindToStorage(long (*)(IMoniker * IBindCtx * IMoniker * _GUID   const &amp; void * *) IMoniker * IBindCtx * IMoniker * _GUID const &amp; void * *)  0x35c5a885	 [dxtrans.dll	 + 0x0000a885]	  CDXTransformFactory::LoadImageW(unsigned short * const IUnknown   * _DDSURFACEDESC const * _GUID const * _GUID const &amp; void * *)  0x35cbb334	 [dxtmsft.dll	 + 0x0000b334]	  CDXTAlphaImageLoader::put_Src(unsigned short *)  0x77115cd8	 [oleaut32.dll	 + 0x00015cd8]	DispCallFunc  0x771162e7	 [oleaut32.dll	 + 0x000162e7]	CTypeInfo2::Invoke(void   * long unsigned short tagDISPPARAMS * tagVARIANT * tagEXCEPINFO * unsigned   int *)  0x35cb4048	 [dxtmsft.dll	 + 0x00004048]	  ATL::CComTypeInfoHolder::Invoke(IDispatch * long _GUID const &amp; unsigned   long unsigned short tagDISPPARAMS * tagVARIANT * tagEXCEPINFO * unsigned   int *)  0x35cbab9b	 [dxtmsft.dll	 + 0x0000ab9b]	  ATL::IDispatchImpl&lt;IDXTAlphaImageLoader &amp;_GUID const   IID_IDXTAlphaImageLoader &amp;_GUID const   LIBID_DXTMSFTLib 1 1 ATL::CComTypeInfoHolder&gt;::Invoke(long _GUID const   &amp; unsigned long unsigned short tagDISPPARAMS * tagVARIANT * tagEXCEPINFO   * unsigned int *)  0x35cb380d	 [dxtmsft.dll	 + 0x0000380d]	  ATL::CComDispatchDriver::PutProperty(IDispatch * long tagVARIANT *)  0x35cb378e	 [dxtmsft.dll	 + 0x0000378e]	  CComPropBase::IPersistPropertyBag_Load(IPropertyBag * IErrorLog   * ATL::ATL_PROPMAP_ENTRY *)  0x35cbabd1	 [dxtmsft.dll	 + 0x0000abd1]	  ATL::IPersistPropertyBagImpl&lt;CDXTAlphaImageLoader&gt;::Load(IPropertyBag   * IErrorLog *)  0x35c56385	 [dxtrans.dll	 + 0x00006385]	  CDXTFilter::Load(IPropertyBag * IErrorLog *)  0x35c56834	 [dxtrans.dll	 + 0x00006834]	  CDXTFilterBehavior::AddFilterFromBSTR(unsigned short * const unsigned   long unsigned long * const void * * const)  0x35c55e53	 [dxtrans.dll	 + 0x00005e53]	  CDXTFilterCollection::AddFilter(unsigned short * const unsigned   long unsigned long * const void * * const)  0x3fb5bb03	 [mshtml.dll	 + 0x0001bb03]	  CFilterBehaviorSite::AddFilterToBehavior(unsigned short * unsigned short *)  0x3fb5ba69	 [mshtml.dll	 + 0x0001ba69]	  CFilterBehaviorSite::ParseAndAddFilters()  0x3fb59794	 [mshtml.dll	 + 0x00019794]	CElement::AddFilters()  0x3fb59718	 [mshtml.dll	 + 0x00019718]	IUnknown_Exec  0x3fc1e45b	 [mshtml.dll	 + 0x000de45b]	  CView::OpenView(int int int)  0x3fbc5334	 [mshtml.dll	 + 0x00085334]	  CElement::EnsureRecalcNotify(int)  0x3fd6c339	 [mshtml.dll	 + 0x0022c339]	  CElement::GetElementOffsets(CPoint *)  0x3fd6c2c2	 [mshtml.dll	 + 0x0022c2c2]	  CElement::get_offsetLeft(long *)  0x6000bb42	 [rpbrowserrecordplugin.dll	 + 0x0000bb42]	  0x6000bc26	 [rpbrowserrecordplugin.dll	 + 0x0000bc26]	  0x6000ce90	 [rpbrowserrecordplugin.dll	 + 0x0000ce90]	  ...... (2 stack frames dropped.)  0x60006280	 [rpbrowserrecordplugin.dll	 + 0x00006280]	  0x60006317	 [rpbrowserrecordplugin.dll	 + 0x00006317]	  0x6000658b	 [rpbrowserrecordplugin.dll	 + 0x0000658b]	  0x60006784	 [rpbrowserrecordplugin.dll	 + 0x00006784]	  0x60008512	 [rpbrowserrecordplugin.dll	 + 0x00008512]	  0x60019203	 [rpbrowserrecordplugin.dll	 + 0x00019203]	  0x6002d370	 [rpbrowserrecordplugin.dll	 + 0x0002d370]	  0x6001d5a6	 [rpbrowserrecordplugin.dll	 + 0x0001d5a6]	  0x6001d610	 [rpbrowserrecordplugin.dll	 + 0x0001d610]	  0x3fd3aa64	 [mshtml.dll	 + 0x001faa64]	  CMarkup::OnDirtyRangeChange(unsigned long)  0x3fc2a348	 [mshtml.dll	 + 0x000ea348]	GlobalWndOnMethodCall()  0x3fc14fe5	 [mshtml.dll	 + 0x000d4fe5]	GlobalWndProc(HWND__   * unsigned int unsigned int long)  0x7e368733	 [user32.dll	 + 0x00008733]	InternalCallWinProc  0x7e368815	 [user32.dll	 + 0x00008815]	UserCallWinProcCheckWow  0x7e3689cc	 [user32.dll	 + 0x000089cc]	DispatchMessageWorker  0x7e368a0f	 [user32.dll	 + 0x00008a0f]	DispatchMessageW  0x4040c014	 [ieframe.dll	 + 0x0012c014]	  _TraceTabThreadPerfAction(tagMSG const *)  0x403b35b5	 [ieframe.dll	 + 0x000d35b5]	  CBrowserFrame::OnTabListChanged()  0x4025408c	 [iertutil.dll	 + 0x0016408c]	IsoRemoveArtifact(unsigned   long)  0x7c80b728	 [kernel32.dll	 + 0x0000b728]	BaseThreadStart </pre>