<title>Issue 34587 -   chromium -    Leak in net::CookieStore::SetCookie() - Project Hosting on Google Code</title> <pre> From: <a href="http://build.chromium.org/buildbot/memory/builders/Chromium%20Mac%20(valgrind)/builds/3083/steps/valgrind%20test:%20unit/logs/stdio">http://build.chromium.org/buildbot/memory/builders/Chromium%20Mac%20(valgrind)/builds/3083/steps/valgrind%20test:%20unit/logs/stdio</a>    Command: src/xcodebuild/Debug/unit_tests --gtest_filter=-  VisitedLinkEventsTest.Coalescense:VisitedLinkRelayTest.Basics:RenderViewTest.ImeComposition:DnsMasterTest.MassiveConcurrentLookupTest:IPCS  yncChannelTest.*:WebDropTargetTest.URL:WebDropTargetTest.Data:AutocompleteTextFieldEditorTest.CutCopyTest:DownloadUtilTest.AddFileToPasteb  oardTest:FindPasteboardTest.ReadingFromPboardUpdatesFindText:FindPasteboardTest.SendsNotificationWhenTextChanges:RenderViewTest.MacTestCmd  Up:ChromeBrowserWindowTest.DoesHideTitle:ClearBrowsingDataControllerTest.*:NSMenuItemAdditionsTest.TestMOnDifferentLayouts:PrefsController  Test.GetPrefsViewForPage:PrefsControllerTest.GetToolbarItemForPage:PrefsControllerTest.ShowAndClose:PrefsControllerTest.SwitchToPage:Rende  rViewTest.OnPrintPages:RenderViewTest.Print*:TabStripControllerTest.AddRemoveTabs:TaskManagerWindowControllerTest.* --gtest_print_time  285 (24 direct  261 indirect) bytes in 1 blocks are definitely lost in loss record 12 238 of 13 264    operator new(unsigned long) (mp/valgrind-build/scripts/valgrind-source/coregrind/m_replacemalloc/vg_replace_malloc.c:235)    __gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const    net::CookieMonster::CanonicalCookie*&gt; &gt; &gt;::allocate(unsigned long  void const*) (ext/new_allocator.h:88)    std::_Rb_tree&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;  std::pair&lt;std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const  net::CookieMonster::CanonicalCookie*&gt;    std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const    net::CookieMonster::CanonicalCookie*&gt; &gt;  std::less&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; &gt;    std::allocator&lt;std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const    net::CookieMonster::CanonicalCookie*&gt; &gt; &gt;::_M_get_node() (stl_tree.h:356)    std::_Rb_tree&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;  std::pair&lt;std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const  net::CookieMonster::CanonicalCookie*&gt;    std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const    net::CookieMonster::CanonicalCookie*&gt; &gt;  std::less&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; &gt;    std::allocator&lt;std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const    net::CookieMonster::CanonicalCookie*&gt; &gt; &gt;::_M_create_node(std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;   const  net::CookieMonster::CanonicalCookie*&gt; const&amp;) (stl_tree.h:365)    std::_Rb_tree&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;  std::pair&lt;std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const  net::CookieMonster::CanonicalCookie*&gt;    std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const    net::CookieMonster::CanonicalCookie*&gt; &gt;  std::less&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; &gt;    std::allocator&lt;std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const    net::CookieMonster::CanonicalCookie*&gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*  std::_Rb_tree_node_base*  std::pair&lt;std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const  net::CookieMonster::CanonicalCookie*&gt; const&amp;) (stl_tree.h:789)    std::_Rb_tree&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;  std::pair&lt;std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const  net::CookieMonster::CanonicalCookie*&gt;    std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const    net::CookieMonster::CanonicalCookie*&gt; &gt;  std::less&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; &gt;    std::allocator&lt;std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const    net::CookieMonster::CanonicalCookie*&gt; &gt; &gt;::insert_equal(std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;   const  net::CookieMonster::CanonicalCookie*&gt; const&amp;) (stl_tree.h:816)    std::multimap&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;  net::CookieMonster::CanonicalCookie*    std::less&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; &gt;  std::allocator&lt;std::pair&lt;std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const  net::CookieMonster::CanonicalCookie*&gt; &gt; &gt;::insert(std::pair&lt;std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const  net::CookieMonster::CanonicalCookie*&gt; const&amp;) (stl_multimap.h:348)    net::CookieMonster::InternalInsertCookie(std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const&amp;    net::CookieMonster::CanonicalCookie*  bool) (cookie_monster.cc:489)    net::CookieMonster::SetCookieWithCreationTimeAndOptions(GURL const&amp;  std::basic_string&lt;char  std::char_traits&lt;char&gt;    std::allocator&lt;char&gt; &gt; const&amp;  base::Time const&amp;  net::CookieOptions const&amp;) (cookie_monster.cc:472)    net::CookieMonster::SetCookieWithOptions(GURL const&amp;  std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const&amp;    net::CookieOptions const&amp;) (cookie_monster.cc:700)    net::CookieStore::SetCookie(GURL const&amp;  std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const&amp;)   (cookie_store.h:52)    Suppression:  {     &lt;insert_a_suppression_name_here&gt;     Memcheck:Leak     fun:_Znw*     fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsPN3net13CookieMonster15CanonicalCookieEEEE8allocateEmPKv     fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN3net13CookieMonster15CanonicalCookieEESt10_Select1stIS6_ESt4lessISsESaIS6_EE11_M_get_nodeEv     fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN3net13CookieMonster15CanonicalCookieEESt10_Select1stIS6_ESt4lessISsESaIS6_EE14_M_create_nodeERKS6_       fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN3net13CookieMonster15CanonicalCookieEESt10_Select1stIS6_ESt4lessISsESaIS6_EE9_M_insertEPSt18_Rb_tree_nod  e_baseSE_RKS6_     fun:_ZNSt8_Rb_treeISsSt4pairIKSsPN3net13CookieMonster15CanonicalCookieEESt10_Select1stIS6_ESt4lessISsESaIS6_EE12insert_equalERKS6_     fun:_ZNSt8multimapISsPN3net13CookieMonster15CanonicalCookieESt4lessISsESaISt4pairIKSsS3_EEE6insertERKS8_     fun:_ZN3net13CookieMonster20InternalInsertCookieERKSsPNS0_15CanonicalCookieEb     fun:_ZN3net13CookieMonster35SetCookieWithCreationTimeAndOptionsERK4GURLRKSsRKN4base4TimeERKNS_13CookieOptionsE     fun:_ZN3net13CookieMonster20SetCookieWithOptionsERK4GURLRKSsRKNS_13CookieOptionsE     fun:_ZN3net11CookieStore9SetCookieERK4GURLRKSs     ...  }    (+cc: those who are in the blame list of &lt;<a href="http://build.chromium.org/buildbot/memory/builders/Chromium%20Mac%20(valgrind)/builds/3083&gt;)">http://build.chromium.org/buildbot/memory/builders/Chromium%20Mac%20(valgrind)/builds/3083&gt;)</a> </pre>