<title>Issue 36431 -   chromium -    The libxml Chrome used may create multiple CDATA sections for original single CDATA section  which may break some web apps - Project Hosting on Google Code</title> <pre> When putting the attached test.xml on your http server  than use Chrome to visit it (for   example http://localhost/test.xml?123 add parameter to avoid the cache)  you will see the   original single CDATA section will be parsed to two or three CDATA sections in Chrome.   (using javascript:alert(document.documentElement.childNodes.length) in omni bar or DOM   inspector to see the multiple CDATA sections).    Safari  IE &amp;&amp; FF do not have this issue.    Some web apps may be broken by this issue. For example  the Discuz!  the most popular forum   platform in China relies on the correct XML parsing to implement some features. in   discuzincludejscommon.js  the function &quot;ajaxpost&quot; reads the cdata section and puts the   contents of cdata section in the page. See the following code.    function ajaxpost(formid  showid  waitid  showidclass  submitbtn  recall) {      ...      var handleResult = function() {          var s = '';          ...          try {              if(BROWSER.ie) {                  s = $(ajaxframeid).contentWindow.document.XMLDocument.text;              } else {                  s =   $(ajaxframeid).contentWindow.document.documentElement.firstChild.nodeValue;              }          } catch(e) {              ...          }          ...      }  }    Bur now in Chrome  since libxml parsed out multiple cdata sections instead of single cdata   section like the original data  only part of contents are added in page and the   functionalities of the page are all broken. millions of discuz! based sites are affected. I   personally think we should fix this issue.    After digging in the libxml source code  I found the problem was because the parser of   libxml created a small cdata section (300 XMLChars  see the definition of   XML_PARSER_BUG_BUFFER) when it entered into a valid cdata section but wasn't able to find   the valid end tag of cdata section (which is &quot;]]&gt;&quot;). (Please refer to   third_party/libxml/parse.c  line: 10426  code: base = xmlParseLookupSequence(ctxt  ']'    ']'. '&gt;');    The contents' length of my test.xml is 6604 (all US-ASCII characters)  the length of first   part data my Chromium build sent to libxml was 3852  so the libxml created a cdata section   which is 300 characters since it could NOT find the valid end tag of cdata section. When   the second part (also last part) data came  the libxml parser found the the valid end tag   &quot;]]&gt;&quot;  so the rest contents of the original cdata section are put into another cdata   section. At last we got two cdata sections.    I don't know why libxml has this logic to handle cdata section  after removing the logic of    creating a 300 characters when it entered into a valid cdata section but wasn't able to   find the valid end tag of cdata section  the bug is gone.  I am not familiar with libxml  if any experts know the reason of the above logic (why use   it and whether it can be changed)  please help on fixing this issue. Otherwise  I gonna   send a bug to xmlsoft for this issue.    Thanks!    </pre>