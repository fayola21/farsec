<title>Issue 44920 -   chromium -    Browser crash (CHECK failure) at TabContents::NavigateToPendingEntry(NavigationController::ReloadType) - Project Hosting on Google Code</title> <pre> This isn��_��_��_t a terribly huge crash  it generally seems to show up in the third page of results. I see it   in both 6.0.408.1 (current dev) and 5.0.375.55 (current beta).    This happens in a couple different ways. Sometimes  a click on a bookmark button is implicated   and a crash report will have sendaction=��_��_��_BookmarkButton tag 0 sending openBookmark: to   0x1ac2f040��_��_��_ or similar  like this:    http://crash/reportdetail?reportid=c121198ab851b058    Thread 0 *CRASHED* ( EXC_BREAKPOINT / EXC_I386_BPT @ 0x006ffb64 )    0x006ffb64	 [Google Chrome Framework	 - debug_util_posix.cc:259]	  DebugUtil::BreakDebugger()  0x0070f733	 [Google Chrome Framework	 + 0x00708733]	  0x0058f264	 [Google Chrome Framework	 - tab_contents.cc:796]	  TabContents::NavigateToPendingEntry(NavigationController::ReloadType)  0x005794bd	 [Google Chrome Framework	 - navigation_controller.cc:1037]	  NavigationController::LoadEntry(NavigationEntry*)  0x00119e5a	 [Google Chrome Framework	 - browser.cc:3712]	  Browser::OpenURLAtIndex(TabContents*  GURL const&amp;  GURL const&amp;  WindowOpenDisposition    unsigned int  int  bool)  0x0011a0e3	 [Google Chrome Framework	 - browser.cc:2446]	  Browser::OpenURLFromTab(TabContents*  GURL const&amp;  GURL const&amp;  WindowOpenDisposition    unsigned int)  0x0010efe7	 [Google Chrome Framework	 - browser.cc:2435]	Browser::OpenURL(GURL   const&amp;  GURL const&amp;  WindowOpenDisposition  unsigned int)  0x00186183	 [Google Chrome Framework	 - bookmark_bar_controller.mm:1114]	-  [BookmarkBarController openURL:disposition:]  0x00184973	 [Google Chrome Framework	 - bookmark_bar_controller.mm:1123]	-  [BookmarkBarController openBookmark:]  0x981e15c5	 [AppKit	 + 0x000865c5]	-[NSApplication sendAction:to:from:]  0x0016e5a3	 [Google Chrome Framework	 - chrome_browser_application_mac.mm:290]	-  [BrowserCrApplication sendAction:to:from:]  0x982c0d40	 [AppKit	 + 0x00165d40]	-[NSControl sendAction:to:]  0x982bc7f1	 [AppKit	 + 0x001617f1]	-[NSCell _sendActionFrom:]  0x982bbae8	 [AppKit	 + 0x00160ae8]	-[NSCell trackMouse:inRect:ofView:untilMouseUp:]  0x98311144	 [AppKit	 + 0x001b6144]	-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:]  0x982ba53e	 [AppKit	 + 0x0015f53e]	-[NSControl mouseDown:]  0x001bb3ca	 [Google Chrome Framework	 - draggable_button.mm:137]	-[DraggableButton   mouseDown:]  0x982b8547	 [AppKit	 + 0x0015d547]	-[NSWindow sendEvent:]  0x981d11ae	 [AppKit	 + 0x000761ae]	-[NSApplication sendEvent:]  0x006fd2b0	 [Google Chrome Framework	 - chrome_application_mac.mm:43]	-[CrApplication   sendEvent:]  0x98164c4e	 [AppKit	 + 0x00009c4e]	-[NSApplication run]  0x006f04bc	 [Google Chrome Framework	 - message_pump_mac.mm:677]	  base::MessagePumpNSApplication::DoRun(base::MessagePump::Delegate*)  0x006efc45	 [Google Chrome Framework	 - message_pump_mac.mm:213]	  base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*)  0x00712bf3	 [Google Chrome Framework	 - message_loop.cc:204]	MessageLoop::Run()  0x0012f188	 [Google Chrome Framework	 - browser_main.cc:185]	  BrowserMain(MainFunctionParams const&amp;)  0x0000aea3	 [Google Chrome Framework	 - chrome_dll_main.cc:831]	ChromeMain  0x00001ff7	 [Google Chrome	 - chrome_exe_main.mm:16]	main    Other times  the open comes from elsewhere  as in http://crash/reportdetail?  reportid=b43c38c80ffe0053:    Thread 0 *CRASHED* ( EXC_BREAKPOINT / EXC_I386_BPT @ 0x02f98004 )    0x02f98004	 [Google Chrome Framework	 - debug_util_posix.cc:259]	  DebugUtil::BreakDebugger()  0x02fa6f83	 [Google Chrome Framework	 + 0x006abf83]	  0x02e44f74	 [Google Chrome Framework	 - tab_contents.cc:770]	  TabContents::NavigateToPendingEntry(NavigationController::ReloadType)  0x02e2e72d	 [Google Chrome Framework	 - navigation_controller.cc:1026]	  NavigationController::LoadEntry(NavigationEntry*)  0x029ffe9e	 [Google Chrome Framework	 - browser.cc:3349]	  Browser::OpenURLAtIndex(TabContents*  GURL const&amp;  GURL const&amp;  WindowOpenDisposition    unsigned int  int  bool)  0x02a002e5	 [Google Chrome Framework	 - browser.cc:1018]	Browser::OpenCurrentURL()  0x02a0144e	 [Google Chrome Framework	 - browser.cc:1688]	  Browser::ExecuteCommandWithDisposition(int  WindowOpenDisposition)  0x02a016ef	 [Google Chrome Framework	 - browser.cc:1871]	  Browser::ExecuteCommand(int)  0x02ab9fd8	 [Google Chrome Framework	 - location_bar_view_mac.mm:231]	  LocationBarViewMac::OnAutocompleteAccept(GURL const&amp;  WindowOpenDisposition  unsigned   int  GURL const&amp;)  0x0296c608	 [Google Chrome Framework	 - autocomplete_edit.cc:244]	  AutocompleteEditModel::AcceptInput(WindowOpenDisposition  bool)  0x0296eeaa	 [Google Chrome Framework	 - autocomplete_edit_view_mac.mm:682]	  AutocompleteEditViewMac::OnDoCommandBySelector(objc_selector*)  0x02a4711d	 [Google Chrome Framework	 - autocomplete_text_field.mm:261]	-  [AutocompleteTextField textView:doCommandBySelector:]  0x904dfa38	 [AppKit	 + 0x001ada38]	-[NSTextView doCommandBySelector:]  0x904d2b88	 [AppKit	 + 0x001a0b88]	-  [NSKeyBindingManager(NSKeyBindingManager_MultiClients) interpretEventAsCommand:forClient:]  0x904d1795	 [AppKit	 + 0x0019f795]	-[NSTSMInputContext interpretKeyEvents:]  0x904d12b1	 [AppKit	 + 0x0019f2b1]	-[NSView interpretKeyEvents:]  0x02a4abb3	 [Google Chrome Framework	 - autocomplete_text_field_editor.mm:252]	-  [AutocompleteTextFieldEditor interpretKeyEvents:]  0x904d11c1	 [AppKit	 + 0x0019f1c1]	-[NSTextView keyDown:]  0x90441730	 [AppKit	 + 0x0010f730]	-[NSWindow sendEvent:]  0x02a798ba	 [Google Chrome Framework	 - chrome_event_processing_window.mm:125]	-  [ChromeEventProcessingWindow sendEvent:]  0x02a786ed	 [Google Chrome Framework	 - chrome_browser_window.mm:300]	-  [ChromeBrowserWindow sendEvent:]  0x9040d6a4	 [AppKit	 + 0x000db6a4]	-[NSApplication sendEvent:]  0x02f95750	 [Google Chrome Framework	 - chrome_application_mac.mm:43]	-[CrApplication   sendEvent:]  0x9036afe6	 [AppKit	 + 0x00038fe6]	-[NSApplication run]  0x02f8893c	 [Google Chrome Framework	 - message_pump_mac.mm:677]	  base::MessagePumpNSApplication::DoRun(base::MessagePump::Delegate*)  0x02f880c5	 [Google Chrome Framework	 - message_pump_mac.mm:213]	  base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*)  0x02faa3f3	 [Google Chrome Framework	 - message_loop.cc:205]	MessageLoop::Run()  0x02a14c9b	 [Google Chrome Framework	 - browser_main.cc:182]	  BrowserMain(MainFunctionParams const&amp;)  0x028fedd8	 [Google Chrome Framework	 - chrome_dll_main.cc:814]	ChromeMain  0x00001ff7	 [Google Chrome	 - chrome_exe_main.mm:16]	main    Line numbers from 6.0.408.1 where the CHECK is at line 796:    790    // For security  we should never send non-DOM-UI URLs (other than about:blank)  791    // to a DOM UI renderer.  Double check that here.  792    int enabled_bindings = dest_render_view_host-&gt;enabled_bindings();  793    bool is_allowed_in_dom_ui_renderer =  794        DOMUIFactory::UseDOMUIForURL(entry.url()) ||  795        entry.url() == GURL(chrome::kAboutBlankURL);  796    CHECK(!BindingsPolicy::is_dom_ui_enabled(enabled_bindings) ||  797          is_allowed_in_dom_ui_renderer);    We last saw this signature and a change to this code in bug 42547. </pre>