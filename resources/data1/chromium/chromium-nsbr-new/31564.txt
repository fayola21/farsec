<title>Issue 31564 -   chromium -    Change GLES2 cmd buffer commands to be more efficient - Project Hosting on Google Code</title> <pre> The first and current GLES2 command buffer implementation  for the most   part  has a 1 to 1 GLES 2.0 function to command mapping.  In other words   for each GLES 2.0 function defined in the GLES 2.0 spec there is a   corresponding command in the command buffer implementation.    This has some significant performance issues and we should consider   redesigning the commands before we publicly release the implementation.    For example  any command that returns a value requires an IPC   synchronization call.  In GLES2.0  every shader setup requires many of   these types of calls. (glGetActiveUniform and glGetUniformLocation for   example).  Instead  if the command corresponding to glLinkProgram returned   all the information about the program just linked only 1 IPC call would be   needed per shader instead of 5-to-25 per shader.    That would require the GLES2 emulation over command buffers to record that   information so that when asked for it would just return it instead of   calling across to the server to query it as it does now.    Many other queryable GL values could also be cached on the client side   although the importance of caching them may be less.    Similarly other commands might be better off as well designed commands   instead of the current 1-to-1 function to command way it is now. </pre>