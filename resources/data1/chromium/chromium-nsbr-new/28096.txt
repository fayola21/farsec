<title>Issue 28096 -   chromium -    Handle Histogram lifetimes to avoid premature destruction - Project Hosting on Google Code</title> <pre> chrome_browser_net_websocket_experiment::WebSocketExperimentRunner    has instance variables including maps that contain pointers to Histograms.    As a result  when the instance is torn down  the Histograms race toward   destruction against the metrics services use and recording of their   contents.    The current &quot;standard&quot; pattern for using Histograms includes making sure   that the Histogram instances are not destroyed prematurely.  The underlying   premise in the most common pattern is that the histograms are held in   static variables within functions or methods.  With that format  the   histograms are not destroyed until after execution of the main() routines   have completed.    The code in this module needs to be adjusted to abide by this requirement.    One other alternative is to wait until we land a related CL  which will   actually support thread-safe-reference-counted Histograms.  That support   will allow you to release your reference asynchronously  without causing   problems.  If you are not in a rush  you should wait for that landing   before re-enabling your code.    For now  I've disabled the call the Start() method in browser_main.cc line   845  and added a TODO(ukai) and this bug number for reference.    See <a title="Crash - MetricsService::RecordCurrentHistograms()" class=closed_ref href="/p/chromium/issues/detail?id=27856"> Issue 27856 </a>: Crash - MetricsService::RecordCurrentHistograms()  <a href="http://code.google.com/p/chromium/issues/detail?id=27856">http://code.google.com/p/chromium/issues/detail?id=27856</a>  to understand the impact. </pre>