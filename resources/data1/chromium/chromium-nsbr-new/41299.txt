<title>Issue 41299 -   chromium -    Speed up IdAllocator - Project Hosting on Google Code</title> <pre> The IdAllocator used in GLESImplementation had to switch from a O(1) to O(log N) implementation   because of allowing the user to use his own Ids to make it OpenGL ES 2.0 spec compatible.      That means every call to glBindXXX now as an O(log N) look up where N is the number of GL   resources the user program has created.    One solution is to use intervals where each entry in IdAllocator represents a contiguous range of   ids. In the case where the developer always calls glGenXXX and never calls glDelXXX (a common   case) the N in the O(log N) lookup will go to 1    For other cases N will never be greater than the current case. </pre>