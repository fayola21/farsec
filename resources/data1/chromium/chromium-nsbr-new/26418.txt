<title>Issue 26418 -   chromium -    Mac NSApplication event loop may have too many autorelease pools - Project Hosting on Google Code</title> <pre> This started out as <a title="Crash : -[ChromeEventProcessingWindow shortcircuitEvent:]" class=closed_ref href="/p/chromium/issues/detail?id=25857"> bug 25857 </a>  was fixed in <a href="/p/chromium/source/detail?r=30647">r30647</a>  caused <a title="Our thing is broken on Snow Leopard" class=closed_ref href="/p/chromium/issues/detail?id=26399"> bug 26399 </a>   and <a title="Possible autorelease delays" class=closed_ref href="/p/chromium/issues/detail?id=26402"> bug 26402 </a>  and was backed out at <a href="/p/chromium/source/detail?r=30668">r30668</a>.    The other bugs and code reviews have all of the details.  The gist is:     - Stuff can get deallocated too early when we have an autorelease pool for   each CFRunLoopSource &quot;perform&quot; routine.   - If we take the pools out of the CFRunLoopSource perform routines  we   need to do something (like post an empty NSEvent) to make sure that the   loop's pool is emptied without the loop going to sleep.   - We want to minimize busy loop spinning  and therefore  we want to   minimize the number of empty NSEvents we post.  Specifically  it would be   best if we post one only when we know that the queue is empty and things   were autoreleased in a CFRunLoopSource perform routine.   - +[NSAutoreleasePool topAutoreleasePoolCount] is a debugging-only call   and has been deprecated in 10.6  so we don't want to use that.   - DeferredAutoreleasePool and   MessagePumpNSAppDeferredAutoreleasePool were pretty elegant but they   didn't work on 10.6.  10.6 recycles NSAutoreleasePool objects making it   effectively impossible to subclass.  <a title="Our thing is broken on Snow Leopard" class=closed_ref href="/p/chromium/issues/detail?id=26399"> Bug 26399 </a>.   - Checking the NSApplication event queue with -  [NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] causes   a pass through the CFRunLoop  so it can't be used from EnterExitRunLoop   to decide whether to post an empty NSEvent.  Its presence results in a really   funny &quot;shape&quot; to the application and will cause bugs and stack exhaustion.    <a title="Our thing is broken on Snow Leopard" class=closed_ref href="/p/chromium/issues/detail?id=26399"> Bug 26399 </a> comment 1.   - <a href="/p/chromium/source/detail?r=30647">r30647</a> also contained a bug which would prevent the empty NSEvent   from being posted in certain nesting scenarios  although this could be   easily solved in our own code.  <a title="Possible autorelease delays" class=closed_ref href="/p/chromium/issues/detail?id=26402"> Bug 26402 </a>.    Not working on Snow Leopard isn't an option.    The backout at <a href="/p/chromium/source/detail?r=30668">r30668</a> has the alternate band-aid fix for <a title="Crash : -[ChromeEventProcessingWindow shortcircuitEvent:]" class=closed_ref href="/p/chromium/issues/detail?id=25857"> bug 25857 </a>  but I   hope that this is only a temporary measure.  I'd like to salvage as much as   possible of <a href="/p/chromium/source/detail?r=30647">r30647</a> if possible. </pre>