<title>Issue 44129 -   chromium -    Determine startup/multiple-page-load perf bottlenecks - Project Hosting on Google Code</title> <pre> We need to take a close look at startup perf and &quot;multiple simultaneous page   load&quot; perf  find the bottlenecks  and address them.    The impetus for this was a complaint from Linus that starting Chrome w/session   restore on his laptop is slow.    Jeff tells me Ricardo is on the hook for &quot;startup perf&quot; for M6  but I suspect   this issue is bigger than one person  so I'm hoping for volunteers (or some   names from managers) to help address this.    Ricardo says there's a profiler in the Windows Platform SDK that can be used   to gather tons of data (in fact  too much data) about what's going on.  It   would be nice to bundle that all up into some kind of package where we could   say &quot;run this  then launch Chrome  then send us the dump file&quot;.    Here are some potential issues.  Note bugs for these if you know them.    * The disk cache has no information on who wants what resources  so it has no   way to do smart things like:    * Prioritize the foreground tab's requests    * Load/store resources for one page all at once    * Move cached objects around or bundle them together to make a page load be   a stream of data rather than lots of seeks    * Move resources together for all page that will be loaded on restart    * We don't measure disk contention in any way (e.g. &quot;disk requests are   starting to take a long time&quot;) so we have no way to  say  hold off on asking   for more objects in the disk cache  or serialize simultaneous page loads    * We base our process limits on total system resources  so we don't respond to   increasing memory pressure by collapsing new pages into existing processes  or   holding off on simultaneous loads (<a title="Process limit and other memory-related limits should be dynamic based on free memory"  href="/p/chromium/issues/detail?id=22546">bug 22546</a>)    * We may be doing way too much reading and calculation to determine the set of   pages to show on the New Tab Page    * Perhaps annotating history slows things down when loading many things on   startup  and we could fix by using a different storage format on disk    If we make the right fixes  then startup  page load  and session restore and   other cases of opening several tabs at once can all get faster. </pre>