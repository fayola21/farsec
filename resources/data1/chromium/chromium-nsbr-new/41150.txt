<title>Issue 41150 -   chromium -    Data race on vector in GoogleUrl - Project Hosting on Google Code</title> <pre> I was running Chrome under ThreadSanitizer  ( see <a href="http://www.chromium.org/developers/how-tos/using-valgrind/threadsanitizer">http://www.chromium.org/developers/how-tos/using-valgrind/threadsanitizer</a> )  like this:    ./tools/valgrind/valgrind.sh --tool=tsan ./out/Debug/chrome &quot;<a href="http://www.apple.com/tw">http://www.apple.com/tw</a>&quot; 2&gt;&amp;1 | tee log  and found an interesting report:    WARNING: Possible data race during write of size 8 at 0x440D268: {{{     T0 (locks held: {}):      #0  std::vector&lt;char const*  std::allocator&lt;char const*&gt; &gt;::push_back(char const* const&amp;) /usr/include/c++/4.2/bits/stl_vector.h:602      #1  url_util::AddStandardScheme(char const*) src/googleurl/src/url_util.cc:362      #2  RegisterExtensionProtocols() src/chrome/browser/extensions/extension_protocols.cc:70      #3  BrowserMain(MainFunctionParams const&amp;) src/chrome/browser/browser_main.cc:1054      #4  ChromeMain src/chrome/app/chrome_dll_main.cc:814      #5  main src/chrome/app/chrome_exe_main_gtk.cc:47    Concurrent read(s) happened at (OR AFTER) these points:     T3 (Chrome_FileThread) (locks held: {}):      #0  std::vector&lt;char const*  std::allocator&lt;char const*&gt; &gt;::size() const /usr/include/c++/4.2/bits/stl_vector.h:396      #1  std::vector&lt;char const*  std::allocator&lt;char const*&gt; &gt;::_M_range_check(unsigned long) const /usr/include/c++/4.2/bits/stl_vector.h:497      #2  std::vector&lt;char const*  std::allocator&lt;char const*&gt; &gt;::at(unsigned long) /usr/include/c++/4.2/bits/stl_vector.h:516      #3  bool url_util::(anonymous namespace)::DoIsStandard&lt;char&gt;(char const*  url_parse::Component const&amp;) src/googleurl/src/url_util.cc:109      #4  bool url_util::(anonymous namespace)::DoCanonicalize&lt;char&gt;(char const*  int  url_canon::CharsetConverter*  url_canon::CanonOutputT&lt;char&gt;*  url_parse::Parsed*) src/ï¿½_      #5  url_util::Canonicalize(char const*  int  url_canon::CharsetConverter*  url_canon::CanonOutputT&lt;char&gt;*  url_parse::Parsed*) src/googleurl/src/url_util.cc:393      #6  bool (anonymous namespace)::InitCanonical&lt;std::string&gt;(std::string const&amp;  std::string*  url_parse::Parsed*) src/googleurl/src/gurl.cc:59      #7  GURL::GURL(std::string const&amp;) src/googleurl/src/gurl.cc:117      #8  BookmarkCodec::DecodeNode(DictionaryValue const&amp;  BookmarkNode*  BookmarkNode*) src/chrome/browser/bookmarks/bookmark_codec.cc:239      #9  BookmarkCodec::DecodeChildren(ListValue const&amp;  BookmarkNode*) src/chrome/browser/bookmarks/bookmark_codec.cc:176    Location 0x440D268 is 8 bytes inside a block starting at 0x440D260 of size 24 allocated by T0 from heap:      #0  operator new(unsigned long) /tmp/vg_bins/scripts/tsan/tsan/ts_valgrind_intercepts.c:407      #1  url_util::(anonymous namespace)::InitStandardSchemes() src/googleurl/src/url_util.cc:82      #2  url_util::AddStandardScheme(char const*) src/googleurl/src/url_util.cc:361      #3  chrome::RegisterChromeSchemes() src/chrome/common/url_constants.cc:106      #4  ChromeMain src/chrome/app/chrome_dll_main.cc:659      #5  main src/chrome/app/chrome_exe_main_gtk.cc:47  }}}    After a bit of invertigation  this appeared to be a real race on vector.    I confirmed this is a data race using RaceChecker class ( see <a href="http://code.google.com/p/data-race-test/wiki/RaceCheckerClass">http://code.google.com/p/data-race-test/wiki/RaceCheckerClass</a> ):  1) apply the two attached patches  2) gclient runhooks --force  3) &lt;build chrome&gt;  4) RACECHECKER=2 RACECHECKER_SLEEP_MS=100 ./out/Debug/chrome www.apple.com/tw 2&gt;&amp;1   #### you can run &quot;... | symbolize.py | c++filt&quot; to get symbols but please note that symbols lookup is slooow.  [15395:15395:1891915264900:WARNING:chrome/browser/extensions/external_pref_extension_provider.cc(104)] Unable to deserialize json data: File doesn't exist.  Race on '0x4e1aa30' found between these points  === writer:  ./out/Debug/chrome[0x1ab8adc] &lt;url_util::AddStandardScheme(char const*)&gt;  ./out/Debug/chrome[0xdf9026] &lt;RegisterExtensionProtocols()&gt;  ./out/Debug/chrome[0xd5b1e6] &lt;BrowserMain(MainFunctionParams const&amp;)&gt;  ./out/Debug/chrome(ChromeMain+0x11f7)[0xd00133]  ./out/Debug/chrome[0xd016e9] &lt;main&gt;  /lib/libc.so.6(__libc_start_main+0xf4)[0x7fb8de1661c4]  ./out/Debug/chrome[0xcfe9a9] &lt;_start&gt;  === reader:  ./out/Debug/chrome[0x1ab7897] &lt;bool url_util::(anonymous namespace)::DoIsStandard&lt;char&gt;(char const*  url_parse::Component const&amp;)&gt;  ./out/Debug/chrome[0x1ab7cb1] &lt;bool url_util::(anonymous namespace)::DoCanonicalize&lt;char&gt;(char const*  int  url_canon::CharsetConverter*  url_canon::CanonOutputT&lt;char&gt;*  url_parse::Parsed*)&gt;  ./out/Debug/chrome[0x1ab8a56] &lt;url_util::Canonicalize(char const*  int  url_canon::CharsetConverter*  url_canon::CanonOutputT&lt;char&gt;*  url_parse::Parsed*)&gt;  ./out/Debug/chrome[0x1aac5ba] &lt;bool (anonymous namespace)::InitCanonical&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; &gt;(std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const&amp;  std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;*  url_parse::Parsed*)&gt;  ./out/Debug/chrome[0x1aac617] &lt;GURL::GURL(std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const&amp;)&gt;  ./out/Debug/chrome[0x116340a] &lt;BookmarkCodec::DecodeNode(DictionaryValue const&amp;  BookmarkNode*  BookmarkNode*)&gt;  ./out/Debug/chrome[0x1162f2c] &lt;BookmarkCodec::DecodeChildren(ListValue const&amp;  BookmarkNode*)&gt;  ./out/Debug/chrome[0x116378c] &lt;BookmarkCodec::DecodeNode(DictionaryValue const&amp;  BookmarkNode*  BookmarkNode*)&gt;  ./out/Debug/chrome[0x1163bab] &lt;BookmarkCodec::DecodeHelper(BookmarkNode*  BookmarkNode*  Value const&amp;)&gt;  ./out/Debug/chrome[0x1164140] &lt;BookmarkCodec::Decode(BookmarkNode*  BookmarkNode*  long*  Value const&amp;)&gt;  ./out/Debug/chrome[0x1175b2a] &lt;BookmarkStorage::LoadTask::Run()&gt;  ./out/Debug/chrome[0x165141b] &lt;MessageLoop::RunTask(Task*)&gt;  ./out/Debug/chrome[0x1651b38] &lt;MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const&amp;)&gt;  ./out/Debug/chrome[0x1651d88] &lt;MessageLoop::DoWork()&gt;  ./out/Debug/chrome[0x162fe78] &lt;base::MessagePumpLibevent::Run(base::MessagePump::Delegate*)&gt;  ./out/Debug/chrome[0x165241f] &lt;MessageLoop::RunInternal()&gt;  ./out/Debug/chrome[0x165243f] &lt;MessageLoop::RunHandler()&gt;  ./out/Debug/chrome[0x16524e4] &lt;MessageLoop::Run()&gt;    According to &quot;crash&quot;  this crash really happens on users' machines!    cc'ing random people from recent commits to the files from the stack </pre>