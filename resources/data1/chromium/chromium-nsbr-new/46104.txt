<title>Issue 46104 -   chromium -    Pages can get blocked in &quot;Waiting for Cache&quot; for a very long time - Project Hosting on Google Code</title> <pre> As I was debugging <a title="Chrome stalls XHRs in order to sniff mime-type"  href="/p/chromium/issues/detail?id=2016">issue 2016</a>  I ran into an issue where Chrome's HTTP cache reader/writer queue doesn't work well for long-lived requests.    Basically here is the situation:    The site author has a long-lived XHR being used to stream a slow response from the server. This XHR response is cachable (it is just really slow). They kick off the XHR asynchronously  and as data slowly arrives on it  update the progressive load of the webpage. Cool.    Now what happens if you try to load this page in multiple tabs of Chrome is:  The first page starts to load just fine  but the second one does nothing.  What has happened  is the background XHR of the first page load has acquired an exclusive lock to the cache entry  and the background XHR of the second page is stalled at &quot;Waiting for cache...&quot; trying to get a reader access to the cache entry.    Since the first request can takes minutes  this is a problem.      A couple ideas on what we might do here:    (a) [Flexible but complicated] Allow cache readers WHILE writing is in progress. This way the first request could still have exclusive access to the cache entry  but the second request could be streamed the results as they get written to the cache entry. The end result is the second page load would mirror the progress of the first one.    (a) [Naive but simpler] Have a timeout on how long we will block readers waiting for a cache entry before giving up and bypassing the cache. </pre>