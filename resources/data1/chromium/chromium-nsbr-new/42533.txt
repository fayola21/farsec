<title>Issue 42533 -   chromium -    Renderer crash when using WebSocket + DevTools - Project Hosting on Google Code</title> <pre>   Use debug build to reproduce the problem easily.    1. Open <a href="http://bloga.jp/ws/jq/jquery-websocket/test.htm">http://bloga.jp/ws/jq/jquery-websocket/test.htm</a>.  2. Open DevTools (press Ctrl+I).  3. Click &quot;Resources&quot; tab  and press &quot;Enable resource tracking&quot; button.  4. Try the following several times:    a. Open &quot;Resources&quot; tab in DevTools.    b. Reload the tab in the main browser.    c. While loading  click another tab (&quot;Scripts&quot; tab for example) in DevTools.      A sad tab appears (in the main browser).      With some debugging effort (for a whole day)  I found that a call to   WebSocketChannel::didReceiveData() may result another nested call to the same method (of the same   object)  which makes the internal state of a WebSocketChannel object inconsistent.    More specifically  when the second (nested) call is invoked  the first call to   WebSocketChannel::didReceiveData() waits the return of WebSocket::didReceiveMessage (line 228 of   WebSocketChannel.cpp)  and WebSocket::didReceiveMessage waits the return of   EventTarget::dispatchMessage() (line 247 of WebSocket.cpp).    I added a debug code around a call to dispatchMessage and caught a stack trace when a nested call of   didReceiveData() was detected:    (gdb) bt  #0  0x0000000001beba11 in WebCore::WebSocket::didReceiveMessage (this=      0x7faeec02a8d0  msg=...)      at third_party/WebKit/WebCore/websockets/WebSocket.cpp:264  #1  0x0000000001dbc31e in WebCore::WebSocketChannel::didReceiveData (this=      0x7faeec12f020  handle=0x7faeec12f140  data=0x7faeec0f7c50 &quot;&quot;  len=23)      at third_party/WebKit/WebCore/websockets/WebSocketChannel.cpp:276  #2  0x000000000230c642 in WebCore::SocketStreamHandleInternal::didReceiveData (      this=0x7faeec02aa10  socketHandle=0x7faeec0fa760  data=...)      at third_party/WebKit/WebKit/chromium/src/SocketStreamHandle.cpp:158  #3  0x0000000001618a9f in webkit_glue::WebSocketStreamHandleImpl::Context::DidReceiveData   (this=0x7faeec02aaa0  web_handle=0x7faeec0fa760  data=      0x7faeec02c840 &quot;&quot;  size=23)      at webkit/glue/websocketstreamhandle_impl.cc:122  #4  0x0000000002235915 in IPCWebSocketStreamHandleBridge::OnReceivedData (this=      0x7faeec0d8e70  data=std::vector of length 23  capacity 23 = {...})      at chrome/common/socket_stream_dispatcher.cc:118  #5  0x0000000002235c4b in SocketStreamDispatcher::OnReceivedData (this=      0x4eba720  socket_id=4  data=std::vector of length 23  capacity 23 = {...})      at chrome/common/socket_stream_dispatcher.cc:203  #6  0x0000000002237087 in DispatchToMethod&lt;SocketStreamDispatcher  void   (SocketStreamDispatcher::*)(int  std::vector&lt;char  std::allocator&lt;char&gt; &gt; const&amp;)  int    std::vector&lt;char  std::allocator&lt;char&gt; &gt; &gt; (obj=0x4eba720        method=0x2235c06 &lt;SocketStreamDispatcher::OnReceivedData(int  std::vector&lt;char    std::allocator&lt;char&gt; &gt; const&amp;)&gt;  arg=...) at ./base/tuple.h:429  #7  0x00000000022392a5 in IPC::MessageWithTuple&lt;Tuple2&lt;int  std::vector&lt;char  std::allocator&lt;char&gt; &gt;   &gt; &gt;::Dispatch&lt;SocketStreamDispatcher  void (SocketStreamDispatcher::*)(int  std::vector&lt;char    std::allocator&lt;char&gt; &gt; const&amp;)&gt; (msg=      0x4f5c0f0  obj=0x4eba720        func=0x2235c06 &lt;SocketStreamDispatcher::OnReceivedData(int  std::vector&lt;char    std::allocator&lt;char&gt; &gt; const&amp;)&gt;) at ./ipc/ipc_message_utils.h:991  #8  0x00000000022360cc in SocketStreamDispatcher::OnMessageReceived (this=      0x4eba720  msg=...) at chrome/common/socket_stream_dispatcher.cc:170  #9  0x000000000224a167 in ChildThread::OnMessageReceived (this=0x4ebe6c8        msg=...) at chrome/common/child_thread.cc:126  #10 0x00000000014418ed in IPC::ChannelProxy::Context::OnDispatchMessage (this=      0x4ebdd30  message=...) at ipc/ipc_channel_proxy.cc:204  #11 0x0000000001442b2f in DispatchToMethod&lt;IPC::ChannelProxy::Context  void   (IPC::ChannelProxy::Context::*)(IPC::Message const&amp;)  IPC::Message&gt; (obj=      0x4ebdd30        method=0x144185e &lt;IPC::ChannelProxy::Context::OnDispatchMessage(IPC::Message const&amp;)&gt;  arg=...)   at ./base/tuple.h:422  #12 0x0000000001442b6c in RunnableMethod&lt;IPC::ChannelProxy::Context  void   (IPC::ChannelProxy::Context::*)(IPC::Message const&amp;)  Tuple1&lt;IPC::Message&gt; &gt;::Run (      this=0x4f5c0c0) at ./base/task.h:296  #13 0x0000000000d752cf in MessageLoop::RunTask (this=0x7fffea50d580  task=      0x4f5c0c0) at base/message_loop.cc:328  #14 0x0000000000d759ec in MessageLoop::DeferOrRunPendingTask (this=      0x7fffea50d580  pending_task=...) at base/message_loop.cc:336  #15 0x0000000000d75c3c in MessageLoop::DoWork (this=0x7fffea50d580)      at base/message_loop.cc:443  #16 0x0000000000d7bb37 in base::MessagePumpDefault::Run (this=0x4ebc220        delegate=0x7fffea50d580) at base/message_pump_default.cc:23  #17 0x0000000000d762d3 in MessageLoop::RunInternal (this=0x7fffea50d580)      at base/message_loop.cc:204  #18 0x0000000000d762f3 in MessageLoop::RunHandler (this=0x7fffea50d580)      at base/message_loop.cc:176  #19 0x0000000000d7636b in MessageLoop::RunAllPending (this=0x7fffea50d580)      at base/message_loop.cc:160  #20 0x0000000000cdf134 in DevToolsAgentFilter::DispatchMessageLoop ()      at chrome/renderer/devtools_agent_filter.cc:26  #21 0x000000000169efbf in WebKit::DebuggerAgentManager::debugHostDispatchHandler () at   third_party/WebKit/WebKit/chromium/src/DebuggerAgentManager.cpp:132  #22 0x000000000127cc54 in v8::internal::Debugger::NotifyMessageHandler (      event=v8::Exception  exec_state=...  event_data=...  auto_continue=false)      at v8/src/debug.cc:2238  #23 0x000000000127d244 in v8::internal::Debugger::ProcessDebugEvent (      event=v8::Exception  event_data=...  auto_continue=false)      at v8/src/debug.cc:2103  #24 0x000000000127de77 in v8::internal::Debugger::OnException (exception=...        uncaught=true) at v8/src/debug.cc:1923  #25 0x000000000137e66d in v8::internal::Top::DoThrow (exception=      0x7faee91ca7f1  location=0x7fffea50adc0  message=0x0) at v8/src/top.cc:768  #26 0x000000000137e848 in v8::internal::Top::Throw (exception=0x7faee91ca7f1        location=0x7fffea50adc0) at v8/src/top.cc:618  #27 0x00000000012ff0a5 in v8::internal::AstBuildingParser::ReportMessageAt (      this=0x7fffea50b1f0  source_location=...  type=      0x2ffc0e9 &quot;unexpected_token&quot;  args=...) at v8/src/parser.cc:1402  #28 0x00000000012f314d in v8::internal::Parser::ReportMessage (this=      0x7fffea50b1f0  type=0x2ffc0e9 &quot;unexpected_token&quot;  args=...)  ---Type &lt;return&gt; to continue  or q &lt;return&gt; to quit---      at v8/src/parser.cc:1388  #29 0x00000000012f3b3d in v8::internal::Parser::ReportUnexpectedToken (this=      0x7fffea50b1f0  token=v8::internal::Token::ILLEGAL)      at v8/src/parser.cc:3255  #30 0x00000000012f76fb in v8::internal::Parser::ParseJsonValue (this=      0x7fffea50b1f0  ok=0x7fffea50b11f) at v8/src/parser.cc:4164  #31 0x00000000012f7b33 in v8::internal::Parser::ParseJson (this=      0x7fffea50b1f0  ok=0x7fffea50b11f) at v8/src/parser.cc:4117  #32 0x00000000012ff20b in v8::internal::Parser::ParseJson (this=      0x7fffea50b1f0  source=...) at v8/src/parser.cc:1356  #33 0x000000000130012b in v8::internal::MakeAST (      compile_in_global_context=true  script=...  extension=0x0  pre_data=0x0        is_json=true) at v8/src/parser.cc:5153  #34 0x000000000126d613 in MakeFunctionInfo (is_global=true  is_eval=true        validate=v8::internal::Compiler::VALIDATE_JSON  script=...  context=...        extension=0x0  pre_data=0x0) at v8/src/compiler.cc:193  #35 0x000000000126da75 in v8::internal::Compiler::CompileEval (source=...        context=...  is_global=true        validate=v8::internal::Compiler::VALIDATE_JSON) at v8/src/compiler.cc:365  #36 0x00000000013372c4 in Runtime_CompileString (args=...)      at v8/src/runtime.cc:7178  #37 0x00007faec800022a in ?? ()  #38 0x00007faec80001c1 in ?? ()  #39 0x00007fffea50b8b0 in ?? ()  ...    where I can see DevTools is calling the message loop which results a nested didReceiveMessage()   call. Unfortunately I cannot see the location of the first call to   WebSocketChannel::didReceiveMessage() because of the bogus stack trace.    I'm not sure about the fix  though. I don't know even what component to blame (WebSocket or   DevTools?). I guess DevTools is breaking the (legitimate) assumption of WebSocketChannel  so I want   to ask pfeldman for his opinion. </pre>