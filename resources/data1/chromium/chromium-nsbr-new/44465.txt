<title>Issue 44465 -   chromium -    ChromeFrame: crash related to SetCookie and privacy policy - Project Hosting on Google Code</title> <pre> Product: ChromeFrame  Stack Signature: TransformMD5-8B93B  New Signature Label: TransformMD5  New Signature Hash: 3826c818_c20459c8_1f26e02b_bdfc4a42_acbc1f43    Report link: http://go/crash/reportdetail?reportid=b7a46171d484bdf0    Meta information:  Product Name: ChromeFrame  Product Version: 5.0.375.49  Report ID: b7a46171d484bdf0  Report Time: 2010/05/18 13:58:04  Tue  Uptime: 558 sec  Cumulative Uptime: 0 sec  OS Name: Windows NT  OS Version: 5.1.2600 Service Pack 2  CPU Architecture: x86  CPU Info: AuthenticAMD family 6 model 6 stepping 2    Stack Trace:    Thread 0 *CRASHED*  0x7c943345 [ntdll.dll] +0x00043345 TransformMD5  0x77d28831 [user32.dll] +0x00008831 UserCallWinProcCheckWow  0x77d289a4 [user32.dll] +0x000089a4 DispatchMessageWorker  0x77d289e7 [user32.dll] +0x000089e7 DispatchMessageW  0x77d4ea3a [user32.dll] +0x0002ea3a DialogBox2  0x77d36889 [user32.dll] +0x00016889 InternalDialogBox  0x77d368cb [user32.dll] +0x000168cb DialogBoxIndirectParamAorW  0x77d36740 [user32.dll] +0x00016740 DialogBoxParamW  0x77ee9df0 [shlwapi.dll] +0x00049df0 DialogBoxParamWrapW  0x7720bc25 [wininet.dll] +0x0007bc25 ConfirmCookie(HWND__   * HTTP_REQUEST_HANDLE_OBJECT * _COOKIE_DLG_INFO *)  0x771f41e9 [wininet.dll] +0x000641e9   CCookieJar::CheckCookiePolicy(HTTP_REQUEST_HANDLE_OBJECT   * CCookieJar::CookieInfo * unsigned long)  0x771f448b [wininet.dll] +0x0006448b   CCookieJar::SetCookie(HTTP_REQUEST_HANDLE_OBJECT * char const * char   * unsigned long &amp; P3PCookieState * unsigned long *)  0x771f4820 [wininet.dll] +0x00064820 InternalInternetSetCookie(char const   * char const * char const * unsigned long void *)  0x330483ec [npchrome_frame.dll] - urlmon_url_request.cc:1115   UrlmonUrlRequestManager::SetCookiesForUrl(GURL const   &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt;   const &amp;)  0x3302e5d8 [npchrome_frame.dll] - plugin_url_request.h:97   PluginUrlRequestManager::SetCookiesInHost(int GURL const   &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt;   const &amp;)  0x33032501 [npchrome_frame.dll] - ipc_message_utils.h:991   IPC::MessageWithTuple&lt;Tuple3&lt;int GURL std::basic_string&lt;char std::char_trai  ts&lt;char&gt; std::allocator&lt;char&gt; &gt; &gt; &gt;::Dispatch&lt;PluginUrlRequestManager void   ( PluginUrlRequestManager::*)(int GURL const   &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt;   const &amp;)&gt;(IPC::Message const * PluginUrlRequestManager * void (   PluginUrlRequestManager::*)(int GURL const   &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt;   const &amp;))  0x33030567 [npchrome_frame.dll] - chrome_frame_automation.cc:1044   ChromeFrameAutomationClient::ProcessUrlRequestMessage(TabProxy   * IPC::Message const &amp; bool)  0x33032a08 [npchrome_frame.dll] - task.h:296   RunnableMethod&lt;ChromeFrameAutomationClient bool (   ChromeFrameAutomationClient::*)(TabProxy * IPC::Message const   &amp; bool) Tuple3&lt;TabProxy * IPC::Message bool&gt; &gt;::Run()  0x3303135a [npchrome_frame.dll] - chrome_frame_delegate.h:185   TaskMarshallerThroughWindowsMessages&lt;ChromeFrameAutomationClient&gt;::ExecuteT  ask(unsigned int unsigned int long int &amp;)  0x3302e658 [npchrome_frame.dll] - chrome_frame_automation.h:209   ChromeFrameAutomationClient::ProcessWindowMessage(HWND__ * unsigned   int unsigned int long long &amp; unsigned long)  0x3300f141 [npchrome_frame.dll] - atlwin.h:3081   ATL::CWindowImplBaseT&lt;ATL::CWindow ATL::CWinTraits&lt;1442840576 0&gt;   &gt;::WindowProc(HWND__ * unsigned int unsigned int long)  0x77d28708 [user32.dll] +0x00008708 InternalCallWinProc  0x77d287ea [user32.dll] +0x000087ea UserCallWinProcCheckWow  0x77d289a4 [user32.dll] +0x000089a4 DispatchMessageWorker  0x77d289e7 [user32.dll] +0x000089e7 DispatchMessageW  0x77d4ea3a [user32.dll] +0x0002ea3a DialogBox2  0x77d36889 [user32.dll] +0x00016889 InternalDialogBox  0x77d368cb [user32.dll] +0x000168cb DialogBoxIndirectParamAorW  0x77d36740 [user32.dll] +0x00016740 DialogBoxParamW  0x77ee9df0 [shlwapi.dll] +0x00049df0 DialogBoxParamWrapW  0x330483ec [npchrome_frame.dll] - urlmon_url_request.cc:1115   UrlmonUrlRequestManager::SetCookiesForUrl(GURL const   &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt;   const &amp;)  0x3302e5d8 [npchrome_frame.dll] - plugin_url_request.h:97   PluginUrlRequestManager::SetCookiesInHost(int GURL const   &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt;   const &amp;)  0x33032501 [npchrome_frame.dll] - ipc_message_utils.h:991   IPC::MessageWithTuple&lt;Tuple3&lt;int GURL std::basic_string&lt;char std::char_trai  ts&lt;char&gt; std::allocator&lt;char&gt; &gt; &gt; &gt;::Dispatch&lt;PluginUrlRequestManager void   ( PluginUrlRequestManager::*)(int GURL const   &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt;   const &amp;)&gt;(IPC::Message const * PluginUrlRequestManager * void (   PluginUrlRequestManager::*)(int GURL const   &amp; std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt;   const &amp;))  0x33030567 [npchrome_frame.dll] - chrome_frame_automation.cc:1044   ChromeFrameAutomationClient::ProcessUrlRequestMessage(TabProxy   * IPC::Message const &amp; bool)  0x33032a08 [npchrome_frame.dll] - task.h:296   RunnableMethod&lt;ChromeFrameAutomationClient bool (   ChromeFrameAutomationClient::*)(TabProxy * IPC::Message const   &amp; bool) Tuple3&lt;TabProxy * IPC::Message bool&gt; &gt;::Run()  0x3303135a [npchrome_frame.dll] - chrome_frame_delegate.h:185   TaskMarshallerThroughWindowsMessages&lt;ChromeFrameAutomationClient&gt;::ExecuteT  ask(unsigned int unsigned int long int &amp;)  0x3302e658 [npchrome_frame.dll] - chrome_frame_automation.h:209   ChromeFrameAutomationClient::ProcessWindowMessage(HWND__ * unsigned   int unsigned int long long &amp; unsigned long)  0x3300f141 [npchrome_frame.dll] - atlwin.h:3081   ATL::CWindowImplBaseT&lt;ATL::CWindow ATL::CWinTraits&lt;1442840576 0&gt;   &gt;::WindowProc(HWND__ * unsigned int unsigned int long)  0x77d28708 [user32.dll] +0x00008708 InternalCallWinProc  0x77d287ea [user32.dll] +0x000087ea UserCallWinProcCheckWow  0x77d289a4 [user32.dll] +0x000089a4 DispatchMessageWorker  0x77d289e7 [user32.dll] +0x000089e7 DispatchMessageW  0x75f76f6c [browseui.dll] +0x00026f6c TimedDispatchMessage(tagMSG *)  0x75f7e8b2 [browseui.dll] +0x0002e8b2 BrowserThreadProc(IETHREADPARAM *)  0x75f7ea18 [browseui.dll] +0x0002ea18 BrowserProtectedThreadProc(void *)  0x75f7ecbc [browseui.dll] +0x0002ecbc SHOpenFolderWindow  0x777c6ba9 [shdocvw.dll] +0x00086ba9 IEWinMain  0x00402371 [IEXPLORE.EXE] +0x00002371 WinMainT(HINSTANCE__ * HINSTANCE__   * char * int)  0x00402443 [IEXPLORE.EXE] +0x00002443 _ModuleEntry  0x7c816d4e [kernel32.dll] +0x00016d4e BaseProcessStart    Thread 1  0x7c90eb94 [ntdll.dll] +0x0000eb94 KiFastSystemCallRet  0x7c90e9bf [ntdll.dll] +0x0000e9bf NtWaitForSingleObject  0x7c8025da [kernel32.dll] +0x000025da WaitForSingleObjectEx  0x7c802541 [kernel32.dll] +0x00002541 WaitForSingleObject  0x00fed02a [GoogleToolbarDynamic_32_78F32466E61F1EEC.dll] -   exception_handler.cc:316   google_breakpad::ExceptionHandler::ExceptionHandlerThreadMain(void *)  0x7c80b50a [kernel32.dll] +0x0000b50a BaseThreadStart    Thread 2  0x7c90eb94 [ntdll.dll] +0x0000eb94 KiFastSystemCallRet  0x7c90e9aa [ntdll.dll] +0x0000e9aa ZwWaitForMultipleObjects  0x7c8094f1 [kernel32.dll] +0x000094f1 CreateFileMappingA  0x7c809c85 [kernel32.dll] +0x00009c85 WaitForMultipleObjects  0x00ee7026 [GoogleToolbarDynamic_32_78F32466E61F1EEC.dll] -   pageinfothread.cc:88 PageInfoThread::ThreadMain()  0x00e63592 [GoogleToolbarDynamic_32_78F32466E61F1EEC.dll] - thread.h:78   ThreadBase::fnWrapper(void *)  0x00f9b855 [GoogleToolbarDynamic_32_78F32466E61F1EEC.dll] - threadex.c:348   _callthreadstartex  0x00f9b8fa [GoogleToolbarDynamic_32_78F32466E61F1EEC.dll] - threadex.c:326   _threadstartex  0x7c80b50a [kernel32.dll] +0x0000b50a BaseThreadStart    Thread 3  0x7c90eb94 [ntdll.dll] +0x0000eb94 KiFastSystemCallRet  0x7c90e31a [ntdll.dll] +0x0000e31a NtRemoveIoCompletion  0x7c80cbd8 [kernel32.dll] +0x0000cbd8 GetQueuedCompletionStatus  0x00f59a59 [GoogleToolbarDynamic_32_78F32466E61F1EEC.dll] -   thread_pool.cc:279 ThreadPool::ThreadProc(int)  0x00ebb637 [GoogleToolbarDynamic_32_78F32466E61F1EEC.dll] - async_job.h:478   AsyncJobWithParams&lt;void TypeList&lt;long NullType&gt; ParamTuple1&lt;void * long&gt;   &gt;::Run()  0x00f58acc [GoogleToolbarDynamic_32_78F32466E61F1EEC.dll] -   thread_pool.cc:42 ThreadPool::InternalThread::ThreadMain()  0x00e63592 [GoogleToolbarDynamic_32_78F32466E61F1EEC.dll] - thread.h:78   ThreadBase::fnWrapper(void *)  0x00f9b855 [GoogleToolbarDynamic_32_78F32466E61F1EEC.dll] - threadex.c:348   _callthreadstartex  0x00f9b8fa [GoogleToolbarDynamic_32_78F32466E61F1EEC.dll] - threadex.c:326   _threadstartex  0x7c80b50a [kernel32.dll] +0x0000b50a BaseThreadStart     </pre>