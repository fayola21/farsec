<title>Issue 41640 -   chromium -    Possible deadlock in SingleThreadedProxyResolver. - Project Hosting on Google Code</title> <pre> In the process of fixing a crash (25563) I believe I've encountered a deadlock in SingleThreadProxyResolver.    Here's the stack of the pac thread:     	ntdll.dll!7764f871() 	   	[Frames below may be incorrect and/or missing  no symbols loaded for ntdll.dll]	   	ntdll.dll!7764f871() 	   	KernelBase.dll!75f80816() 	   	chrome.dll!base::WaitableEvent::Wait()  Line 50 + 0x10 bytes	C++  &gt;	chrome.dll!net::`anonymous namespace'::SyncHostResolverBridge::Resolve(const   std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; &amp; hostname=&quot;wgfzsnkilu&quot;    net::AddressFamily address_family=ADDRESS_FAMILY_IPV4  net::AddressList * addresses=0x0fc6edc4)  Line 55	  C++   	chrome.dll!net::`anonymous namespace'::DefaultJSBindings::DnsResolve(const   std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; &amp; host=&quot;wgfzsnkilu&quot;)  Line 130 + 0x1c   bytes	C++   	chrome.dll!net::ProxyResolverV8::Context::DnsResolveCallback(const v8::Arguments &amp; args={...})  Line   347 + 0x1b bytes	C++   	chrome.dll!v8::internal::HandleApiCallHelper&lt;0&gt;(v8::internal::`anonymous-  namespace'::BuiltinArguments&lt;1&gt; args={...})  Line 1004 + 0x13 bytes	C++   	chrome.dll!v8::internal::Builtin_Impl_HandleApiCall(v8::internal::`anonymous-  namespace'::BuiltinArguments&lt;1&gt; args={...})  Line 1021 + 0xd bytes	C++   	chrome.dll!v8::internal::Builtin_HandleApiCall(v8::internal::`anonymous-  namespace'::BuiltinArguments&lt;1&gt; args={...})  Line 1020 + 0x18 bytes	C++   	09d101ee()	   	chrome.dll!v8::internal::Invoke(bool construct=false  v8::internal::Handle&lt;v8::internal::JSFunction&gt;   func={...}  v8::internal::Handle&lt;v8::internal::Object&gt; receiver={...}  int argc=2  v8::internal::Object * * *   args=0x0fc6f2b0  bool * has_pending_exception=0x0fc6f163)  Line 98 + 0x19 bytes	C++   	chrome.dll!v8::internal::Execution::Call(v8::internal::Handle&lt;v8::internal::JSFunction&gt; func={...}    v8::internal::Handle&lt;v8::internal::Object&gt; receiver={...}  int argc=2  v8::internal::Object * * *   args=0x0fc6f2b0  bool * pending_exception=0x0fc6f163)  Line 124 + 0x1f bytes	C++   	chrome.dll!v8::Function::Call(v8::Handle&lt;v8::Object&gt; recv={...}  int argc=2  v8::Handle&lt;v8::Value&gt; *   argv=0x0fc6f2b0)  Line 2517 + 0x1d bytes	C++   	chrome.dll!net::ProxyResolverV8::Context::ResolveProxy(const GURL &amp; query_url={...}  net::ProxyInfo *   results=0x0b2061e8)  Line 137	C++   	chrome.dll!net::ProxyResolverV8::GetProxyForURL(const GURL &amp; query_url={...}  net::ProxyInfo *   results=0x0b2061e8  CallbackRunner&lt;Tuple1&lt;int&gt; &gt; * __formal=0x00000000  CallbackRunner&lt;Tuple1&lt;int&gt; &gt; *   __formal=0x00000000  const net::BoundNetLog &amp; net_log={...})  Line 409 + 0x1a bytes	C++   	chrome.dll!net::SingleThreadedProxyResolver::Job::DoQuery(net::ProxyResolver * resolver=0x027a9ef0    unsigned int load_log_bound=100)  Line 162 + 0x27 bytes	C++   	chrome.dll!DispatchToMethod&lt;net::SingleThreadedProxyResolver::Job void (__thiscall   net::SingleThreadedProxyResolver::Job::*)(net::ProxyResolver * unsigned int) net::ProxyResolver * unsigned   int&gt;(net::SingleThreadedProxyResolver::Job * obj=0x0b206160  void (net::ProxyResolver *  unsigned int)*   method=0x051bae40  const Tuple2&lt;net::ProxyResolver * unsigned int&gt; &amp; arg={...})  Line 429 + 0x15 bytes	C++   	chrome.dll!RunnableMethod&lt;net::SingleThreadedProxyResolver::Job void (__thiscall   net::SingleThreadedProxyResolver::Job::*)(net::ProxyResolver * unsigned int) Tuple2&lt;net::ProxyResolver   * unsigned int&gt; &gt;::Run()  Line 296 + 0x1a bytes	C++   	chrome.dll!MessageLoop::RunTask(Task * task=0x0f11fba0)  Line 329 + 0xf bytes	C++   	chrome.dll!MessageLoop::DeferOrRunPendingTask(const MessageLoop::PendingTask &amp; pending_task={...})    Line 340	C++   	chrome.dll!MessageLoop::DoWork()  Line 444 + 0xc bytes	C++   	chrome.dll!base::MessagePumpDefault::Run(base::MessagePump::Delegate * delegate=0x0fc6f7e0)  Line 23   + 0xf bytes	C++   	chrome.dll!MessageLoop::RunInternal()  Line 205 + 0x2a bytes	C++   	chrome.dll!MessageLoop::RunHandler()  Line 178	C++   	chrome.dll!MessageLoop::Run()  Line 156	C++   	chrome.dll!base::Thread::Run(MessageLoop * message_loop=0x0fc6f7e0)  Line 134	C++   	chrome.dll!base::Thread::ThreadMain()  Line 155 + 0x16 bytes	C++   	chrome.dll!`anonymous namespace'::ThreadFunc(void * closure=0x0f197800)  Line 26 + 0xf bytes	C++   	kernel32.dll!76f93677() 	   	ntdll.dll!77669d72() 	   	ntdll.dll!77669d45() 	      And the io thread:     	ntdll.dll!7764f871() 	   	[Frames below may be incorrect and/or missing  no symbols loaded for ntdll.dll]	   	ntdll.dll!7764f871() 	   	KernelBase.dll!75f80816() 	   	chrome.dll!PlatformThread::Join(void * thread_handle=0x00000644)  Line 101 + 0xe bytes	C++   	chrome.dll!base::Thread::Stop()  Line 110 + 0xc bytes	C++   	chrome.dll!base::Thread::~Thread()  Line 49	C++   	chrome.dll!base::Thread::`scalar deleting destructor'()  + 0x16 bytes	C++   	chrome.dll!scoped_ptr&lt;base::Thread&gt;::~scoped_ptr&lt;base::Thread&gt;()  Line 72 + 0x24 bytes	C++  &gt;	chrome.dll!net::SingleThreadedProxyResolver::~SingleThreadedProxyResolver()  Line 224 + 0x21 bytes	  C++   	chrome.dll!net::SingleThreadedProxyResolver::`scalar deleting destructor'()  + 0x16 bytes	C++   	chrome.dll!scoped_ptr&lt;net::ProxyResolver&gt;::~scoped_ptr&lt;net::ProxyResolver&gt;()  Line 72 + 0x24 bytes	  C++   	chrome.dll!net::ProxyService::~ProxyService()  Line 347 + 0x5c bytes	C++   	chrome.dll!net::ProxyService::`scalar deleting destructor'()  + 0x16 bytes	C++   	  chrome.dll!base::RefCountedThreadSafe&lt;net::ProxyService base::DefaultRefCountedThreadSafeTraits&lt;net::ProxySer  vice&gt; &gt;::DeleteInternal(net::ProxyService * x=0x027b3c00)  Line 146 + 0x3e bytes	C++   	chrome.dll!base::DefaultRefCountedThreadSafeTraits&lt;net::ProxyService&gt;::Destruct(net::ProxyService *   x=0x027b3c00)  Line 112 + 0x9 bytes	C++   	  chrome.dll!base::RefCountedThreadSafe&lt;net::ProxyService base::DefaultRefCountedThreadSafeTraits&lt;net::ProxySer  vice&gt; &gt;::Release()  Line 140 + 0x21 bytes	C++   	chrome.dll!scoped_refptr&lt;net::ProxyService&gt;::~scoped_refptr&lt;net::ProxyService&gt;()  Line 239	C++   	chrome.dll!URLRequestContext::~URLRequestContext()  Line 129 + 0x72 bytes	C++   	chrome.dll!ChromeURLRequestContext::~ChromeURLRequestContext()  Line 729 + 0x6a bytes	C++   	chrome.dll!ChromeURLRequestContext::`scalar deleting destructor'()  + 0x16 bytes	C++   	  chrome.dll!base::RefCountedThreadSafe&lt;URLRequestContext base::DefaultRefCountedThreadSafeTraits&lt;URLRequestCon  text&gt; &gt;::DeleteInternal(URLRequestContext * x=0x027aba00)  Line 146 + 0x3f bytes	C++   	chrome.dll!base::DefaultRefCountedThreadSafeTraits&lt;URLRequestContext&gt;::Destruct(URLRequestContext *   x=0x027aba00)  Line 112 + 0x9 bytes	C++   	  chrome.dll!base::RefCountedThreadSafe&lt;URLRequestContext base::DefaultRefCountedThreadSafeTraits&lt;URLRequestCon  text&gt; &gt;::Release()  Line 140 + 0x21 bytes	C++   	chrome.dll!scoped_refptr&lt;URLRequestContext&gt;::~scoped_refptr&lt;URLRequestContext&gt;()  Line 239	C++   	chrome.dll!ChromeURLRequestContextGetter::~ChromeURLRequestContextGetter()  Line 513 + 0xb bytes	  C++   	chrome.dll!ChromeURLRequestContextGetter::`scalar deleting destructor'()  + 0x16 bytes	C++   	chrome.dll!ChromeThread::DeleteOnThread&lt;5&gt;::Destruct&lt;URLRequestContextGetter&gt;(URLRequestContextGetter   * x=0x0281b360)  Line 141 + 0x23 bytes	C++   	  chrome.dll!base::RefCountedThreadSafe&lt;URLRequestContextGetter ChromeThread::DeleteOnIOThread&gt;::Release()    Line 140 + 0x21 bytes	C++   	chrome.dll!scoped_refptr&lt;URLRequestContextGetter&gt;::~scoped_refptr&lt;URLRequestContextGetter&gt;()  Line   239	C++   	chrome.dll!SafeBrowsingProtocolManager::~SafeBrowsingProtocolManager()  Line 107 + 0xe bytes	C++   	chrome.dll!SafeBrowsingProtocolManager::`scalar deleting destructor'()  + 0x16 bytes	C++   	chrome.dll!SafeBrowsingService::OnIOShutdown()  Line 364 + 0x31 bytes	C++   	chrome.dll!DispatchToMethod&lt;SafeBrowsingService void (__thiscall   SafeBrowsingService::*)(void)&gt;(SafeBrowsingService * obj=0x027d95b0  void (void)* method=0x04229210  const   Tuple0 &amp; arg={...})  Line 412 + 0x8 bytes	C++   	chrome.dll!RunnableMethod&lt;SafeBrowsingService void (__thiscall   SafeBrowsingService::*)(void) Tuple0&gt;::Run()  Line 296 + 0x1a bytes	C++   	chrome.dll!MessageLoop::RunTask(Task * task=0x028192a0)  Line 329 + 0xf bytes	C++   	chrome.dll!MessageLoop::DeferOrRunPendingTask(const MessageLoop::PendingTask &amp; pending_task={...})    Line 340	C++   	chrome.dll!MessageLoop::DoWork()  Line 444 + 0xc bytes	C++   	chrome.dll!base::MessagePumpForIO::DoRunLoop()  Line 449 + 0x19 bytes	C++   	chrome.dll!base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * delegate=0x0a31f858    base::MessagePumpWin::Dispatcher * dispatcher=0x00000000)  Line 52 + 0xf bytes	C++   	chrome.dll!base::MessagePumpWin::Run(base::MessagePump::Delegate * delegate=0x0a31f858)  Line 78 +   0x1c bytes	C++   	chrome.dll!MessageLoop::RunInternal()  Line 205 + 0x2a bytes	C++   	chrome.dll!MessageLoop::RunHandler()  Line 178	C++   	chrome.dll!MessageLoop::Run()  Line 156	C++   	chrome.dll!base::Thread::Run(MessageLoop * message_loop=0x0a31f858)  Line 134	C++   	chrome.dll!base::Thread::ThreadMain()  Line 155 + 0x16 bytes	C++   	chrome.dll!`anonymous namespace'::ThreadFunc(void * closure=0x027a4be0)  Line 26 + 0xf bytes	C++   	kernel32.dll!76f93677() 	   	ntdll.dll!77669d72() 	   	ntdll.dll!77669d45() 	    The io thread is trying to join with the pac thread  but the pac thread is waiting for something it scheduled   on the io thread's message loop. Presumably the message was added after the io thread's message loop was shut   down so that the message got dropped on the floor.    I'm making this a 1  because it's a deadlock. </pre>