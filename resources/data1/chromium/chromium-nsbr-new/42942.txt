<title>Issue 42942 -   chromium -    Valgrind: SQL Leak in CookieMonster - Project Hosting on Google Code</title> <pre> <a href="http://build.chromium.org/buildbot/memory/builders/Chromium%20Mac%20UI%20(valgrind)(2)/">http://build.chromium.org/buildbot/memory/builders/Chromium%20Mac%20UI%20(valgrind)(2)/</a>  builds/2794/steps/valgrind%20test:%20ui/logs/stdio    08:41:18 memcheck_analyze.py [ERROR] FAIL! There were 1 errors:   08:42:46 memcheck_analyze.py [ERROR] Leak_DefinitelyLost  Command: /b/slave/chromium-rel-mac-valgrind-ui-  2/build/src/xcodebuild/Debug/Chromium.app/Contents/MacOS/Chromium --no-first-run --  no-default-browser-check --test-type=ui --enable-file-cookies --testing-  channel=ChromeTestingInterface:76528.28 --noerrdialogs --homepage=about:blank --  disable-web-resources --user-data-  dir=/private/var/folders/Tf/TfOs8gm+HkuQrkICa3LquE+++TM/-Tmp-  /org.chromium.nA7RQY/test_user_data --metrics-recording-only --enable-logging --test-  name=NPAPITester.FLAKY_Arguments --allow-file-access-from-files  264 (28 direct  236 indirect) bytes in 1 blocks are definitely lost in loss record 6 224 of 6 911    operator new(unsigned long) (mp/vg-bins/scripts/valgrind-  memcheck/coregrind/m_replacemalloc/vg_replace_malloc.c:276)    sql::Connection::GetUniqueStatement(char const*) (connection.cc:205)    sql::Connection::GetCachedStatement(sql::StatementID const&amp;  char const*) (connection.cc:187)    sql::MetaTable::PrepareGetStatement(sql::Statement*  char const*) (meta_table.cc:137)    sql::MetaTable::GetValue(char const*  int*) (meta_table.cc:76)    sql::MetaTable::GetCompatibleVersionNumber() (meta_table.cc:117)    SQLitePersistentCookieStore::EnsureDatabaseVersion(sql::Connection*)   (sqlite_persistent_cookie_store.cc:363)    SQLitePersistentCookieStore::Load(std::vector&lt;std::pair&lt;std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;  net::CookieMonster::CanonicalCookie*&gt;    std::allocator&lt;std::pair&lt;std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;    net::CookieMonster::CanonicalCookie*&gt; &gt; &gt;*) (sqlite_persistent_cookie_store.cc:318)    net::CookieMonster::InitStore() (cookie_monster.cc:130)    net::CookieMonster::InitIfNecessary() (cookie_monster.h:151)    net::CookieMonster::FindCookiesForHostAndDomain(GURL const&amp;  net::CookieOptions const&amp;    std::vector&lt;net::CookieMonster::CanonicalCookie*    std::allocator&lt;net::CookieMonster::CanonicalCookie*&gt; &gt;*) (cookie_monster.cc:941)    net::CookieMonster::GetCookiesWithOptions(GURL const&amp;  net::CookieOptions const&amp;)   (cookie_monster.cc:857)    URLRequestHttpJob::OnCanGetCookiesCompleted(int) (url_request_http_job.cc:450)    URLRequestHttpJob::AddCookieHeaderAndStart() (url_request_http_job.cc:731)    URLRequestHttpJob::Start() (url_request_http_job.cc:158)    URLRequest::StartJob(URLRequestJob*) (url_request.cc:282)    URLRequest::Start() (url_request.cc:253)    URLFetcher::Core::StartURLRequest() (url_fetcher.cc:255)    void DispatchToMethod&lt;URLFetcher::Core  void (URLFetcher::Core::*)()&gt;(URLFetcher::Core*  void   (URLFetcher::Core::*)()  Tuple0 const&amp;) (tuple.h:412)    RunnableMethod&lt;URLFetcher::Core  void (URLFetcher::Core::*)()  Tuple0&gt;::Run() (task.h:296)    MessageLoop::RunTask(Task*) (message_loop.cc:328)    MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const&amp;)   (message_loop.cc:336)    MessageLoop::DoWork() (message_loop.cc:443)    base::MessagePumpLibevent::Run(base::MessagePump::Delegate*)   (message_pump_libevent.cc:241)    MessageLoop::RunInternal() (message_loop.cc:204)    MessageLoop::RunHandler() (message_loop.cc:176)    MessageLoop::Run() (message_loop.cc:154)    base::Thread::Run(MessageLoop*) (thread.cc:133)    base::Thread::ThreadMain() (thread.cc:156)    ThreadFunc(void*) (platform_thread_posix.cc:26)  Suppression:  {     &lt;insert_a_suppression_name_here&gt;     Memcheck:Leak     fun:_Znw*     fun:_ZN3sql10Connection18GetUniqueStatementEPKc     fun:_ZN3sql10Connection18GetCachedStatementERKNS_11StatementIDEPKc     fun:_ZN3sql9MetaTable19PrepareGetStatementEPNS_9StatementEPKc     fun:_ZN3sql9MetaTable8GetValueEPKcPi     fun:_ZN3sql9MetaTable26GetCompatibleVersionNumberEv     fun:_ZN27SQLitePersistentCookieStore21EnsureDatabaseVersionEPN3sql10ConnectionE       fun:_ZN27SQLitePersistentCookieStore4LoadEPSt6vectorISt4pairISsPN3net13CookieMonster15Can  onicalCookieEESaIS6_EE     fun:_ZN3net13CookieMonster9InitStoreEv     fun:_ZN3net13CookieMonster15InitIfNecessaryEv       fun:_ZN3net13CookieMonster27FindCookiesForHostAndDomainERK4GURLRKNS_13CookieOption  sEPSt6vectorIPNS0_15CanonicalCookieESaIS9_EE     fun:_ZN3net13CookieMonster21GetCookiesWithOptionsERK4GURLRKNS_13CookieOptionsE     fun:_ZN17URLRequestHttpJob24OnCanGetCookiesCompletedEi     fun:_ZN17URLRequestHttpJob23AddCookieHeaderAndStartEv     fun:_ZN17URLRequestHttpJob5StartEv     fun:_ZN10URLRequest8StartJobEP13URLRequestJob     fun:_ZN10URLRequest5StartEv     fun:_ZN10URLFetcher4Core15StartURLRequestEv     fun:_Z16DispatchToMethodIN10URLFetcher4CoreEMS1_FvvEEvPT_T0_RK6Tuple0     fun:_ZN14RunnableMethodIN10URLFetcher4CoreEMS1_FvvE6Tuple0E3RunEv     fun:_ZN11MessageLoop7RunTaskEP4Task     fun:_ZN11MessageLoop21DeferOrRunPendingTaskERKNS_11PendingTaskE  } </pre>