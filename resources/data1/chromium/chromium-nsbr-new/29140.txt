<title>Issue 29140 -   chromium -    runtest.py loses output when tests hang - Project Hosting on Google Code</title> <pre> runtest.py loses output when tests hang.    If a test that runtest.py invokes hangs  it is likely that the most recent   output will be lost.  Buildbot will terminate (with signal 9) all hanging   processes (including runtest.py  which may be waiting on readline() to   return that latest output).    An example:  <a href="http://build.chromium.org/buildbot/try-">http://build.chromium.org/buildbot/try-</a>  server/builders/win/builds/10386/steps/net_unittests/logs/stdio    srcthird_partypython_24python_slave ......scriptsslaveruntest.py --  target Debug --build-dir src/build net_unittests.exe --gtest_print_time   in dir c:bslavewinbuild (timeout 600 secs)  ...  [       OK ] FtpAuthCacheTest.OnlyRemoveMatching (0 ms)  [ RUN      ] FtpAuthCacheTest.EvictOldEnt  command timed out: 600 seconds without output  killing pid 108468  program finished with exit code 1  elapsedTime=601.229000    Option 1: Modify buildbot to send signal 15 on hang first  wait for 5s    send signal 9.  We'd modify runtest.py to handle signal 15 by reading what   it can from the subprocess's stdout/stderr and printing that to the screen.    Option 2: Modify runtest.py to more smartly read the subprocess's   stdout/stderr and print that to the screen.    Option 1 has the downside that it's a local change to Buildbot and still   requires changes to runtest.py.  Option 2 is more complicated than what   we're doing currently in RunCommand  but has the upside that we don't need   to merge stdout/stderr  so slaves that have usePTY = False will show red   output for error messages afterwards.  Option 2 also has a good chance of   fixing poorly merged stdout/stderr from a page cycler that's caused a test   regression.    I will work on modifying runtest.py to more smartly read the stdout/stderr. </pre>