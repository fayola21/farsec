<title>Issue 34996 -   chromium -    WorkerTest.MessagePorts is flaky - Project Hosting on Google Code</title> <pre> C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;Test some cases of MessagePort garbage collection.    Should be 'bar': bar  onmessage  message listener  DONE    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-channel-gc.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;Test that MessagePort close event gets delivered (without crashing) even if the channel object is garbage   collected.    DONE    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-channel-gc-2.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;Test that MessagePort messages are delivered even if both ports are inaccessible from JS any more.    Should say PASS twice.    PASS: message delivered. Port: [object MessagePort]  PASS: port closed.    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-channel-gc-3.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;Test that MessagePort messages are delivered even if both ports are in transit (cloned).    Should say PASS twice.    PASS: Received message to cloned port.  PASS: Received message from cloned port.    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-channel-gc-4.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;Test cross-frame MessagePort communication.    Should be a series of SUCCESS messages  followed with DONE.    Simple exchange: SUCCESS  Posted port: SUCCESS  Event Listener: SUCCESS  Closed port: SUCCESS  MessageEvent.cancelable defaults to false: PASS  DONE    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-port.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;Tests various use cases when cloning MessagePorts.    Should be a series of SUCCESS messages  followed with DONE.    SUCCESS: Posting port to itself: Error: INVALID_STATE_ERR: DOM Exception 11  SUCCESS: Posting entangled port: Error: INVALID_STATE_ERR: DOM Exception 11  SUCCESS: Posting cloned port.  SUCCESS: Posted messages to cloned port.  SUCCESS: Cloned both endpoints of a channel.  SUCCESS: Got closed port with event message closed  DONE    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-port-clone.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;Test that destroying a document doesn't cause a crash when executing MessageChannel constructor   saved from its Window object.    Didn't crash: SUCCESS    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-port-constructor-  for-deleted-document.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;Test that destroying a document doesn't cause a crash when posting a message to a MessagePort it   owned.    Didn't crash: SUCCESS    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-port-deleted-  document.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;Test that destroying a frame doesn't cause a crash when posting a message to a MessagePort it owned.    Didn't crash: SUCCESS    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-port-deleted-  frame.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;Test that messaging an inactive frameless document works as expected.    Didn't crash  freeze or respond: SUCCESS    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-port-inactive-  document.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;This test checks the various use cases around sending multiple ports through MessagePort.postMessage    On success  you will see a series of &quot;PASS&quot; messages  followed by &quot;TEST COMPLETE&quot;.      PASS channel.port1.postMessage(&quot;same port&quot;  [channel.port1]) threw exception Error: INVALID_STATE_ERR: DOM   Exception 11.  PASS channel.port1.postMessage(&quot;entangled port&quot;  [channel.port2]) threw exception Error: INVALID_STATE_ERR:   DOM Exception 11.  PASS channel.port1.postMessage(&quot;null port&quot;  [channel3.port1  null  channel3.port2]) threw exception Error:   INVALID_STATE_ERR: DOM Exception 11.  PASS channel.port1.postMessage(&quot;notAPort&quot;  [channel3.port1  {}  channel3.port2]) threw exception TypeError:   MessagePortArray argument must contain only MessagePorts.  PASS channel.port1.postMessage(&quot;notAnArray&quot;  channel3.port1) threw exception TypeError: MessagePortArray   argument has no length attribute.  PASS channel.port1.postMessage(&quot;notASequence&quot;  [{length: 3}]) threw exception TypeError: MessagePortArray   argument must contain only MessagePorts.  PASS event.ports is null when no port sent  PASS event.ports is null when empty array sent  PASS event.ports contains two ports when two ports sent  PASS event.ports contains two ports when two ports re-sent after error    TEST COMPLETE    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-port-multi.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(226): error: Value of: value.c_str()    Actual: &quot;  &quot;  Expected: expected_result_value.c_str()  Which is: &quot;Test that delivering a message to a port that was never referenced from JS doesn't cause a crash.    PASS    &quot;  Google Test trace:  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_layout_test.cc(153): message-port-no-  wrapper.html  C:bslavechromium-dbg-builderbuildsrcchrometestuiui_test.cc(167): error: Value of: actual_crashes    Actual: 12  Expected: expected_crashes_  Which is: 0  Encountered an unexpected crash in the program during this test.    Failed this way 2 time(s). First failure was on 2010-02-07  and last on 2010-02-07. </pre>