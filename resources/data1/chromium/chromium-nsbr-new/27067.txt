<title>Issue 27067 -   chromium -    Crash - BookmarkMenuController::BookmarkNodeFavIconLoaded(BookmarkModel * BookmarkNode const *) - Project Hosting on Google Code</title> <pre> This crash was detected in 4.0.237.0 and appears to be a regression from 4.0.223.16. It is currently ranked #1 (based on the relative number of reports in the release).  There have been 450 reports from 328 clients. Search query: http://crash/search?query=Chrome+4.0.237.0+SkBitmap%3A%3AfreeMipMap%28%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=a9eb4934f4c30275 Mini Dump Link: http://crash/file?reportid=a9eb4934f4c30275&name=upload_file_minidump  Uptime: 424 sec User Comments: null OS: Windows 7  CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 23 stepping 10 rept: null ptype: browser plat: Win32 crash type:(EXCEPTION_ACCESS_VIOLATION@0x000000a8)  ---------------------------- *        Crash Trace       * ----------------------------                     [skbitmap.cpp:358] - SkBitmap::freeMipMap()                     [skbitmap.cpp:338] - SkBitmap::freePixels()                     [skbitmap.cpp:102] - SkBitmap::operator=(SkBitmap const &) [bookmark_menu_controller_views.cc:276] - BookmarkMenuController::BookmarkNodeFavIconLoaded(BookmarkModel * BookmarkNode const *)                [bookmark_model.cc:419] - BookmarkModel::FavIconLoaded(BookmarkNode const *)                [bookmark_model.cc:654] - BookmarkModel::OnFavIconDataAvailable(int bool scoped_refptr<RefCountedBytes> bool GURL)                           [task.h:549] - CallbackImpl<BookmarkModel void ( BookmarkModel::*)(int bool scoped_refptr<RefCountedBytes> bool GURL) Tuple5<int bool scoped_refptr<RefCountedBytes> bool GURL> >::RunWithParams(Tuple5<int bool scoped_refptr<RefCountedBytes> bool GURL> const &)             [cancelable_request.h:512] - CancelableRequest<CallbackRunner<Tuple2<int scoped_refptr<BaseSessionService::InternalGetCommandsRequest> > > >::ExecuteCallback(Tuple2<int scoped_refptr<BaseSessionService::InternalGetCommandsRequest> > const &)                           [task.h:277] - RunnableMethod<CancelableRequest<CallbackRunner<Tuple2<int std::vector<PageUsageData * std::allocator<PageUsageData *> > *> > > void ( CancelableRequest<CallbackRunner<Tuple2<int std::vector<PageUsageData * std::allocator<PageUsageData *> > *> > >::*)(Tuple2<int std::vector<PageUsageData * std::allocator<PageUsageData *> > *> const &) Tuple1<Tuple2<int std::vector<PageUsageData * std::allocator<PageUsageData *> > *> > >::Run()                  [message_loop.cc:320] - MessageLoop::RunTask(Task *)                  [message_loop.cc:328] - MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const &)                  [message_loop.cc:435] - MessageLoop::DoWork()              [message_pump_win.cc:209] - base::MessagePumpForUI::DoRunLoop()               [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)                  [message_loop.cc:200] - MessageLoop::RunInternal()                  [message_loop.cc:177] - MessageLoop::RunHandler()                  [message_loop.cc:605] - MessageLoopForUI::Run(base::MessagePumpWin::Dispatcher *)               [menu_controller.cc:201] - views::MenuController::Run(HWND__ * views::MenuButton * views::MenuItemView * gfx::Rect const & views::MenuItemView::AnchorPosition int *)                [menu_item_view.cc:110] - views::MenuItemView::RunMenuAt(HWND__ * views::MenuButton * gfx::Rect const & views::MenuItemView::AnchorPosition bool) [bookmark_menu_controller_views.cc:76] - BookmarkMenuController::RunMenuAt(views::MenuButton * views::MenuItemView::AnchorPosition bool) [bookmark_menu_controller_views.cc:56] - BookmarkMenuController::RunMenuAt(BookmarkBarView * bool)            [bookmark_bar_view.cc:1145] - BookmarkBarView::RunMenu(views::View * gfx::Point const &)                   [menu_button.cc:151] - views::MenuButton::Activate()                   [menu_button.cc:198] - views::MenuButton::OnMouseReleased(views::MouseEvent const & bool)                          [view.cc:515] - views::View::ProcessMouseReleased(views::MouseEvent const & bool)                     [root_view.cc:446] - views::RootView::OnMouseReleased(views::MouseEvent const & bool)                    [widget_win.cc:914] - views::WidgetWin::ProcessMouseReleased(WTL::CPoint const & unsigned int)                    [widget_win.cc:588] - views::WidgetWin::OnLButtonUp(unsigned int WTL::CPoint const &)                     [widget_win.h:141] - views::WidgetWin::_ProcessWindowMessage(HWND__ * unsigned int unsigned int long long & unsigned long)                      [widget_win.h:95] - views::WidgetWin::ProcessWindowMessage(HWND__ * unsigned int unsigned int long long & unsigned long)                [user32.dll+0x00016237] - InternalCallWinProc                [user32.dll+0x000168e9] - UserCallWinProcCheckWow                [user32.dll+0x00017d30] - DispatchMessageWorker                [user32.dll+0x00017df9] - DispatchMessageW        [accelerator_handler_win.cc:57] - views::AcceleratorHandler::Dispatch(tagMSG const &)              [message_pump_win.cc:357] - base::MessagePumpForUI::ProcessMessageHelper(tagMSG const &)              [message_pump_win.cc:205] - base::MessagePumpForUI::DoRunLoop()               [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)                  [message_loop.cc:200] - MessageLoop::RunInternal()                  [message_loop.cc:177] - MessageLoop::RunHandler()                  [message_loop.cc:605] - MessageLoopForUI::Run(base::MessagePumpWin::Dispatcher *)                  [browser_main.cc:147] - `anonymous namespace'::RunUIMessageLoop(BrowserProcess *)                  [browser_main.cc:877] - BrowserMain(MainFunctionParams const &)               [chrome_dll_main.cc:624] - ChromeMain                   [client_util.cc:170] - MainDllLoader::Launch(HINSTANCE__ * sandbox::SandboxInterfaceInfo *)                [chrome_exe_main.cc:47] - wWinMain                           [crt0.c:324] - __tmainCRTStartup              [kernel32.dll+0x00013676] - BaseThreadInitThunk                 [ntdll.dll+0x00039d71] - __RtlUserThreadStart                 [ntdll.dll+0x00039d44] - _RtlUserThreadStart  ---------------------------- *      Loaded Modules      * ----------------------------     chrome.dll     gears.dll     icudt42.dll     rlz.dll     chrome.exe     DropboxExt.6.dll     msvcp71.dll     msvcr71.dll     CRYPTBASE.dll     KERNELBASE.dll     Wldap32.dll     advapi32.dll     bcryptprimitives.dll     cfgmgr32.dll     clbcatq.dll     crypt32.dll     devobj.dll     gameux.dll     gdi32.dll     iertutil.dll     kernel32.dll     lpk.dll     msasn1.dll     msctf.dll     msvcrt.dll     normaliz.dll     nsi.dll     ntdll.dll     ole32.dll     oleaut32.dll     psapi.dll     rpcrt4.dll     schannel.dll     sechost.dll     setupapi.dll     shell32.dll     shlwapi.dll     sspicli.dll     urlmon.dll     user32.dll     usp10.dll     wer.dll     wininet.dll     ws2_32.dll     xmllite.dll     EhStorShell.dll     FWPUCLNT.DLL     IPHLPAPI.DLL     RpcRtRemote.dll     SensApi.dll     WSHTCPIP.DLL     WindowsCodecs.dll     apphelp.dll     bcrypt.dll     cabinet.dll     credssp.dll     cryptnet.dll     cryptsp.dll     cscapi.dll     dciman32.dll     ddraw.dll     devrtl.dll     dhcpcsvc.dll     dhcpcsvc6.DLL     dnsapi.dll     dwmapi.dll     glu32.dll     gpapi.dll     imm32.dll     linkinfo.dll     mscms.dll     mssprxy.dll     mswsock.dll     ncrypt.dll     netutils.dll     ntmarta.dll     ntshrui.dll     oleacc.dll     opengl32.dll     profapi.dll     propsys.dll     rasadhlp.dll     riched20.dll     rsaenh.dll     secur32.dll     shdocvw.dll     slc.dll     srvcli.dll     sxs.dll     t2embed.dll     userenv.dll     uxtheme.dll     version.dll     webio.dll     winhttp.dll     winmm.dll     winnsi.dll     wship6.dll     comctl32.dll     GdiPlus.dll </pre>