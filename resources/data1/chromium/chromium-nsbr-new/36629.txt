<title>Issue 36629 -   chromium -    TCPClientSocketPool should shorten timeout for connect retry logic - Project Hosting on Google Code</title> <pre> Windows has a 3s timeout when the SYN packet is lost.  This is very large    and other platforms (Mac and linux) already use a 1s timeout instead.    To workaround this problem  add logic to chrome such that:    * When connecting  also set a timer for 250ms.  * If the connect completes first  cancel the timer.  * If the timer completes before the connect  then issue a second connect   request.    I think fixing up the TCPClientSocketPool is the right approach for this.    Don't forget to avoid looping  - e.g. don't set another timer on the second   connect.    Optional:  start using our tracked client-side RTT for a dynamic setting of   the connect-retry-timeout.  Traditionally  TCP use a 4*RTT algorithm - the   only reason for this 3s timer is because TCP doesn't store RTTs across   connections (technically they could vary from connection to connection).    As a measurement for the RTT  we can use our historical connect times (we   already have a histogram of this).  Then set the retry timeout as:       connect-retry-timeout = min(250ms  4 * RTT)   </pre>