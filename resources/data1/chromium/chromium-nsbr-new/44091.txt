<title>Issue 44091 -   chromium -    Implement Lock::AssertAcquired() for Posix - Project Hosting on Google Code</title> <pre>   Is this the most recent version: Yes  OS + version:Mac OS X  Linux  CPU architecture (32-bit / 64-bit): All    [Issue based on code inspection and discussion with Jim Roskind. ]    From comment in src/base/lock_impl.h:        // Debug-only method that will DCHECK() if the lock is not acquired by the    // current thread.  In non-debug builds  no check is performed.    // Because linux and mac condition variables modify the underlyning lock    // through the os_lock() method  runtime assertions can not be done on those    // builds.  #if defined(NDEBUG) || !defined(OS_WIN)    void AssertAcquired() const {}  #else    void AssertAcquired() const;  #endif    I believe that AssertAcquired() can be implemented on posix by having a shadow variable for   the os_lock state in the Lock or LockImpl class which is modified both by Lock/Unlock in that   class  and by ConditionVariable::Wait TimedWait.  That shadow variable will accurately shadow   the state of the underlying lock  and can be used for asserting that the lock is held.     There are two alternative implementations: Leave the windows implementation alone and   implement this in LockImpl/ConditionVariable  or pull the Windows implementation of   AssertAcquired() up into lock and combine it with the Posix version (since the proposed   design doesn't have dependencies on the underlying CV implementation).  I'm going to try the   second option  but fall back to the first if it doesn't work properly.   </pre>