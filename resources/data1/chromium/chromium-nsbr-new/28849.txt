<title>Issue 28849 -   chromium -    Stop relying on spot checking to catch RecordAction misuses - Project Hosting on Google Code</title> <pre> We need to be able to extract all strings used as user metric names from   the source code.  Rather than have me hound everyone to make all code match   a regex  I just got a new idea.    1) Make a simple type:    class UserMetric {    explicit UserMetric(const char* str) : str_(str) {}    const char* str;  }    2) Make the RecordAction function only accept a UserMetric:  void UserMetrics::RecordAction(const UserMetric&amp;)    3) Now the compiler will require all callers to tag their user metric   strings explicitly:    UserMetrics::RecordAction(&quot;foo&quot;)  // won't compile    UserMetrics::RecordAction(UserMetric(&quot;bar&quot;))  // will compile  It is then easy to regex out all the UserMetric strings.      PS For extra credit  come up with a way to catch people doing    char* strs = { ... };    RecordAction(UserMetric(strs[i]))  which breaks us again.  One idea is to make a USER_METRIC macro that is   like #define USER_METRIC(x) UserMetric(x &quot;&quot;)  since the compiler can only paste the empty string if x is a quoted   literal.   </pre>