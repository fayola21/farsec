<title>Issue 31590 -   chromium -    Security: Inspector window attributes script injection - Project Hosting on Google Code</title> <pre> A webpage can overwrite attributes of its global &quot;window&quot; object  which are   used by the inspector. When a user tries to inspect the page  the page can   detect this and interact with the inspector in a way that it should not.   This might allow the webpage to run script inside the inspector and evade   same-origin protection  though I was not immediately able to see a working   attack vector.    <a href="http://svn.webkit.org/repository/webkit/trunk/WebCore/inspector/front-">http://svn.webkit.org/repository/webkit/trunk/WebCore/inspector/front-</a>  end/InjectedScript.js  The code uses &quot;InjectedScript._window()&quot; to access the global &quot;window&quot;   object of the page being inspected. It then continues to read/write/call   attributes of this object. The webpage can overwrite the attributes and use   __define[GS]etter__ to modify the behavior of these attributes and execute   script.    Simple PoC:  &lt;SCRIPT&gt;function eval(){alert(&quot;pwn&quot;);}&lt;/SCRIPT&gt;    I doubt we can fix this before we ship 4.0  but marking Mstone-4 just in   case somebody has a quick fix.    SecSeverity-Low: As-is  this is not much of a security issue  but I am   worried there is potential for XSS.   </pre>