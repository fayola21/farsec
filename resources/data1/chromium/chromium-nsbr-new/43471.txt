<title>Issue 43471 -   chromium -    Leak in MessageLoop::DestructionObserver - Project Hosting on Google Code</title> <pre> <a href="http://build.chromium.org/buildbot/memory/builders/Chromium%20OS%20UI%20(va">http://build.chromium.org/buildbot/memory/builders/Chromium%20OS%20UI%20(va</a>  lgrind)(1)/builds/2794/steps/valgrind%20test%3A%20unit/logs/stdio    Command: src/sconsbuild/Release/unit_tests --gtest_filter=-  VisitedLinkEventsTest.Coalescense:VisitedLinkRelayTest.Basics:RenderViewTes  t.ImeComposition:DnsMasterTest.MassiveConcurrentLookupTest:URLFetcherBadHTT  PSTest.BadHTTPSTest --gtest_print_time  8 bytes in 2 blocks are definitely lost in loss record 3 133 of 23 685    operator new(unsigned int) (mp/scripts/valgrind-  memcheck/coregrind/m_replacemalloc/vg_replace_malloc.c:269)      __gnu_cxx::new_allocator&lt;MessageLoop::DestructionObserver*&gt;::allocate(unsig  ned int  void const*) (sr/include/c++/4.2/ext/new_allocator.h:91)    std::_Vector_base&lt;MessageLoop::DestructionObserver*    std::allocator&lt;MessageLoop::DestructionObserver*&gt; &gt;::_M_allocate(unsigned   int) (sr/include/c++/4.2/bits/stl_vector.h:128)    std::vector&lt;MessageLoop::DestructionObserver*    std::allocator&lt;MessageLoop::DestructionObserver*&gt;   &gt;::_M_insert_aux(__gnu_cxx::__normal_iterator&lt;MessageLoop::DestructionObser  ver**  std::vector&lt;MessageLoop::DestructionObserver*    std::allocator&lt;MessageLoop::DestructionObserver*&gt; &gt; &gt;    MessageLoop::DestructionObserver* const&amp;)   (sr/include/c++/4.2/bits/vector.tcc:271)    std::vector&lt;MessageLoop::DestructionObserver*    std::allocator&lt;MessageLoop::DestructionObserver*&gt;   &gt;::push_back(MessageLoop::DestructionObserver* const&amp;)   (sr/include/c++/4.2/bits/stl_vector.h:605)      ObserverListBase&lt;MessageLoop::DestructionObserver&gt;::AddObserver(MessageLoop  ::DestructionObserver*) (./base/observer_list.h:117)    MessageLoop::AddDestructionObserver(MessageLoop::DestructionObserver*)   (base/message_loop.cc:144)    base::MessageLoopProxyImpl::MessageLoopProxyImpl()   (base/message_loop_proxy_impl.cc:11)    base::MessageLoopProxy::CreateForCurrentThread()   (base/message_loop_proxy_impl.cc:96)    base::Thread::ThreadMain() (base/thread.cc:147)    ThreadFunc(void*) (base/platform_thread_posix.cc:26)    start_thread (/lib/tls/i686/cmov/libpthread-2.7.so)  Suppression:  {     &lt;insert_a_suppression_name_here&gt;     Memcheck:Leak     fun:_Znw*       fun:_ZN9__gnu_cxx13new_allocatorIPN11MessageLoop19DestructionObserverEE8all  ocateEjPKv       fun:_ZNSt12_Vector_baseIPN11MessageLoop19DestructionObserverESaIS2_EE11_M_a  llocateEj       fun:_ZNSt6vectorIPN11MessageLoop19DestructionObserverESaIS2_EE13_M_insert_a  uxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_       fun:_ZNSt6vectorIPN11MessageLoop19DestructionObserverESaIS2_EE9push_backERK  S2_       fun:_ZN16ObserverListBaseIN11MessageLoop19DestructionObserverEE11AddObserve  rEPS1_     fun:_ZN11MessageLoop22AddDestructionObserverEPNS_19DestructionObserverE     fun:_ZN4base20MessageLoopProxyImplC1Ev     fun:_ZN4base16MessageLoopProxy22CreateForCurrentThreadEv     fun:_ZN4base6Thread10ThreadMainEv     fun:_Z10ThreadFuncPv     fun:start_thread     fun:clone  }   </pre>