<title>Issue 23778 -   chromium -    Chrome fails to collect defunct/zombie processes remaining from closed tabs/windows. - Project Hosting on Google Code</title>   1. Open many tabs/windows.  2. Close many tabs/windows.  3. Do a &quot;ps f -C chrome&quot;; note accumulation of may &quot;defunct&quot; processes.      Defunct processes should be collected  presumably by waitpid(2)  by the   parent whenever a window or tab is closed and a process exits.  This avoids   hitting the per-user-process limit or the system process limit.    Care should be taken to avoid calling waitpid() when there are no processes   to collect (which consumes CPU time wastefully).    This tends to be a &quot;showstopper&quot; bug as the only way around the problem is   to kill the chrome master process  force the exiting and collection of all   chrome sub-processes and restart the chrome session.  Restarting the large   sessions I tend to run (50-100 windows  500-800 tabs) can be exceedingly   time consuming (10-20 maxed CPU minutes and 5-15 minutes maxed DSL   bandwidth) and I will tend to avoid such &quot;opportunities&quot; if at all possible   (read &quot;stay with Firefox&quot; for now).      Defunct processes accumulate and eventually the user process limit (ulimit   -u) is reached causing fork()s to fail and make general system use   difficult to impossible.  It may cause chrome to fail in strange ways   (hanging on tab/window creations).     <b>Please provide