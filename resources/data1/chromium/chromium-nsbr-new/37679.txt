<title>Issue 37679 -   chromium -    Unreachable do-while loop test in SpdyNetworkTransactionTest.BufferedCancelled - Project Hosting on Google Code</title> <pre> In the SpdyNetworkTransactionTest.BufferedCancelled unit test  in spdy_network_transaction_unittest.cc  Coverity reports that  the do-while loop's test on line 1603 is unreachable because of  the FAIL macro on the previous line:    1589 	  do {  1590 	    const int kReadSize = 256;  1591 	    scoped_refptr&lt;net::IOBuffer&gt; buf = new net::IOBuffer(kReadSize);  1592 	    rv = trans-&gt;Read(buf  kReadSize  &amp;read_callback);  1593 	    if (rv == net::ERR_IO_PENDING) {  1594 	      // Complete the read now  which causes buffering to start.  1595 	      data-&gt;CompleteRead();  1596 	      // Destroy the transaction  causing the stream to get cancelled  1597 	      // and orphaning the buffered IO task.  1598 	      trans.reset();  1599 	      break;  1600 	    }  1601 	    // We shouldn't get here in this test.  1602 	    FAIL() &lt;&lt; &quot;Unexpected read: &quot; &lt;&lt; rv;  Event unreachable: This code cannot be reached: &quot;do {    int const kReadSize ...&quot;  1603 	  } while (rv &gt; 0);    Mike  how do you want to fix this?  Remove the do-while loop  (but keep's the loop's body) or ignore this Coverity defect?    (This do-while loop is apparently copied from other tests  in that file.)   </pre>