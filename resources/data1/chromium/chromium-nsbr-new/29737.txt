<title>Issue 29737 -   chromium -    Enable SVG filters - Project Hosting on Google Code</title> <pre> Forking bug off of <a href="http://crbug.com/29674">http://crbug.com/29674</a>.    From sgjesse on that bug:    It turns out that this change does not break any layout tests  and that the   &quot;hack&quot; fix does work. I just did a run of   layout tests on Linux of <a href="/p/chromium/source/detail?r=51801">r51801</a> (<a href="http://trac.webkit.org/changeset/51801">http://trac.webkit.org/changeset/51801</a>)   with the patches from <a href="/p/chromium/source/detail?r=51820">r51820</a> and <a href="/p/chromium/source/detail?r=51821">r51821</a>   (<a href="http://trac.webkit.org/changeset/51820">http://trac.webkit.org/changeset/51820</a> &amp;   <a href="http://trac.webkit.org/changeset/51821">http://trac.webkit.org/changeset/51821</a>)  and the result is exactly the   same   as for <a href="/p/chromium/source/detail?r=51800">r51800</a> (<a href="http://trac.webkit.org/changeset/51800">http://trac.webkit.org/changeset/51800</a>).    The V8 build was broken by <a href="/p/chromium/source/detail?r=51801">r51801</a>   (<a href="http://trac.webkit.org/changeset/51801">http://trac.webkit.org/changeset/51801</a>). The change <a href="/p/chromium/source/detail?r=51800">r51800</a>   (<a href="http://trac.webkit.org/changeset/51800">http://trac.webkit.org/changeset/51800</a>) just before enabled SVG filters   by default and changed test expectations for a   large number of SVG tests.    As far as I can see the &quot;hacked&quot; change does the right thing. The reason for   passing the ScriptState (ExecState) to the   getString of a ScriptValue is that JSC added what is called ropes in <a href="/p/chromium/source/detail?r=51671">r51671</a>   (<a href="https://bugs.webkit.org/show_bug.cgi?">https://bugs.webkit.org/show_bug.cgi?</a>  id=32136). Ropes are trees of concattenated strings (like ConsString in V8)   and they can cause allocation to happen   when accessing the string as it is generated in its flat form at that point.   The ScriptState (ExecState) passed is used   to signal an out of memory exception if that happens when trying to access   the string. For the V8 bindings we don't   need to pass an explicit environment in cases where an out of memory can   happen.    On the Windows webkit.org canary there are 22 failing tests after the   &quot;hack&quot; went in (<a href="/p/chromium/source/detail?r=51821">r51821</a>). Just before the change   which broke compilation of the V8 bindings there where 20 failing tests   (<a href="/p/chromium/source/detail?r=51800">r51800</a>). These 20 are included in the 22 so   two additional failures appeared while the build was broken.    The build just before the change which broke compilation is 17177   (<a href="http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20(web">http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20(web</a>  kit.org)/builds/17177)    webkit_tests  366 fixable  (72 skipped)  failed 20      big-sized-filter-2.svg  big-sized-filter.svg  feGaussianBlur.svg  feMerge.svg  feOffset.svg  filterRes.svg  shadow-on-filter.svg  subRegion-in-userSpace.svg  empty-merge.svg  feDisplacementMap-01.svg  js-svg-constructors.svg  svg-features.html  visibility-override-filter.svg  operatorAttribute.html  feDisplacementMap.svg  feMerge-wrong-input.svg  feTile.svg  shadow-on-rect-with-filter.svg  subRegion-one-effect.svg  subRegion-two-effects.svg      The build just after the &quot;hack&quot; is 17207   (<a href="http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20(web">http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20(web</a>  kit.org)/builds/17207)    webkit_tests  369 fixable  (72 skipped)  failed 22      * block-selection-gap-in-composited-layer.html  big-sized-filter-2.svg  big-sized-filter.svg  feGaussianBlur.svg  feMerge.svg  feOffset.svg  filterRes.svg  shadow-on-filter.svg  subRegion-in-userSpace.svg  * block-selection-gap-stale-cache.html  empty-merge.svg  feDisplacementMap-01.svg  js-svg-constructors.svg  svg-features.html  visibility-override-filter.svg  operatorAttribute.html  feDisplacementMap.svg  feMerge-wrong-input.svg  feTile.svg  shadow-on-rect-with-filter.svg  subRegion-one-effect.svg  subRegion-two-effects.svg      unexpected flaky 3      about-blank-iframe-in-main-frame.html  data-url-script-in-iframe.html  detaching-frame-2.html    On the Linux webkit.org canary these are the builds in question  <a href="http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Linux">http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Linux</a>  %20(webkit.org)/builds/12709  <a href="http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Linux">http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Linux</a>  %20(webkit.org)/builds/12742    A few changes later there was a huge jump in failures on Linux from 21 to   478.    <a href="http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Linux">http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Linux</a>  %20(webkit.org)/builds/12744  <a href="http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Linux">http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Linux</a>  %20(webkit.org)/builds/12745    which seemed to be related to changes in   WebKit/WebKit/chromium/src/WebViewImpl.*.  On the Mac build webkit.org canary it is  <a href="http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Mac%">http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Mac%</a>  20(webkit.org)/builds/11026  <a href="http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Mac%">http://build.chromium.org/buildbot/waterfall.fyi/builders/Webkit%20Mac%</a>  20(webkit.org)/builds/11056    On the Mac builder <a href="/p/chromium/source/detail?r=51800">r51800</a> did not get its own build but was combined   with <a href="/p/chromium/source/detail?r=51801">r51801</a>. </pre>