<title>Issue 44189 -   chromium -    Mac OOM killer should kill posix_memalign on 10.6 - Project Hosting on Google Code</title> <pre> I wrote code for this before realizing that posix_memalign and the  underlying malloc support was introduced in 10.6. The fix for this will  need to be a little bit ugly.    We necessarily avoid calling posix_memalign on the Mac because it��_��_��_s not  available on 10.5  but a system library or plugin or something might call it.    I also looked at protecting batch_malloc but decided not to. This was to be  the comment explaining why not.    // batch_malloc is omitted because the default malloc zone's implementation  // only supports batch_malloc for &quot;tiny&quot; allocations from the free list. It  // will fail for allocations larger than &quot;tiny&quot;  and will only allocate as   // many blocks as it's able to from the free list. These factors mean that  // it can return less than the requested memory even in a non-out-of-memory  // situation. There's no good way to detect whether a batch_malloc failure  // is due to these other factors  or due to genuine memory or address space  // exhaustion. The fact that it only allocates space from the &quot;tiny&quot; free  // list means that it's likely that a failure will not be due to memory  // exhaustion. Similarly  these constraints on batch_malloc mean that callers  // must always be expecting to receive less memory than was requested  even  // in situations where memory pressure is not a concern. Finally  the only  // public interface to batch_malloc is malloc_zone_batch_malloc  which is  // specific to the system's malloc implementation. It's unlikely that anyone's  // even heard of it. </pre>