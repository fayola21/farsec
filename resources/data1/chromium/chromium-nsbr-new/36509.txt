<title>Issue 36509 -   chromium -    Crash on exit because of infinite recursion... - Project Hosting on Google Code</title> <pre> ChromeFrame version: &lt;from cf:about:version&gt;  Tip of tree of rev39595...    Related URL(s): Irrelevant.      1. Quickly create multiple IE tab with a Chrome Frame in each of them.  2. You eventually get a DCHECK in the Histogram code.  3. And a Crash on Exit...      Nothing :-)      DCHECK and Crash...      This is the same scenario as Issue 36500  but I was asked to split it in   two bugs.  <a href="http://code.google.com/p/chromium/issues/detail?id=36500">http://code.google.com/p/chromium/issues/detail?id=36500</a>      Here is the stack of the crashing thread:  --------------------------------------------  004e3070 77aff945 ntdll!_SEH_prolog4+0x2b  004e30dc 5807481e ntdll!RtlAllocateHeap+0x17c  004e30f8 58054716 npchrome_frame!_heap_alloc_base+0x5e   [f:ddvctoolscrt_bldself_x86crtsrcmalloc.c @ 105]  004e3140 580544af npchrome_frame!_heap_alloc_dbg_impl+0x1f6   [f:ddvctoolscrt_bldself_x86crtsrcdbgheap.c @ 427]  004e3160 5805445c npchrome_frame!_nh_malloc_dbg_impl+0x1f   [f:ddvctoolscrt_bldself_x86crtsrcdbgheap.c @ 239]  004e3188 580541db npchrome_frame!_nh_malloc_dbg+0x2c   [f:ddvctoolscrt_bldself_x86crtsrcdbgheap.c @ 296]  004e31a8 580511f1 npchrome_frame!malloc+0x1b   [f:ddvctoolscrt_bldself_x86crtsrcdbgmalloc.c @ 56]  004e31c4 57cd9a82 npchrome_frame!operator new+0x11   [f:ddvctoolscrt_bldself_x86crtsrcnew.cpp @ 59]  004e31d8 57cd90a9 npchrome_frame!std::_Allocate&lt;char&gt;+0x52 [c:program   files (x86)microsoft visual studio 9.0vcincludexmemory @ 43]  004e31ec 57d189f7 npchrome_frame!std::allocator&lt;char&gt;::allocate+0x19   [c:program files (x86)microsoft visual studio 9.0vcincludexmemory @   145]  004e3224 57cd958b   npchrome_frame!std::basic_stringbuf&lt;char std::char_traits&lt;char&gt; std::alloca  tor&lt;char&gt; &gt;::overflow+0x1a7 [c:program files   (x86)microsoft visual studio 9.0vcincludesstream @ 117]  004e3240 57d28c71   npchrome_frame!std::basic_streambuf&lt;char std::char_traits&lt;char&gt;   &gt;::sputc+0x6b [c:program files (x86)microsoft visual studio   9.0vcincludestreambuf @ 163]  004e3288 57d2767f npchrome_frame!std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;   &gt;+0x121 [c:program files (x86)microsoft visual studio   9.0vcincludeostream   @ 807]  004e3328 57d27613 npchrome_frame!logging::LogMessage::Init+0x4f   [d:srcbaselogging.cc @ 423]  004e333c 57d330e3 npchrome_frame!logging::LogMessage::LogMessage+0x43   [d:srcbaselogging.cc @ 412]  004e3494 57d29a78 npchrome_frame!base::AtExitManager::RegisterCallback+0x53   [d:srcbaseat_exit.cc @ 40]  004e34ac 57d2966b   npchrome_frame!Singleton&lt;logging::LogEventProvider `anonymous   namespace'::LogEventProviderTraits logging::LogEventProvider&gt;::get+0x78   [d:srcbasesingleton.h @ 143]  004e3610 57d279d5 npchrome_frame!logging::LogEventProvider::LogMessage+0x5b   [d:srcbaselogging_win.cc @ 78]  004e37f0 57d33130 npchrome_frame!logging::LogMessage::~LogMessage+0x75   [d:srcbaselogging.cc @ 467]  004e3934 57d29a78 npchrome_frame!base::AtExitManager::RegisterCallback+0xa0   [d:srcbaseat_exit.cc @ 41]    [...]  Goes on and on and on and on recursively... up to...  [...]    005dec54 57d29a78 npchrome_frame!base::AtExitManager::RegisterCallback+0xa0   [d:srcbaseat_exit.cc @ 41]  005dec6c 57d2966b   npchrome_frame!Singleton&lt;logging::LogEventProvider `anonymous   namespace'::LogEventProviderTraits logging::LogEventProvider&gt;::get+0x78   [d:srcbasesingleton.h @ 143]  005dedd0 57d279d5 npchrome_frame!logging::LogEventProvider::LogMessage+0x5b   [d:srcbaselogging_win.cc @ 78]  005defb0 57d33130 npchrome_frame!logging::LogMessage::~LogMessage+0x75   [d:srcbaselogging.cc @ 467]  005df0f4 57d29a78 npchrome_frame!base::AtExitManager::RegisterCallback+0xa0   [d:srcbaseat_exit.cc @ 41]  005df10c 57d2966b   npchrome_frame!Singleton&lt;logging::LogEventProvider `anonymous   namespace'::LogEventProviderTraits logging::LogEventProvider&gt;::get+0x78   [d:srcbasesingleton.h @ 143]  005df270 57d279d5 npchrome_frame!logging::LogEventProvider::LogMessage+0x5b   [d:srcbaselogging_win.cc @ 78]  005df450 57d33130 npchrome_frame!logging::LogMessage::~LogMessage+0x75   [d:srcbaselogging.cc @ 467]  005df594 57d29a78 npchrome_frame!base::AtExitManager::RegisterCallback+0xa0   [d:srcbaseat_exit.cc @ 41]  005df5ac 57d2966b   npchrome_frame!Singleton&lt;logging::LogEventProvider `anonymous   namespace'::LogEventProviderTraits logging::LogEventProvider&gt;::get+0x78   [d:srcbasesingleton.h @ 143]  005df710 57d279d5 npchrome_frame!logging::LogEventProvider::LogMessage+0x5b   [d:srcbaselogging_win.cc @ 78]  005df8f0 57d4f6b5 npchrome_frame!logging::LogMessage::~LogMessage+0x75   [d:srcbaselogging.cc @ 467]  005dfa24 57d99f7f   npchrome_frame!base::subtle::RefCountedThreadSafeBase::Release+0x95   [d:srcbaseref_counted.cc @ 77]  005dfa34 57d99f43   npchrome_frame!base::RefCountedThreadSafe&lt;Histogram base::DefaultRefCounted  ThreadSafeTraits&lt;Histogram&gt; &gt;::Release+0x1f   [d:srcbaseref_counted.h @ 139]  005dfa40 5828454d   npchrome_frame!scoped_refptr&lt;Histogram&gt;::~scoped_refptr&lt;Histogram&gt;+0x23   [d:srcbaseref_counted.h @ 239]  005dfa48 5806a93a   npchrome_frame!`ChromeFrameActivexBase&lt;ChromeFrameActivex CLSID_ChromeFrame  &gt;::FinalConstruct'::`9'::`dynamic atexit destructor for   'counter''+0xd  005dfa94 5806a670 npchrome_frame!doexit+0x10a   [f:ddvctoolscrt_bldself_x86crtsrccrt0dat.c @ 591]  005dfaa8 5805954c npchrome_frame!_cexit+0x10   [f:ddvctoolscrt_bldself_x86crtsrccrt0dat.c @ 427]  005dfab4 5805978d npchrome_frame!_CRT_INIT+0xec   [f:ddvctoolscrt_bldself_x86crtsrcdllcrt0.c @ 168]  005dfb00 58059651 npchrome_frame!__DllMainCRTStartup+0x12d   [f:ddvctoolscrt_bldself_x86crtsrcdllcrt0.c @ 340]  005dfb14 77affcc0 npchrome_frame!_DllMainCRTStartup+0x21   [f:ddvctoolscrt_bldself_x86crtsrcdllcrt0.c @ 281]  005dfb34 77b19e5b ntdll!LdrpCallInitRoutine+0x14  005dfbd4 77b19e7f ntdll!LdrShutdownProcess+0x1a9  005dfbdc 75e187e3 ntdll!RtlExitUserProcess+0x64  005dfbf0 76452072 kernel32!ExitProcess+0x12  005dfbfc 76451fb3 msvcrt!__crtExitProcess+0x17  005dfc34 76452051 msvcrt!_cinit+0xea  005dfc48 002b1492 msvcrt!exit+0x11  005dfcd0 75e8e4a5 iexplore!_initterm_e+0x1c6  005dfcdc 77b4cfed kernel32!BaseThreadInitThunk+0xe  005dfd1c 77b4d1ff ntdll!__RtlUserThreadStart+0x23  005dfd34 00000000 ntdll!_RtlUserThreadStart+0x1b   </pre>