<title>Issue 44219 -   chromium -    Chrome crashes due to failed check when you close and restart after enabling sync -- base/message_loop.h@500  - Project Hosting on Google Code</title> <pre>   1. Build chromium and cosmo server on linux  2. Bring up a server instance on your linux machine   3. Delete your user data directory (~/.config/chromium/)  4. Bring up a browser instance and point it at the local server using the  &quot;--sync-url&quot; flag  5. Enable sync on the browser using a test account  6. After a few seconds  close and reopen the browser    What do you see?    Browser crashes immediately on restart. 100% repro with tip-of-tree builds  as of 5/14.    Stack trace:    [15954:15984:2499777270407:FATAL:./base/message_loop.h(500)] Check failed:  MessageLoop::TYPE_IO == loop-&gt;type() (2 vs. 0)  Backtrace:          StackTrace::StackTrace() [0x16b0475]          logging::LogMessage::~LogMessage() [0x16c3e15]          MessageLoopForIO::current() [0x100386e]          (anonymous namespace)::OCSPInitSingleton::OCSPInitSingleton()  [0x1a6a98d]          DefaultSingletonTraits&lt;&gt;::New() [0x1a6ac8e]          Singleton&lt;&gt;::get() [0x1a6ad05]          net::EnsureOCSPInit() [0x1a6ad97]          net::SSLClientSocketNSS::Init() [0x1a88441]          net::SSLClientSocketNSS::Connect() [0x1a8883f]          notifier::SSLSocketAdapter::BeginSSL() [0x2020c99]          notifier::SSLSocketAdapter::StartSSL() [0x2020eef]          notifier::XmppSocketAdapter::StartTls() [0x2016c2f]          buzz::XmppClient::Private::StartTls() [0x2ca1ede]          buzz::XmppEngineImpl::StartTls() [0x2cab931]          buzz::XmppLoginTask::Advance() [0x2cb12b0]          buzz::XmppLoginTask::IncomingStanza() [0x2cb1df5]          buzz::XmppEngineImpl::IncomingStanza() [0x2cac534]          buzz::XmppEngineImpl::StanzaParseHandler::Stanza() [0x2cae469]          buzz::XmppStanzaParser::IncomingEndElement() [0x2cb2087]          buzz::XmppStanzaParser::ParseHandler::EndElement() [0x2cb2319]          buzz::XmlParser::ExpatEndElement() [0x1ff5a73]          buzz::EndElementCallback() [0x1ff5a99]          0x7f95ac8e8f84          0x7f95ac8e9ed4          0x7f95ac8e3001          buzz::XmlParser::Parse() [0x1ff5c89]          buzz::XmppStanzaParser::Parse() [0x2caeb6a]          buzz::XmppEngineImpl::HandleInput() [0x2caca3c]          buzz::XmppClient::Private::OnSocketRead() [0x2ca2044]          sigslot::_connection0&lt;&gt;::emit() [0x2ca39d2]          sigslot::signal0&lt;&gt;::operator()() [0x200cf99]          notifier::XmppSocketAdapter::HandleReadable() [0x2016ca0]          notifier::XmppSocketAdapter::OnReadEvent() [0x2016cc5]          sigslot::_connection1&lt;&gt;::emit() [0x201881a]          sigslot::signal1&lt;&gt;::operator()() [0x2021639]          talk_base::AsyncSocketAdapter::OnReadEvent() [0x20216a3]          notifier::SSLSocketAdapter::OnReadEvent() [0x20200b0]          sigslot::_connection1&lt;&gt;::emit() [0x2021fdc]          sigslot::signal1&lt;&gt;::operator()() [0x2021639]          talk_base::SocketDispatcher::OnEvent() [0x2c86d60]          talk_base::PhysicalSocketServer::Wait() [0x2c860d4]          talk_base::MessageQueue::Get() [0x2c80045]          talk_base::Thread::ProcessMessages() [0x2c9cfc8]          notifier::MediatorThreadImpl::ProcessMessages() [0x1fff3b9]          notifier::MediatorThreadImpl::Run() [0x1fff953]          talk_base::Thread::PreRun() [0x2c9d884]          start_thread [0x7f95ad8503f7]          0x7f95ab570b4d </pre>