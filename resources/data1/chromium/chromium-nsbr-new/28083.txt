<title>Issue 28083 -   chromium -    Implicit T* -&gt; scoped_refptr&lt;T&gt; conversion + PostTask() = nasty nasty bugses - Project Hosting on Google Code</title> <pre>   1. Declare a function that takes a parameter of type scoped_refptr&lt;T&gt;  2. Do a PostTask() on that function passing in a raw T*  3. Expect the object will be held alive until the task executes    What is the expected output?  The object's refcount stays above 0 until the task runs    What do you see instead?  The refcount can drop to zero since the Tuple contains a T* and not a scoped_refptr&lt;T&gt;!  See   <a href="http://codereview.chromium.org/404012">http://codereview.chromium.org/404012</a> for an example.    The basic issue is that since there is an implicit constructor on scoped_refptr&lt;T&gt; from a T*  the   template parameter check in NewRunnable*() matches  but the conversion to a scoped_refptr&lt;T&gt; does   not happen until the task actually runs.    I think the fix is to mark the T* constructor explicit.  This cause a lot of compilation errors.    We could add a make_scoped_refptr&lt;T&gt; utility function to cut down on the repetitive template   typing when the scoped_refptr&lt;T&gt; is a function parameter. </pre>