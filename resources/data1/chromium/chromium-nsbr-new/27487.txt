<title>Issue 27487 -   chromium -    XMLHTTPRequest doesn't handle 401 responses correctly - Project Hosting on Google Code</title> <pre> Chrome Version       : 4.0.237.0  URLs (if applicable) : <a href="https://mail.google.com/mail/feed/atom">https://mail.google.com/mail/feed/atom</a>  Other browsers tested: Untested  as it is only usable from a Chrome   extension (otherwise you can't go cross-domain).    Not sure if this should go to Webkit team or V8 team  but there's other   bugs open on XMLHTTPRequest here so here it goes.  I'll refile it elsewhere   if needed.      1. The sample &quot;Google Mail Checker&quot; extension actually spits out enough   debug info for us to see this bug in action.  Install from here:   <a href="http://dev.chromium.org/developers/design-documents/extensions/samples">http://dev.chromium.org/developers/design-documents/extensions/samples</a>  2. Log out of GMail if you are logged in.  3. Open the Extensions page  expand Developer mods  and inspect Google Mail   Checker's background.html.  Open the console and watch the output.  The   timeout is 2 seconds  and you will notice that when the request is made    nothing happens until two seconds later when the timeout fires.    request..  readystate: 1  // Two seconds elapse.  readystate: 4  responseText: ... // Empty  No responseXML!  // Loops endlessly like this until you log in    4. Navigate to <a href="https://mail.google.com/mail/feed/atom">https://mail.google.com/mail/feed/atom</a>  the URL that is   being XMLHTTPRequested  and note that it returns a 401 and Chrome pops up   the authentication dialog.  Enter your Google account info  and watch as   Google Mail Checker happily lights up again since it will no longer be   getting a 401 reply.    I think the team that made the extension probably didn't notice this since   it doesn't differentiate being logged out and an error condition (the   browser action displays the same UI).        XMLHTTPRequest should fire onreadystatechange with readystate = 2 and   status = 401 to indicate that the server returned a 401 code.  The code   that sees this could then prompt the user for credentials and make a new   XMLHTTPRequest using them  or whatever.  I personally will be happy if I   can just detect it.        From my tests  XMLHTTPRequest seems to stop firing onreadystate change   after readystate = 1 (indicating .open was called).  It will then fire no   further events until .abort is called  then onreadystate is called one last   time with readystate = 4 and status = 0.  To the code it appears as if the   connection has timed out  instead of a 401 being returned by the server. </pre>