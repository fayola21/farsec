<title>Issue 44226 -   chromium -    webgl does not work on Fedora - Project Hosting on Google Code</title> <pre> Chrome Version       : 6.0.401.1    I've been trying to test out webgl  but I can't seem to make it work on  Fedora at all. My test page has been  <a href="http://www.nitobi.com/yohei/cube_defense_alpha/">http://www.nitobi.com/yohei/cube_defense_alpha/</a>   but I've also tried  pretty much everything on the first page of google hits for &quot;webgl test&quot;.    Please note: I have tried this on clean installs (fully updated) of:    Fedora 12 (i386)  Fedora 13 (i386 and x86_64). The bug appears to be  exactly the same. When I attempt to load a webgl page  the page pops up a  error notice that says:    &quot;No WebGL Context found&quot;    I get this error with --enable-gl  but on the advice of kbr (on #chromium)   I tried launching chromium-browser with --enable-webgl --in-process-webgl  to get additional debugging.    When I launch chromium-browser with --enable-webgl --in-process-webgl  I  see this on the console:    GraphicsContext3D: error opening libGL.so.1: libGL.so.1: cannot open shared  object file: Permission denied    I've done builds as both shared and static  it does not seem to affect thus  bug in any way.    On Fedora 12  mesa-libGL-7.7-4.fc12 is installed.  On Fedora 13  mesa-libGL-7.8.1-6.fc13 is installed.    None of the systems contain any binary-only crap (e.g. nvidia). There are  no selinux denials or alerts triggered.    To confirm that dlopening libGL.so.1 works on Fedora  I wrote a very very  trivial test program which mirrors what chromium appears to be doing in   third_party/WebKit/WebKit/chromium/src/WebGraphicsContext3DDefaultImpl.cpp   which is where that error message is coming from.    This test program is attached as dlopen-libGL-test.cpp.    When run on Fedora (12 &amp; 13)  this is the output:    [spot@pterodactyl ~]$ g++ -o dlopen-libGL-test dlopen-libGL-test.cpp -ldl  [spot@pterodactyl ~]$ ./dlopen-libGL-test   Was able to dlopen libGL.so.1    (This is the expected output.)    Now  grepping through the source code  I count five places where it appears  to dlopen libGL.so.1:    * app/gfx/gl/gl_context_linux.cc  * chrome/gpu/gpu_main.cc  * media/tools/player_x11/gl_video_renderer.cc  * third_party/mesa/MesaLib/src/glx/x11/dri_common.c  * third_party/WebKit/WebKit/chromium/src/WebGraphicsContext3DDefaultImpl.cpp    The code in app/gfx/gl/gl_context_linux.cc doesn't seem to ever bother  running dlclose()  but I concede that it could be buried somewhere else.    The code in chrome/gpu/gpu_main.cc doesn't check for success there (which  it should  and output dlerror() if it fails). Also  I don't see a dlclose()  here.    The code in media/tools/player_x11/gl_video_renderer.cc checks for success   but doesn't output dlerror() on failure  instead  it does:        LOG(ERROR) &lt;&lt; &quot;Could not find libGL.so.1&quot;;    And again  no dlclose() here.    The code in third_party/mesa/MesaLib/src/glx/x11/dri_common.c does proper  error checking  with debugging that includes dlerror()  and a dlclose()   but as I don't see that error  I can only assume that this code path is  either not being triggered or that it is properly dlopening libGL.so.1 here.    And lastly  the code which causes the error message   third_party/WebKit/WebKit/chromium/src/WebGraphicsContext3DDefaultImpl.cpp  has proper error checking  with debugging that includes dlerror()  and a  dlclose (but only if the dlsym() calls fail).    I cede that dlclose() doesn't seem to be necessary for a successful  dlopen()  or even for repetitive dlopen() calls. I'm not sure why chromium  needs to dlopen(libGL.so.1) five times  but I also admit to not being an  expert on dynamic loading.   </pre>