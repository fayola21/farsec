<title>Issue 41314 -   chromium -    ThreadSanitizer reports on accesses to environ - Project Hosting on Google Code</title> <pre> We've (me and Evgeny Stepanov  eugenis@) tried running Chrome under TSan  ./tools/valgrind/valgrind.sh --tool=tsan ./out/Debug/chrome    We have seen the following report:  WARNING: Possible data race during write of size 8 at 0x338D9E0: {{{     T4 (Chrome_ProcessLauncherThread) (locks held: {}):      #0  base::LaunchApp(...) base/process_util_posix.cc:531      #1  ChildProcessLauncher::Context::LaunchInternal(...) chrome/browser/child_process_launcher.cc:205      #2  void DispatchToMethod&lt;...&gt;(...) ./base/tuple.h:441      #3  RunnableMethod&lt;...&gt;::Run() ./base/task.h:296      #4  MessageLoop::RunTask(Task*) base/message_loop.cc:331      #5  MessageLoop::DeferOrRunPendingTask(MessageLoop::PendingTask const&amp;) base/message_loop.cc:339      #6  MessageLoop::DoWork() base/message_loop.cc:458      #7  base::MessagePumpDefault::Run(base::MessagePump::Delegate*) base/message_pump_default.cc:23      #8  MessageLoop::RunInternal() base/message_loop.cc:205      #9  MessageLoop::RunHandler() base/message_loop.cc:177      #10 MessageLoop::Run() base/message_loop.cc:155      #11 base::Thread::Run(MessageLoop*) base/thread.cc:134    Concurrent read(s) happened at (OR AFTER) these points:     T3 (Chrome_FileThread) (locks held: {}):      #0  getenv /lib/libc-2.7.so      #1  ???//var/lib/flashplugin-installer/npwrapper.libflashplayer.so /var/lib/flashplugin-installer/npwrapper.libflashplayer.so      #2  ???//var/lib/flashplugin-installer/npwrapper.libflashplayer.so /var/lib/flashplugin-installer/npwrapper.libflashplayer.so      #3  NP_GetMIMEDescription /var/lib/flashplugin-installer/npwrapper.libflashplayer.so      #4  NPAPI::PluginLib::ReadWebPluginInfo(FilePath const&amp;  WebPluginInfo*) webkit/glue/plugins/plugin_lib_posix.cc:146      #5  NPAPI::PluginList::ReadPluginInfo(...) webkit/glue/plugins/plugin_list.cc:91      #6  NPAPI::PluginList::LoadPlugin(...) webkit/glue/plugins/plugin_list.cc:248      #7  NPAPI::PluginList::LoadPluginsFromDir(...) webkit/glue/plugins/plugin_list_posix.cc:179      #8  NPAPI::PluginList::LoadPlugins(bool) webkit/glue/plugins/plugin_list.cc:213      #9  NPAPI::PluginList::GetEnabledPlugins(...) webkit/glue/plugins/plugin_list.cc:377    Address 0x338D9E0 is 0 bytes inside data symbol &quot;environ@@GLIBC_2.2.5&quot;  }}}  INFO: T3 has been created by T0 at this point: {{{      #0  ???//lib/libpthread-2.7.so /lib/libpthread-2.7.so      #1  pthread_create@@GLIBC_2.2.5 /lib/libpthread-2.7.so      #2  pthread_create@* /tmp/vg_bins/scripts/tsan/tsan/ts_valgrind_intercepts.c:623      #3  (anonymous namespace)::CreateThread(...) base/platform_thread_posix.cc:96      #4  PlatformThread::Create(unsigned long  PlatformThread::Delegate*  unsigned long*) base/platform_thread_posix.cc:108      #5  base::Thread::StartWithOptions(base::Thread::Options const&amp;) base/thread.cc:87      #6  BrowserProcessImpl::CreateFileThread() chrome/browser/browser_process_impl.cc:341      #7  BrowserProcessImpl::file_thread() ./chrome/browser/browser_process_impl.h:61      #8  (anonymous namespace)::CreateChildThreads(BrowserProcessImpl*) chrome/browser/browser_main.cc:379      #9  BrowserMain(MainFunctionParams const&amp;) chrome/browser/browser_main.cc:879      #10 ChromeMain chrome/app/chrome_dll_main.cc:814      #11 main chrome/app/chrome_exe_main_gtk.cc:47  }}}  INFO: T4 has been created by T0 at this point: {{{      #0  ???//lib/libpthread-2.7.so /lib/libpthread-2.7.so      #1  pthread_create@@GLIBC_2.2.5 /lib/libpthread-2.7.so      #2  pthread_create@* /tmp/vg_bins/scripts/tsan/tsan/ts_valgrind_intercepts.c:623      #3  (anonymous namespace)::CreateThread(...*) base/platform_thread_posix.cc:96      #4  PlatformThread::Create(unsigned long  PlatformThread::Delegate*  unsigned long*) base/platform_thread_posix.cc:108      #5  base::Thread::StartWithOptions(base::Thread::Options const&amp;) base/thread.cc:87      #6  base::Thread::Start() base/thread.cc:76      #7  BrowserProcessImpl::CreateProcessLauncherThread() chrome/browser/browser_process_impl.cc:369      #8  BrowserProcessImpl::process_launcher_thread() ./chrome/browser/browser_process_impl.h:75      #9  (anonymous namespace)::CreateChildThreads(BrowserProcessImpl*) chrome/browser/browser_main.cc:380      #10 BrowserMain(MainFunctionParams const&amp;) chrome/browser/browser_main.cc:879      #11 ChromeMain chrome/app/chrome_dll_main.cc:814  }}}      ================  One thread (ProcessLauncherThread) re-writes environ.  Another thread (FileThread) enumerates NSAPI plugins and one of them calls getenv.    Does this data race look harmful for you?  Do we delete/free the temporary environment? Is it possible to read/write wrong values?    I was able to prove that NP_GetMIMEDescription and LaunchApp can be called at the same time using RaceChecker class (see <a href="http://code.google.com/p/data-">http://code.google.com/p/data-</a>  race-test/wiki/RaceCheckerClass ) </pre>