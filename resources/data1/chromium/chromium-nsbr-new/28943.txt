<title>Issue 28943 -   chromium -    Don't wait for AAAA queries when machine has no IPv6 connectivity - Project Hosting on Google Code</title> <pre> I was troubleshooting a problem with kcj1993 on #chromium and #ipv6  where   all pages were delayed by a few seconds  unless the --disable-ipv6 flag was   used.    OS: Ubuntu 9.10  Modem/Router: D-link DSL-604+    As you can see  he has only link-local IPv6 connectivity:    $ ip -6 addr  1: lo: &lt;LOOPBACK UP LOWER_UP&gt; mtu 16436       inet6 ::1/128 scope host          valid_lft forever preferred_lft forever  4: wlan0: &lt;BROADCAST MULTICAST UP LOWER_UP&gt; mtu 1500 qlen 1000      inet6 fe80::214:a5ff:fe1c:393/64 scope link          valid_lft forever preferred_lft forever  $ ip -6 route  fe80::/64 dev wlan0  proto kernel  metric 256  mtu 1500 advmss 1440   hoplimit 0      But getaddrinfo() with AI_ADDRCONFIG still asks for AAAA records:    $ python  &gt;&gt;&gt; import socket  &gt;&gt;&gt; socket.getaddrinfo(&quot;www.python.org&quot;  80  0  0  0  socket.AI_ADDRCONFIG)  [(2  1  6  ''  ('82.94.164.162'  80))  (2  2  17  ''  ('82.94.164.162'    80))  (2  3  0  ''  ('82.94.164.162'  80))  (10  1  6  ''    ('2001:888:2000:d::a2'  80  0  0))  (10  2  17  ''  ('2001:888:2000:d::a2'    80  0  0))  (10  3  0  ''  ('2001:888:2000:d::a2'  80  0  0))]      His computer has 2 DNS resolvers:  $ cat /etc/resolv.conf  # Generated by NetworkManager  nameserver 192.168.0.1  nameserver 58.28.6.2    His ISP's DNS resolver works fine for A/AAAA  and the router's DNS proxy   works fine for A  but blackholes all AAAA queries:  $ time dig @192.168.0.1 AAAA www.kernel.org    ; &lt;&lt;&gt;&gt; DiG 9.6.1-P1 &lt;&lt;&gt;&gt; @192.168.0.1 AAAA www.kernel.org  ; (1 server found)  ;; global options: +cmd  ;; connection timed out; no servers could be reached    real	0m15.046s      So  the router is behaving badly  but the end result is that Chromium (and   other browsers) act *really* slow  and people (semi-rightfully) lay the   blame on IPv6.    These routers really exist in the wild  and asking people to disable IPv6   is a bad practice  so I think the browser should somehow continue to work   correctly in this scenario.    One possibility would be to never send (or wait for) AAAA queries when the   machine has only link-local IPv6 connectivity.  I thought that was the   purpose of AI_ADDRCONFIG  but clearly that's not working  at least on   Ubuntu 9.10.   </pre>