<title>Issue 43467 -   chromium -    libjingle's QName static constants free memory at shutdown - Project Hosting on Google Code</title> <pre> Note: This is an issue that seems to be showing up in the crash reports  but the sync integration tests give a semi-reliable repro (with p=.10-.20  maybe).      1. On Windows  build and run the sync_integration_tests.  Specify --sync-user-for-test=X and --sync-password-for-test=Y with a valid (test user) Google account.      Some of the tests may fail with a stack trace involving the ~QName dtor:    Backtrace:          TCMalloc_PageMap1_LazyCommit&lt;20&gt;::get [0x00CBE9C4+36] (d:srccrgitsrcthird_partytcmallocchromiumsrcpagemap.h:292)          tcmalloc::PageHeap::GetDescriptor [0x00CBC87A+26] (d:srccrgitsrcthird_partytcmallocchromiumsrcpage_heap.h:134)          `anonymous namespace'::do_free_with_callback [0x00CBD23F+143] (d:srccrgitsrcthird_partytcmallocchromiumsrctcmalloc.cc:991)          `anonymous namespace'::do_free [0x00CBD1A1+17] (d:srccrgitsrcthird_partytcmallocchromiumsrctcmalloc.cc:1032)          free [0x00CBE33C+76] (d:srccrgitsrcbaseallocatorallocator_shim.cc:139)          operator delete [0x00CBE6CC+12] (d:srccrgitsrcbaseallocatorgeneric_allocators.cc:32)          buzz::QName::Data::`scalar deleting destructor' [0x01C9AD37+39]          buzz::QName::Data::Release [0x01C9ACEE+78] (d:srccrgitsrcthird_partylibjinglefilestalkxmlliteqname.h:73)          buzz::QName::~QName [0x01C9AC88+24] (d:srccrgitsrcthird_partylibjinglefilestalkxmlliteqname.cc:98)          buzz::`dynamic atexit destructor for 'QN_IQ'' [0x03F25A0D+13]          doexit [0x009E31FF+148] (f:ddvctoolscrt_bldself_x86crtsrccrt0dat.c:591)          exit [0x009E32A8+17] (f:ddvctoolscrt_bldself_x86crtsrccrt0dat.c:412)          __tmainCRTStartup [0x009E0DB9+269] (f:ddvctoolscrt_bldself_x86crtsrccrt0.c:272)          BaseThreadInitThunk [0x766DECCB+14]          RtlCreateUserProcess [0x7709D24D+140]          RtlCreateProcessParameters [0x7709D45F+78]    Libjingle defines a large number of globals with the type QName; each owns a heap allocation  and it seems that sometimes the deallocation fails during the at-exit destructor.     </pre>