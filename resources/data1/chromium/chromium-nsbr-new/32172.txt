<title>Issue 32172 -   chromium -    Extension crash: ports on Options pages do not call disconnect() on page unload - Project Hosting on Google Code</title> <pre> Chrome Version       : 4.0.288.1 (Official Build 35555) dev  URLs (if applicable) : An extension Options page      1. Install the attached extension  2. Visit the extension's Options page  3. Close the Options page  4. Visit the extension's Options page        You see a (boring blank) Options page.        The extension crashes and is removed from Google Chrome.        The extension's background.html puts connected ports into an array  and   removes them upon disconnect.  When the background receives a   chrome.extension.onRequest event  it posts a message to all ports in the   array.    var ports = [];  chrome.extension.onConnect.addListener(function(port) {    port.onDisconnect.addListener(function(theport) {      ports.splice(ports.indexOf(theport)  1); // Remove from list    });    ports.push(port);  });    chrome.extension.onRequest.addListener(    function(request  sender  sendResponse) {      for (var i = 0; i &lt; ports.length; i++) {        ports[i].postMessage({});      }      sendResponse({});    }  );      The options page connects a port  and then calls extension.sendRequest:    var port = chrome.extension.connect({name: &quot;test&quot;});  port.onMessage.addListener(function(request) {    var x = typeof window.name; // Crashes  though drop &quot;.name&quot; and it's OK  });    chrome.extension.sendRequest({}  function() {});        The crash is because the Options page's port does not fire onDisconnect   upon close of the page.  I believe the window.unload event is not being   fired  which could be the culprit.  As a result  upon the second open of   the Options page  the sendRequest that is generated makes the background   attempt to postMessage to a port that is in a bad state.  The port should   have been removed from the list by onDisconnect  but that was never run.    If you actual web pages and close them  onDisconnect does run.    Strangely  the onMessage in Options won't crash if it runs any of these:    var x = 4;    var x = window;    var x = typeof window; // &quot;object&quot;  but does crash if it does any of these:    var x = window.name;    var x = typeof window.name;    var x = window.setTimeout;   </pre>