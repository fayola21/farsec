<title>Issue 29933 -   chromium -    tab_strip_model.cc has broken code to make &quot;quick new tabs&quot; part of the existing tab's group - Project Hosting on Google Code</title> <pre> I'm almost certain the advertised behavior does not work.  I think it's because new   tabs created with Ctrl+T or the New Tab button don't have the TYPED PageTransition   when they are created.  I'm pretty sure TYPED urls are done through LoadURL() on an   existing tab.    <a href="http://src.chromium.org/viewvc/chrome/trunk/src/chrome/browser/tabs/tab_strip_model.cc">http://src.chromium.org/viewvc/chrome/trunk/src/chrome/browser/tabs/tab_strip_model.cc</a>  ?revision=32194&amp;view=markup    chrome/browser/tabs/tab_strip_model.cc:414  In AddTabContents():    if (!inherit_group) {      // Also  any tab opened at the end of the TabStrip with a &quot;TYPED&quot;      // transition inherit group as well. This covers the cases where the user      // creates a New Tab (e.g. Ctrl+T  or clicks the New Tab button)  or types      // in the address bar and presses Alt+Enter. This allows for opening a new      // Tab to quickly look up something. When this Tab is closed  the old one      // is re-selected  not the next-adjacent.      inherit_group = transition == PageTransition::TYPED &amp;&amp; index == count();    }    Also  in TabNavigating():    if (ShouldForgetOpenersForTransition(transition)) {      // Don't forget the openers if this tab is a New Tab page opened at the      // end of the TabStrip (e.g. by pressing Ctrl+T). Give the user one      // navigation of one of these transition types before resetting the      // opener relationships (this allows for the use case of opening a new      // tab to do a quick look-up of something while viewing a tab earlier in      // the strip). We can make this heuristic more permissive if need be.      if (!IsNewTabAtEndOfTabStrip(contents)) {        // If the user navigates the current tab to another page in any way        // other than by clicking a link  we want to pro-actively forget all        // TabStrip opener relationships since we assume they're beginning a        // different task by reusing the current tab.        ForgetAllOpeners();        // In this specific case we also want to reset the group relationship         // since it is now technically invalid.        ForgetGroup(contents);      }    } </pre>