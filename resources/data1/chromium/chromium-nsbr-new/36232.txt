<title>Issue 36232 -   chromium -    Adjust how 64-bit windows is handled for chromium - Project Hosting on Google Code</title> <pre> Carlos  Richard  Ian  Gregory  and I came to a consensus as to what we'd   like to do in order to rectify the current pain we're hitting as more of   the windows build becomes build-able for 64-bit. We then got sign-off from   mmentovai and others.    Changes will happen in a series of phases:  1. The existing .gyp files will be modified so that 2 different .sln files   can be generated  gated on gyp defines (a 32-bit and a 64-bit sln).   Initially the 64-bit sln will be basically empty. These slns will output   their intermediate files into separate directories (possibly intermingled   Debug/x64/... etc)  they will share a common output directory   (chrome/Debug  chrome/Release etc). Ideally  this will share a lot in   common with the linux64 conditionals.  2. gyp_chromium will be modified so that on windows  gyp will be invoked   twice  once for 32/64  so folks will get both SLNs on checkout.  3. compile.py will be altered on the bots  so that both SLNs get built.   This will require two invocations of devenv.  4. Targets will be migrated from the current crazy 'target_defaults' /   includes gypi approach to something that resembles the way linux 32 v 64 is   handled (with only the nacl shim building initially).  5. As 64-bit versions of some tests become available  extra invocations of   those tests will be added to the bots.  6. Gyp will be modified so that on supported generators (msvs  possibly   make as well)  GenerateOutput can accept multiple [target_list    target_dicts  data  params] (produced by varying GYP_DEFINES and re-running   all input processing). On these generators  these alternate configurations   will be collapsed together into a single Makefile/sln vcproj  in which   alternate platforms can be selected. For make  this should be close to   trival (though possibly undesirable  mmoss?). For msvs  it will effectively   allow whole targets to be gated out by config  and will enable alternate   exclude lists per config. (Note at this point two builds are still required   to build everything  but they can at least be done from the same   sln/makefile  which avoids angering the msvs editor.)  - While this does strictly speaking add functionality to some generators   absent on others  there is still a moral equivalent in xcode (generate   multiple side by side projects). Also  this approach has the advantage that   nothing needs to be added to gyp syntax. It will double gyp runtime  which   I assume does not matter. </pre>