<title>Issue 43371 -   chromium -    Feature request: Include commonly used Javascript libraries in Chrome - Project Hosting on Google Code</title> <pre> Hi     I propose that Chrome include commonly used JS libraries  allowing faster   load times and fewer server requests.     Specific Feature Request: All JS libraries included in Google's AJAX   library   API ( <a href="http://code.google.com/apis/ajaxlibs/">http://code.google.com/apis/ajaxlibs/</a> ) should be included in Chrome  and 'primed' (interpreted by V8 and in memory  ready to be executed). If  a page attempts to load one of these scripts  Chrome should use the in-  memory version and not request the page. Chrome would only intercept   requests to Google hosted JS libraries (e.g.    <a href="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js">http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js</a> )    not the same library on other sites (e.g.    <a href="http://www.example.com/js/jquery.min.js">http://www.example.com/js/jquery.min.js</a> )  since  obviously a file name does not guarantee that the files will be identical.    Rationale: These JS libraries are typically the first item requested in   a page. When the library is not in a user's cache  it must be requested   from Google's servers. This article claims that a surprisingly large   number of user's have an empty cache:   <a href="http://www.stevesouders.com/blog/2010/04/26/call-to-improve-browser-">http://www.stevesouders.com/blog/2010/04/26/call-to-improve-browser-</a>  caching/ .  Additionally  this may pose a greater problem on mobile devices  which   both have smaller cache sizes and more expensive requests.     Even when this library is in the cache  it must be loaded from the cache  and interpreted by V8.     According to this article ( <a href="http://www.rit.edu/alumni/ihf/inductee.php?">http://www.rit.edu/alumni/ihf/inductee.php?</a>  inductee=10 )    jQuery is used on over 25% of websites  although I assume Google has  more accurate numbers. jQuery and these other JS libraries are becoming so   widely used that it   makes sense to specially optimize for these use cases. The cost of storing  these libraries in memory is minimal compared to the overhead of loading  the library in the case of an empty cache. I propose we make these   libraries &quot;first class objects&quot;  in the same way other browser API's   exist.    Backwards compatibility issues: None. Browsers that do not include these  libraries will continue to load the Javascript normally. Sites that load  in Chrome with this new feature will load more quickly. If the chosen   set of libraries is changed in the future  sites will continue to work.  </pre>