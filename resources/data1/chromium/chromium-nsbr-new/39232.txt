<title>Issue 39232 -   chromium -    Stack traces make it look like the entry point is ?? instead of main - Project Hosting on Google Code</title> <pre> Tail call recursion means that _main is optimized down to:    0x00001ff0 &lt;main+0&gt;:	push   %ebp  0x00001ff1 &lt;main+1&gt;:	mov    %esp %ebp  0x00001ff3 &lt;main+3&gt;:	leave    0x00001ff4 &lt;main+4&gt;:	jmp    0x4000 &lt;dyld_stub_ChromeMain&gt;    Ignoring the fact that this could be optimized even more  normally  this��_��_��_d be fine.  It should just   make it look like _ChromeMain was called by _main��_��_��_s caller  instead of main itself.  The problem    in this case  is that main��_��_��_s caller is start (no underscore - that��_��_��_s why I��_��_��_m using underscores on   _main and _ChromeMain  to distinguish).  The symbol for start gets stripped out of the binary   because we strip our binaries.  There are no debugging symbols that identify start  because we   don��_��_��_t build start  it comes from crt1.o (or  in this case  crt1.10.5.o)  which in turn does not have   debugging symbols.  Consequently  there��_��_��_s no way to symbolically identify _ChromeMain��_��_��_s caller.    Both gdb and Breakpad think that the program��_��_��_s entry point is ��_��_��_??��_��_��_.    I should figure out a way to bypass the tail call optimization in _main.  One way to do this is to   put _ChromeMain��_��_��_s return value into a volatile int and return that.  It results in suboptimal code    but isn��_��_��_t that sort of the point of defeating the optimization?  Anyway  I doubt anyone��_��_��_ll care too   much if _main takes ten seconds longer to finish exiting.    Another option is to call exit() directly instead of (or in addition to!) returning from _main to start.    All start does with _main��_��_��_s return value is call exit() with it.    _main should also not be stripped from the executable��_��_��_s symbol table (just like _ChromeMain   isn��_��_��_t stripped from the framework��_��_��_s) so that Apple Crash Reporter can show these as ��_��_��_main��_��_��_   instead of ��_��_��_0x1000��_��_��_.    This change should be operative on both the browser app��_��_��_s _main and the helper app��_��_��_s _main. </pre>