<title>Issue 43373 -   chromium -    ChromeFrame: Crash in BindToStorage when chrome frame is wrapping the callback - Project Hosting on Google Code</title> <pre> Reported on the crash server.    This crash occurs because urlmon is calling out to an unloaded   WebProtect.dll. More importantly this crash occurs in a BindToStorage call   which we don't wrap. We have the ExceptionBarrierReportOnlyModule which   should basically ignore this crash.     Robert any ideas?    Product: ChromeFrame  Stack Signature: -6EBA1  New Signature Label: CINet::INetAsyncOpen()  New Signature Hash: 50f16c44_b1502de6_e0f62316_1165802c_74310a1a    Report link: http://go/crash/reportdetail?reportid=a5c372c9e7d85448    Meta information:  Product Name: ChromeFrame  Product Version: 5.0.375.33  Report ID: a5c372c9e7d85448  Report Time: 2010/05/05 22:45:04  Wed  Uptime: 1212 sec  Cumulative Uptime: 0 sec  OS Name: Windows NT  OS Version: 6.0.6002 Service Pack 2  CPU Architecture: x86  CPU Info: GenuineIntel family 6 model 23 stepping 10    0x0213d580   0x764eac9e [urlmon.dll] +0x0002ac9e CINet::INetAsyncOpen()  0x764d6b04 [urlmon.dll] +0x00016b04 CINet::INetAsyncStart()  0x764d6ab5 [urlmon.dll] +0x00016ab5 CINet::StartCommon(IUri   * IInternetProtocolSink * IInternetBindInfo * unsigned long unsigned long)  0x764d694a [urlmon.dll] +0x0001694a CINet::StartEx(IUri   * IInternetProtocolSink * IInternetBindInfo * unsigned long unsigned long)  0x764d6b69 [urlmon.dll] +0x00016b69 CINet::INetAsyncStart()  0x764c8e83 [urlmon.dll] +0x00008e83 CTransaction::StartEx(IUri   * IInternetProtocolSink * IInternetBindInfo * unsigned long unsigned long)  0x764c9410 [urlmon.dll] +0x00009410 CBinding::StartBinding(IUri * IBindCtx   * _GUID const &amp; int unsigned short * * void * *)  0x764c9021 [urlmon.dll] +0x00009021 CUrlMon::StartBinding(int IBindCtx   * IMoniker * _GUID const &amp; void * *)  0x764c9fbf [urlmon.dll] +0x00009fbf CUrlMon::BindToStorage(IBindCtx   * IMoniker * _GUID const &amp; void * *)  0x6946b315 [npchrome_frame.dll] - urlmon_moniker.cc:228   MonikerPatch::BindToStorage(long (*)(IMoniker * IBindCtx * IMoniker * _GUID   const &amp; void * *) IMoniker * IBindCtx * IMoniker * _GUID const &amp; void * *)  0x67cae9ee [mshtml.dll] +0x000ae9ee CStreamProxy::Bind(unsigned short const   * int IBindStatusCallbackEx * IMoniker * CBindCtxProxy * CDwnBindData * int   *)  0x67cae8f3 [mshtml.dll] +0x000ae8f3   CInputTextLayout::GetComputedPaddingRight()  0x67cab1ea [mshtml.dll] +0x000ab1ea NewDwnBindData(DWNLOADINFO   * CDwnBindData * * int unsigned long unsigned long)  0x67cab08b [mshtml.dll] +0x000ab08b CDwnLoad::Init(DWNLOADINFO * CDwnInfo   * unsigned int unsigned long)  0x67c2f019 [mshtml.dll] +0x0002f019 CHtmLoad::Init(DWNLOADINFO * CDwnInfo   *)  0x67caa9e0 [mshtml.dll] +0x000aa9e0 CDwnInfo::SetLoad(CDwnCtx   * int int DWNLOADINFO *)  0x67caa8e6 [mshtml.dll] +0x000aa8e6 CDwnCtx::SetLoad(int DWNLOADINFO * int)  0x67c2df8c [mshtml.dll] +0x0002df8c CHtmCtx::SetLoad(int DWNLOADINFO * int)  0x67c2ebea [mshtml.dll] +0x0002ebea CMarkup::Load(HTMLOADINFO *)  0x67c2258d [mshtml.dll] +0x0002258d CMarkup::LoadFromInfo(CDoc::LOADINFO   * unsigned __int64 unsigned short const *)  0x67c167b1 [mshtml.dll] +0x000167b1 CDoc::LoadFromInfo(CDoc::LOADINFO   * CMarkup * *)  0x67c16c66 [mshtml.dll] +0x00016c66 CDoc::Load(int IMoniker * IBindCtx   * unsigned long)  0x6d60541e [ieframe.dll] +0x001d541e CDocObjectHost::_LoadDocument()  0x6d537cea [ieframe.dll] +0x00107cea   LayerVariantCopyHelper&lt;tagVARIANT LayerInternal::tagLAYERVARIANT&gt;(tagVARIAN  T * LayerInternal::tagLAYERVARIANT const *)  0x6d530baa [ieframe.dll] +0x00100baa CDocObjectView::Exec(_GUID const   * unsigned long unsigned long tagVARIANT * tagVARIANT *)  0x6d5f1d3a [ieframe.dll] +0x001c1d3a ExecPending(IOleCommandTarget * _GUID   const &amp; void * * tagVARIANT *)  0x6d5f3361 [ieframe.dll] +0x001c3361   CIEFrameAuto::_QueryPendingDelegate(IDispatch * * tagVARIANT *)  0x6d570333 [ieframe.dll] +0x00140333   CDocObjectHost::CDOHBindStatusCallback::QueryInterface(_GUID const &amp; void *   *)  0x6d458008 [ieframe.dll] +0x00028008 GetRootDelegate(CIEFrameAuto   * IDispatch * * const)  0x7779a8c4 [ole32.dll] +0x0012a8c4 SyncStubInvoke(tagRPCOLEMESSAGE * _GUID   const &amp; CIDObject * void * IRpcChannelBuffer * IRpcStubBuffer * unsigned   long *)  0x7779aa58 [ole32.dll] +0x0012aa58 StubInvoke(tagRPCOLEMESSAGE   * CStdIdentity * IRpcStubBuffer * IRpcChannelBuffer * tagIPIDEntry   * unsigned long *)  0x776c61d5 [ole32.dll] +0x000561d5   CCtxComChnl::ContextInvoke(tagRPCOLEMESSAGE * IRpcStubBuffer * tagIPIDEntry   * unsigned long *)  0x776c60e6 [ole32.dll] +0x000560e6 MTAInvoke(tagRPCOLEMESSAGE * unsigned   long IRpcStubBuffer * IInternalChannelBuffer * tagIPIDEntry * unsigned long   *)  0x776c6df4 [ole32.dll] +0x00056df4 STAInvoke(tagRPCOLEMESSAGE * unsigned   long IRpcStubBuffer * IInternalChannelBuffer * void * tagIPIDEntry   * unsigned long *)  0x7779a980 [ole32.dll] +0x0012a980 AppInvoke(CMessageCall   * CRpcChannelBuffer * IRpcStubBuffer * void * void * tagIPIDEntry   * LocalThis *)  0x7779a79a [ole32.dll] +0x0012a79a ComInvokeWithLockAndIPID(CMessageCall   * tagIPIDEntry *)  0x7779ae2c [ole32.dll] +0x0012ae2c ComInvoke(CMessageCall *)  0x776c6bcc [ole32.dll] +0x00056bcc ThreadDispatch(void *)  0x776c6b8b [ole32.dll] +0x00056b8b ThreadWndProc(HWND__ * unsigned   int unsigned int long)  0x777ffd71 [user32.dll] +0x0001fd71 InternalCallWinProc  0x777ffe49 [user32.dll] +0x0001fe49 UserCallWinProcCheckWow  0x7780018c [user32.dll] +0x0002018c DispatchMessageWorker  0x7780022a [user32.dll] +0x0002022a DispatchMessageW  0x6d55c174 [ieframe.dll] +0x0012c174 _TraceTabThreadPerfAction(tagMSG const   *)  0x6d50335e [ieframe.dll] +0x000d335e CBrowserFrame::OnTabListChanged()  0x7750408c [iertutil.dll] +0x0016408c IsoRemoveArtifact(unsigned long)  0x7642d0e8 [kernel32.dll] +0x0004d0e8 BaseThreadInitThunk  0x77ba19ba [ntdll.dll] +0x000419ba __RtlUserThreadStart  0x77ba198d [ntdll.dll] +0x0004198d _RtlUserThreadStart   </pre>