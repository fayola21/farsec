<title>Issue 29241 -   chromium -    Map EPIPE to a network error code - Project Hosting on Google Code</title> <pre> This bug report continues the discussion in the code review at  <a href="http://codereview.chromium.org/455029">http://codereview.chromium.org/455029</a> .  I filed a bug report so  I can attach the test programs.    On Unix  if the peer closes the connection  our write() or send()  call may fail with EPIPE.  We need to map EPIPE to a network error  code.    We can add net::ERR_BROKEN_PIPE.  I am not in favor of that because  EPIPE is a Unix-specific error  and this would require us to add  net::ERR_BROKEN_PIPE to the list of network errors that we check  to determine if it's safe to resend a failed request over a new  connection.    So I'd like to map EPIPE to an existing network error.  The best  candidates are net::ERR_CONNECTION_RESET and net::ERR_CONNECTION_ABORTED.  I proposed net::ERR_CONNECTION_RESET  with reasons noted in the code  review.  But Will pointed out that net::ERR_CONNECTION_RESET should  only be used if we actually received a TCP RST packet.    I attached three test programs.    1. server.c: a test server.  Compile it on Linux with    gcc -Wall server.c -o server  Then run it with    ./server    2. client.c: a test client.  Compile it on Linux or Mac with    gcc -Wall client.c -o client  Then run it with    ./client ddd.ddd.ddd.ddd  where ddd.ddd.ddd.ddd is the dotted decimal IP address of the  server.    3. winclient.cc: a test client (ported to Winsock).  Compile it  on Windows with    cl /W4 winclient.cc ws2_32.lib  Then run it with    winclient.exe ddd.ddd.ddd.ddd  where ddd.ddd.ddd.ddd is the dotted decimal IP address of the  server.    On Linux and Mac  the test client prints    second write failed: EPIPE  On Windows  the test client prints    second send failed: WSAECONNABORTED    I don't have time to find out if the server sends TCP RST.  I'm  going to propose that we map EPIPE to net::ERR_CONNECTION_ABORTED  based on this experiment result. </pre>