<title>Issue 27491 -   chromium -    DCHECK in WebSocketExperimentTask - Project Hosting on Google Code</title> <pre> I hit this DCHECK pretty consistently when debugging chrome  if I have set a breakpoint on the UI thread.    Probably because while I freeze the UI thread  the IO thread keeps running so it makes the race more likely.     	chrome.dll!DebugUtil::BreakDebugger()  Line 222	C++   	chrome.dll!logging::LogMessage::~LogMessage()  Line 540	C++  &gt;	chrome.dll!chrome_browser_net_websocket_experiment::WebSocketExperimentTask::Context::CreateURLFetcher(...)  Line 21	C++   	chrome.dll!chrome_browser_net_websocket_experiment::WebSocketExperimentTask::DoURLFetch()  Line 225 + 0x34 bytes	C++   	chrome.dll!chrome_browser_net_websocket_experiment::WebSocketExperimentTask::DoLoop(int result=0)  Line 170 + 0x8 bytes	C++   	chrome.dll!chrome_browser_net_websocket_experiment::WebSocketExperimentTask::Run()  Line 64	C++   	chrome.dll!chrome_browser_net_websocket_experiment::WebSocketExperimentRunner::DoLoop()  Line 209	C++   	chrome.dll!DispatchToMethod&lt;chrome_browser_net_websocket_experiment::WebSocketExperimentRunner void (...)  Line 412 + 0x8 bytes	C++   	chrome.dll!RunnableMethod&lt;chrome_browser_net_websocket_experiment::WebSocketExperimentRunner void (...)(void) Tuple0&gt;::Run()  Line 277 + 0x1a bytes	C++   	chrome.dll!MessageLoop::RunTask(Task * task=0x023c2780)  Line 320 + 0xf bytes	C++    The code in question is:    URLFetcher* WebSocketExperimentTask::Context::CreateURLFetcher(      const Config&amp; config  URLFetcher::Delegate* delegate) {    URLRequestContextGetter* getter =        Profile::GetDefaultRequestContext();    DCHECK(getter);    &lt;==============================  HERE    DLOG(INFO) &lt;&lt; &quot;url=&quot; &lt;&lt; config.http_url;    URLFetcher* fetcher =        new URLFetcher(config.http_url  URLFetcher::GET  delegate);    fetcher-&gt;set_request_context(getter);    fetcher-&gt;set_load_flags(        net::LOAD_BYPASS_CACHE | net::LOAD_DISABLE_CACHE |        net::LOAD_DO_NOT_SEND_COOKIES | net::LOAD_DO_NOT_SEND_AUTH_DATA);    return fetcher;  }    I believe the problem is that Profile::GetDefaultRequestContext() is initialized lazily  on the UI thread.  So here  where we access it from the IO thread  if the task runs before it has gotten lazily initialized yet it will be NULL and we crash. </pre>