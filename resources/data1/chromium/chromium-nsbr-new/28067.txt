<title>Issue 28067 -   chromium -    we need a better way to detect dll's than GetHandle on the dll name - Project Hosting on Google Code</title> <pre> In <a title="Partial repaint problems with transparent plugins" class=closed_ref href="/p/chromium/issues/detail?id=25820"> issue 25820 </a>  we're running into a problem where our dll injection   blacklist isn't working.  The reason is that we're looking up known dll's   by name and in this case  the dll is getting loaded via its Windows short   name (perhaps it's installed on a FAT32 filesystem?).  Since the short name   is machine and installation dependent  we can't add the short name to the   blacklist.  While we may be able to come up with some specific workaround   for GD  it seems likely that this is also affecting us with other dlls on   the blacklist  so it would be good if we could find a better way to   identify which dlls were really being injected into our process.    Perhaps there's some way we could hook into where dlls are injected?  Or   maybe there's some slower mechanism we could run in a crash-recovery-  diagnostic mode which would then allow us to blacklist the appropriate dll   name? </pre>