<title>Issue 26487 -   chromium -    ZWJ (U+200D) format control should NOT be rendered with its own glyph - Project Hosting on Google Code</title> <pre> Google Chrome	3.0.195.27 (Build officiel 28507)  WebKit	532.0  V8	1.2.14.20  User Agent	Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US)   AppleWebKit/532.0 (KHTML  like Gecko) Chrome/3.0.195.27 Safari/532.0        <a href="http://fr.wikisource.org/wiki/Traitt%C3%A9_du_jeu_royal_des_%C3%A9chets_(Be">http://fr.wikisource.org/wiki/Traitt%C3%A9_du_jeu_royal_des_%C3%A9chets_(Be</a>  njamin_Asperling_de_Rarogne)    Use it with a user-defined custom stylesheet containing:    .ligature    { display: inline !important; }    .nonligature { display: none   !important; }    because the site is currently disabling the rendering of ligatures with   ZWJ  and uses compatiblity characters in the visible spans with   &quot;nonligature&quot; class.             Safari 4: FAIL    Firefox 3.x: FAIL           IE 7: FAIL           IE 8: FAIL      1. Just load the URL suggested    2. Look at how the text &quot;Ou ��_��_ont montr��_��_es les veritables reigles &amp; maximes   les plus f��_��_��_ines de ce jeu  avec plu��_�_ѕ�_ieurs ordonnances de bataille ��_��_uivant   les plus belles methodes d��_��_��_attaquer.&quot; is rendered.          The zero-width joiner  U+200D  (which is used to indicate the position of   preferred ligatures) should only be rendered with a glyph in &quot;visible   control mode&quot; (for example in form input controls) because it is a format   control character. Its glyph MUST NOT be rendered by default in a non-input   text element.    In non-input mode (when the ligature font feature is activated)  the   character should be extracted from the text  and the renderer should look   for ligatures in the selected font.    If a glyph exists in that font  which implements the ligature feature  for   the ligature made with the indicated surrounding characters (note that   there may be be sequences like &lt;f ZWJ f ZWJ i&gt; where multiple ligatures can   be combined) in that font  the glyph selected by that font in that feature   should be rendered instead of the surrounding graphemes and the format   control.    Otherwise  the grapheme clusters before and after the ZWJ format control   must still be rendered  but without ZWJ (in other words  ZWJ must be   dropped and not rendered.)    Within input controls however  it is perfectly acceptable to have the   ligature feature disabled  and a glyph displayed.    The same rules should be applied for other format controls (including for   example ZWNJ).    Note that Unicode provides some compatibility characters for a few Latin   ligatures (like fi  fl  ffi and ffl)  but they are not recommended (in   addition  even the most recent fonts made by typograph  have chosen to map   them  so they are frequently rendered by looking for them within other   fonts). This is also a bad behavior:    If there's no glyph mapped for these compatibility characters in the   currently selected font  the browser's renderer should instead assume that   they were coded like &lt;f ZWJ i&gt;  &lt;f ZWJ l&gt;  &lt;f ZWJ f ZWJ i&gt;  &lt;f ZWJ f ZWJ l&gt;   and apply the rules above  to make sure that they will be rendered with the    currently selected font  and so  if there's no ligature encoded in that   font  it should just render the separate letters from the same font.        A glyph  selected from the font is rendered. It is still rendered with a   zero-width  but it should NOT be visible.    This is a Unicode conformance bug.   </pre>