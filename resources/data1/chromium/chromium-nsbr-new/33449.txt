<title>Issue 33449 -   chromium -    views::ScrollView needs to be easier to use - Project Hosting on Google Code</title> <pre> More often than not folks using scrollview want to force the width of the   of the contents view to that of the viewport. This requires code like:   AutoFillProfilesView::ScrollViewContents::Layout() {    views::View* parent = GetParent();    if (parent &amp;&amp; parent-&gt;width()) {      const int width = parent-&gt;width();      const int height = GetHeightForWidth(width);      SetBounds(x()  y()  width  height);    } else {      gfx::Size prefsize = GetPreferredSize();      SetBounds(0  0  prefsize.width()  prefsize.height());    }    View::Layout();  }    or:    void AdvancedContentsView::Layout() {    views::View* parent = GetParent();    if (parent &amp;&amp; parent-&gt;width()) {      const int width = parent-&gt;width();      const int height = GetHeightForWidth(width);      SetBounds(0  0  width  height);    } else {      gfx::Size prefsize = GetPreferredSize();      SetBounds(0  0  prefsize.width()  prefsize.height());    }    View::Layout();  }    void AdvancedContentsView::DidChangeBounds(const gfx::Rect&amp; previous                                              const gfx::Rect&amp; current) {    // Override to do nothing. Calling Layout() interferes with our   scrolling.  }    This is fragile and easy to get wrong. ScrollView should offer an option   for taking care of this for you. </pre>