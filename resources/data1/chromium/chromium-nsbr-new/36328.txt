<title>Issue 36328 -   chromium -    Assigning to parameter n creates a property n on arguments object - Project Hosting on Google Code</title> <pre> Chrome Version       : 4.0.249.89 (38071)             Safari 4: OK    Firefox 3.x: OK           IE 7: OK           IE 8: OK    Running the test code  the expected result is:  &quot;false  false&quot;      In Chrome 4  &quot;false  true&quot;    Test code:  function testArgOutsideLength(a){     var inBefore = &quot;0&quot; in arguments;     a = 1;     alert([inBefore  &quot;0&quot; in arguments]);  }    testArgOutsideLength();    Bookmarklet  for convenience:    javascript: function testArgOutsideLength(a){ var inBefore = &quot;0&quot; in  arguments; a = 1; alert([inBefore  &quot;0&quot; in arguments]);} testArgOutsideLength()    The correct outcome is explained by Ecma-262  <a href="/p/chromium/source/detail?r=3">r3</a> s 10.1.8  &quot;Arguments Object&quot;:    | A property is created with name length and property attributes {   | DontEnum }. The initial value of this property is the number of actual   | parameter values supplied by the caller.    in execution context of the call to testArgOutsideLength()   arguments.length = 0.    | For each non-negative integer  arg  less than the value of the length   | property  a property is created with name ToString(arg) and property   | attributes { DontEnum }.     arguments.length = 0  so no properties to create.      | The initial value of this property is the   | value of the corresponding actual parameter supplied by the caller.     No properties were created  so there is nothing to be assigned a value.    The bug seems to be related to the implementation of the following:     | The first actual parameter value corresponds to arg = 0  the second to   | arg = 1  and so on. In the case when arg is less than the number of   | formal parameters for the Function object  this property shares its   | value with the corresponding property of the activation object. This   | means that changing this property changes the corresponding property   | of the activation object and vice versa.    Again  there are no parameters  no properties of the arguments object. At  this point  `a` would share its value with arguments[0]  but arguments does  not have &quot;0&quot; property. Since no &quot;0&quot; property exists on the arguments  object  the property `a` has nothing to share its value with. To handle  this situation  Chrome *creates* a property of the arguments object to  share value with.     The result is arguments gets a &quot;0&quot; property and arguments.length is 0. </pre>