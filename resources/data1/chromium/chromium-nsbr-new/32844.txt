<title>Issue 32844 -   chromium -    URLFetcher may crash when it is stopped - Project Hosting on Google Code</title> <pre> If URLFetcher::Stop() is called when a URLFetcher  has posted a delayed  task to StartURLRequest because of a server failure  the Stop() may happen  before the Start causing a crasher.    Here is the stack I am getting:   	chrome.dll!DebugUtil::BreakDebugger()  Line 222	C++   	chrome.dll!logging::LogMessage::~LogMessage()  Line 566	C++  &gt;	chrome.dll!URLFetcher::Core::StartURLRequest()  Line 204	C++   	chrome.dll!DispatchToMethod&lt;URLFetcher::Core void (__thiscall  URLFetcher::Core::*)(void)&gt;(URLFetcher::Core * obj=0x068f68c0  void (void)*  method=0x5a897ec0  const Tuple0 &amp; arg={...})  Line 412 + 0xb bytes	C++   	chrome.dll!RunnableMethod&lt;URLFetcher::Core void (__thiscall  URLFetcher::Core::*)(void) Tuple0&gt;::Run()  Line 289 + 0x1e bytes	C++   	chrome.dll!MessageLoop::RunTask(Task * task=0x068b4840)  Line 320 + 0xf  bytes	C++   	chrome.dll!MessageLoop::DeferOrRunPendingTask(const  MessageLoop::PendingTask &amp; pending_task={...})  Line 331	C++   	chrome.dll!MessageLoop::DoDelayedWork(base::Time *  next_delayed_work_time=0x04b6b8c8)  Line 463	C++   	chrome.dll!base::MessagePumpForIO::DoRunLoop()  Line 458 + 0x24 bytes	C++     chrome.dll!base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate  * delegate=0x05b8f99c  base::MessagePumpWin::Dispatcher *  dispatcher=0x00000000)  Line 52 + 0xf bytes	C++   	chrome.dll!base::MessagePumpWin::Run(base::MessagePump::Delegate *  delegate=0x05b8f99c)  Line 78 + 0x1c bytes	C++   	chrome.dll!MessageLoop::RunInternal()  Line 205 + 0x2a bytes	C++   	chrome.dll!MessageLoop::RunHandler()  Line 178	C++   	chrome.dll!MessageLoop::Run()  Line 156	C++   	chrome.dll!base::Thread::Run(MessageLoop * message_loop=0x05b8f99c)   Line 134	C++   	chrome.dll!base::Thread::ThreadMain()  Line 155 + 0x16 bytes	C++   	chrome.dll!`anonymous namespace'::ThreadFunc(void * closure=0x04bb3200)   Line 26 + 0xf bytes	C++   	kernel32.dll!@BaseThreadInitThunk@12()  + 0xe bytes	   	ntdll.dll!___RtlUserThreadStart@8()  + 0x23 bytes	   	ntdll.dll!__RtlUserThreadStart@8()  + 0x1b bytes	   </pre>