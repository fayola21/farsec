<title>Issue 45083 -   chromium -    ThreadSanitizer doesn't understand lockf(*  F_LOCK/F_UNLOCK  0) and gives false reports on StatsTable - Project Hosting on Google Code</title> <pre> <a href="http://build.chromium.org/buildbot/memory/builders/Linux%20Tests%20(tsan)/builds/4434/steps/valgrind%20test:%20base/logs/stdio">http://build.chromium.org/buildbot/memory/builders/Linux%20Tests%20(tsan)/builds/4434/steps/valgrind%20test:%20base/logs/stdio</a>  INFO: T40 has been created by T0 at this point: {{{      #0  ???//lib/tls/i686/cmov/libpthread-2.7.so /lib/tls/i686/cmov/libpthread-2.7.so      #1  pthread_create@@GLIBC_2.1 /lib/tls/i686/cmov/libpthread-2.7.so      #2  pthread_create@* ts_valgrind_intercepts.c:652      #3  (anonymous namespace)::CreateThread(unsigned int  bool  PlatformThread::Delegate*  unsigned long*) base/platform_thread_posix.cc:129      #4  PlatformThread::Create(unsigned int  PlatformThread::Delegate*  unsigned long*) base/platform_thread_posix.cc:141      #5  base::SimpleThread::Start() base/simple_thread.cc:16      #6  base::StatsTableTest_FLAKY_MultipleThreads_Test::TestBody() base/stats_table_unittest.cc:131      #7  testing::Test::Run() testing/gtest/src/gtest.cc:2095  }}}  INFO: T0 is program's main thread  INFO: T41 has been created by T0 at this point: {{{      #0  ???//lib/tls/i686/cmov/libpthread-2.7.so /lib/tls/i686/cmov/libpthread-2.7.so      #1  pthread_create@@GLIBC_2.1 /lib/tls/i686/cmov/libpthread-2.7.so      #2  pthread_create@* ts_valgrind_intercepts.c:652      #3  (anonymous namespace)::CreateThread(unsigned int  bool  PlatformThread::Delegate*  unsigned long*) base/platform_thread_posix.cc:129      #4  PlatformThread::Create(unsigned int  PlatformThread::Delegate*  unsigned long*) base/platform_thread_posix.cc:141      #5  base::SimpleThread::Start() base/simple_thread.cc:16      #6  base::StatsTableTest_FLAKY_MultipleThreads_Test::TestBody() base/stats_table_unittest.cc:131      #7  testing::Test::Run() testing/gtest/src/gtest.cc:2095  }}}  WARNING: Possible data race during read of size 1 at 0x4E02070: {{{     T40 (locks held: {}):      #0  StatsTable::FindEmptyThread() const base/stats_table.cc:390      #1  StatsTable::RegisterThread(std::string const&amp;) base/stats_table.cc:291      #2  StatsCounter::GetPtr() base/stats_counters.h:139      #3  StatsCounter::Set(int) base/stats_counters.h:88      #4  base::StatsTableThread::Run() base/stats_table_unittest.cc:98      #5  base::SimpleThread::ThreadMain() base/simple_thread.cc:38      #6  ThreadFunc(void*) base/platform_thread_posix.cc:28      #7  ThreadSanitizerStartThread ts_valgrind_intercepts.c:600    Concurrent write(s) happened at (OR AFTER) these points:     T41 (locks held: {}):      #0  unsigned int (anonymous namespace)::lcpyT&lt;char&gt;(char*  char const*  unsigned int) base/string_util.cc:1806      #1  base::strlcpy(char*  char const*  unsigned int) base/string_util.cc:1822      #2  StatsTable::RegisterThread(std::string const&amp;) base/stats_table.cc:301      #3  StatsCounter::GetPtr() base/stats_counters.h:139      #4  StatsCounter::Set(int) base/stats_counters.h:88      #5  base::StatsTableThread::Run() base/stats_table_unittest.cc:98      #6  base::SimpleThread::ThreadMain() base/simple_thread.cc:38      #7  ThreadFunc(void*) base/platform_thread_posix.cc:28      #8  ThreadSanitizerStartThread ts_valgrind_intercepts.c:600  }}}    Both stacks are guarded by base::SharedMemoryAutoLock </pre>