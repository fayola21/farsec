<title>Issue 24252 -   chromium -    Crash - `anonymous namespace'::PackDialogContent::OnPackFailure(std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt; const &amp;) - Project Hosting on Google Code</title> <pre> This crash was detected in 4.0.221.6 and was seen in 4.0.220.1. It is currently ranked #25 (based on the relative number of reports in the release).  There have been 4 reports from 4 clients. Search query: http://crash/search?query=Chrome+4.0.221.6+%60anonymous+namespace%27%3A%3APackDialogContent%3A%3AOnPackFailure%28std%3A%3Abasic_string%3Cwchar_t%2Cstd%3A%3Achar_traits%3Cwchar_t%3E%2Cstd%3A%3Aallocator%3Cwchar_t%3E+%3E+const+%26%29 ---------------------------- *       Summary Data       * ---------------------------- Report Link: http://crash/reportdetail?reportid=492aa9f34a35c6fa Mini Dump Link: http://crash/file?reportid=492aa9f34a35c6fa&amp;name=upload_file_minidump  Uptime: 111 sec User Comments: null OS: Windows XP Service Pack 2 CPU Architecture: x86 CPU Info: GenuineIntel family 6 model 8 stepping 10 rept: null ptype: browser plat: Win32 crash type:(EXCEPTION_ACCESS_VIOLATION@0x00000000)  ---------------------------- *        Crash Trace       * ----------------------------  [extension_pack_dialog.cc:112] - `anonymous namespace'::PackDialogContent::OnPackFailure(std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt; &gt; const &amp;)  [extension_pack_dialog.cc:131] - `anonymous namespace'::PackDialogContent::Accept()          [resourceloader.h:101] - views::DialogDelegate::Accept(bool)     [dialog_client_view.cc:225] - views::DialogClientView::AcceptWindow()     [dialog_client_view.cc:381] - views::DialogClientView::ButtonPressed(views::Button * views::Event const &amp;)                  [button.cc:74] - views::Button::NotifyClick(views::Event const &amp;)          [native_button.cc:107] - views::NativeButton::ButtonPressed()       [native_button_win.cc:93] - views::NativeButtonWin::ProcessMessage(unsigned int unsigned int long long *)            [widget_win.cc:1107] - views::WidgetWin::OnWndProc(unsigned int unsigned int long)            [window_impl.cc:182] - base::WindowImpl::WndProc(HWND__ * unsigned int unsigned int long)         [user32.dll+0x00008708] - InternalCallWinProc         [user32.dll+0x000087ea] - UserCallWinProcCheckWow         [user32.dll+0x0000b742] - SendMessageWorker         [user32.dll+0x0000b7aa] - SendMessageW       [comctl32.dll+0x00026ff5] - Button_NotifyParent       [comctl32.dll+0x000270d7] - Button_ReleaseCapture       [comctl32.dll+0x000293dc] - Button_WndProc         [user32.dll+0x00008708] - InternalCallWinProc         [user32.dll+0x000087ea] - UserCallWinProcCheckWow         [user32.dll+0x0000c00d] - CallWindowProcAorW         [user32.dll+0x0000c033] - CallWindowProcW     [native_control_win.cc:202] - views::NativeControlWin::NativeControlWndProc(HWND__ * unsigned int unsigned int long)         [user32.dll+0x00008708] - InternalCallWinProc         [user32.dll+0x000087ea] - UserCallWinProcCheckWow         [user32.dll+0x000089a4] - DispatchMessageWorker         [user32.dll+0x000089e7] - DispatchMessageW [accelerator_handler_win.cc:43] - views::AcceleratorHandler::Dispatch(tagMSG const &amp;)       [message_pump_win.cc:357] - base::MessagePumpForUI::ProcessMessageHelper(tagMSG const &amp;)       [message_pump_win.cc:205] - base::MessagePumpForUI::DoRunLoop()        [message_pump_win.cc:52] - base::MessagePumpWin::RunWithDispatcher(base::MessagePump::Delegate * base::MessagePumpWin::Dispatcher *)           [message_loop.cc:194] - MessageLoop::RunInternal()           [message_loop.cc:181] - MessageLoop::RunHandler()           [message_loop.cc:599] - MessageLoopForUI::Run(base::MessagePumpWin::Dispatcher *)           [browser_main.cc:149] - `anonymous namespace'::RunUIMessageLoop(BrowserProcess *)           [browser_main.cc:833] - BrowserMain(MainFunctionParams const &amp;)        [chrome_dll_main.cc:605] - ChromeMain    [google_update_client.cc:96] - google_update::GoogleUpdateClient::Launch(HINSTANCE__ * sandbox::SandboxInterfaceInfo * wchar_t * char const * int *)       [kernel32.dll+0x0002ffff] - BasepCopyFileCallback  ---------------------------- *      Loaded Modules      * ----------------------------     wship6.dll     rsaenh.dll     bg.dll     avgrsstx.dll     netapi32.dll     rlz.dll     dnsapi.dll     userenv.dll     psapi.dll     crypt32.dll     advapi32.dll     comctl32.dll     t2embed.dll     rpcrt4.dll     msvcp60.dll     version.dll     mswsock.dll     urlmon.dll     icudt42.dll     ole32.dll     wldap32.dll     winmm.dll     wininet.dll     wshtcpip.dll     rtutils.dll     default.dll     cryptnet.dll     MSCTF.dll     chrome.dll     msv1_0.dll     msvcrt.dll     oleacc.dll     usp10.dll     schannel.dll     shlwapi.dll     ntdll.dll     rasapi32.dll     xpsp2res.dll     sensapi.dll     rasadhlp.dll     rasman.dll     uxtheme.dll     sxs.dll     newdll.dll     mslbui.dll     ws2help.dll     samlib.dll     gdi32.dll     tapi32.dll     ws2_32.dll     hnetcfg.dll     shell32.dll     winspool.drv     kernel32.dll     oleaut32.dll     user32.dll     dssenh.dll     lz32.dll     mscms.dll     iphlpapi.dll     chrome.exe     gears.dll     secur32.dll     msasn1.dll     imm32.dll     riched20.dll     ntmarta.dll     winhttp.dll  </pre>