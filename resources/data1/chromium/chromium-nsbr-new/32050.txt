<title>Issue 32050 -   chromium -    Infinite loop in extensions on document_start - Project Hosting on Google Code</title> <pre> Chrome Version       : 4.0.249.64 (Official Build 35722) beta  URLs (if applicable) : <a href="http://sorryrobot.com/chrometest.php">http://sorryrobot.com/chrometest.php</a>      1. Install the 3-line extension described below (or any extension that creates     an element and sets its innerHTML to a string containing an element)  2. Visit <a href="http://sorryrobot.com/chrometest.php">http://sorryrobot.com/chrometest.php</a> (or any page with a     Content-Type: application/xhtml+xml header)        The extension .js file is loaded once  the extension logs to the console  once  and the page loads as normal.          The extension .js file is loaded infinitely and logs infinitely until  Chrome detects an infinite recursion.  If the extension did more than just  log a message  the website in question would hang at a blank white screen.        This is a problem because jQuery has the following snippet of code in it   which means that if you load jQuery at document_start  some websites will  infinitely recurse and never load:    var div = document.createElement('div');    div.innerHTML = // something complicated that could be as simple as                    // '&lt;p&gt;hi&lt;/p&gt;' and still cause an infinite loop.      Here is the source code of the test web page   (<a href="http://sorryrobot.com/chrometest.php">http://sorryrobot.com/chrometest.php</a>)  so you can reproduce it on your own   machine:      &lt;?php      header('Content-type: application/xhtml+xml');    ?&gt;    &lt;html&gt;      &lt;body&gt;      &lt;/body&gt;    &lt;/html&gt;    The Content-Type:xhtml header is the crucial part.  With a plain HTML header  the   extension behaves correctly.  (A more complete website that breaks is   prodigits.co.uk.)    Here is the manifest of the test extension:      {      &quot;name&quot;: &quot;Test script&quot;       &quot;version&quot;: &quot;1.0.0&quot;       &quot;content_scripts&quot;: [        {          &quot;matches&quot;: [&quot;http://*/*&quot;          &quot;js&quot;: [            &quot;test.js&quot;          ]           &quot;run_at&quot;: &quot;document_start&quot;        }      ]    }    The document_start is the part that reliably causes the problem  though I *think*   I've seen this behavior at document_end as well in the AdBlock extension.    Here is the source of test.js:      var div = document.createElement(&quot;div&quot;);    div.innerHTML = '&lt;p&gt;Hi&lt;/p&gt;';    console.log(&quot;I should only run once.&quot;);    The internal &lt;p&gt;&lt;/p&gt; is crucial -- 'Hi' alone does not cause the problem  but   '&lt;div&gt;hi&lt;/div&gt;' or '&lt;p&gt;Hi&lt;/p&gt;' does.  Also  creating a &quot;div&quot; is not important --   I tested &quot;span&quot; and &quot;p&quot; as well and got the same results.    Attached are two screenshots:    1. The extension logs infinitely instead of once.    2. The extension script has been loaded infinitely by Chrome instead of once.    Attached also is a zip of the test extension directory. </pre>