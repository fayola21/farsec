<title>Issue 25385 -   chromium -    Data race on vfptr in base::Thread - Project Hosting on Google Code</title> <pre> base::Thread joins the OS thread in its destructor.  This results in a data race on vfptr.  See <a href="http://code.google.com/p/data-race-test/wiki/PopularDataRaces">http://code.google.com/p/data-race-test/wiki/PopularDataRaces</a> for the   details.    If we don't subclass base::Thread  this data race is benign.  Othewise  this can be harmful.  I saw a few base::Thread subclasses in unittests (e.g.   base/thread_unittest.cc).    In either case  this data race results in a ThreadSanitizer report like   the following:  INFO: T0 is program's main thread  WARNING: Possible data race during write of size 4 at 0xFEFE657C: {{{     T0 (locks held: {}):      #0  base::Thread::~Thread() base/thread.cc:46      ...    Concurrent read(s) happened at (OR AFTER) these points:     T15 (locks held: {}):      #0  base::Thread::ThreadMain() base/thread.cc:153      #1  ThreadFunc(void*) base/platform_thread_posix.cc:26      #2  ThreadSanitizerStartThread ts_valgrind_intercepts.c:504    ...  }}}    Do we have base::Thread subclasses outside unittests?    Anyway  I'd recommend sealing base::Thread and re-writing the tests that   subclass it. </pre>