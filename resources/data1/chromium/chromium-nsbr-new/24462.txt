<title>Issue 24462 -   chromium -    Catch exceptions in the event loop and DCHECK and/or report histograms. - Project Hosting on Google Code</title> <pre> <a href="http://crbug.com/24461">http://crbug.com/24461</a> suggests registering an uncaught exception handler to help with   debugging.  Looking at that idea lead me to realize that our current code may be seeing a lot of   NSExceptions thrown  which are caught and silently ignored by the Cocoa event loop.    This is defined behavior  and in a Cocoa context works alright because of how NSAutoreleasePool   catches and rethrows exceptions.  Unfortunately  since exceptions are implemented in terms of   setjmp/longjmp  this wreaks havoc with our Chrome code  because it skips around all of our   wonderful scoped stuff.  I believe that this could explain some of our hard-to-grok bugs    because if an NSException is thrown and the stack is unwound incorrectly (from a C++   perspective)  it can leave various Chrome structures inconsistent.  I've definitely seen bugs where   an NSException left things inconsistent and lead to a later crash in a not-visibly-related place.    I would argue that uncaught exceptions should be fatal  but since we haven't been paying   attention  doing that today would be unacceptable.  For now  we could instrument to track the   incidence in the dev channel  and perhaps DCHECK to expose them for developers to encourage   fixing.  [I'd be happy to DCHECK and log bugs as indicated.]  Then in a few weeks maybe   upgrade them to fatal.   </pre>