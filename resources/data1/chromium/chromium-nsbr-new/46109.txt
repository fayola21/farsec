<title>Issue 46109 -   chromium -    Dynamic Script addition should be ordered - Project Hosting on Google Code</title>   1. Go to the test site listed above  2. Set delay &gt; 1.5s  2. Due to app engine start latency  refresh page after first run  ignore first results  3. The test shows that chrome executes javascript in the order in which scripts are returned from the server  not the order in which the script tags were added to the page. Within a few refreshes you should see one or both of tests A &amp; C fail.  Firefox will *never* fail tests A &amp; C.  4.  See detailed discussion on stack overflow - <a href="http://stackoverflow.com/questions/2804212/dynamic-script-addition-should-be-ordered">http://stackoverflow.com/questions/2804212/dynamic-script-addition-should-be-ordered</a>        when the 'async' attribute is *not* present on the dynamically added &lt;script/&gt; tag  then scripts should be executed in the order they are added to the document  not the order in which they are returned from the server.  Firefox shows this behaviour - tests A &amp; C will *always* load the scripts in the order they were added to the DOM - regardless of which is returned first from the server.        Webkit executes scripts in the order they are returned from the server  in all situations. It pays no attention to the order in which they appear (or were added) in the document head.    This behaviour makes it very difficult (with exceedingly poor performance) to load dependent scripts dynamically - they must be loaded serially (explicitly so)  instead of in parallel.  There is no good reason why the scripts should not be loaded dynamically but executed in order.  Firefox demonstrates that this is so  and consequently is the far better performed browser for dynamically added dependent scripts.    <b>Please provide