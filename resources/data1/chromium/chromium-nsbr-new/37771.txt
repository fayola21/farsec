<title>Issue 37771 -   chromium -    sync shutdown crash - Project Hosting on Google Code</title> <pre> I'm seeing this crash a lot when stopping sync and I think it is causing   <a title="Chrome crashes when trying to close chrome after removing cookies." class=closed_ref href="/p/chromium/issues/detail?id=37712"> bug 37712 </a>  <a title="Chrome crashes when trying to close chrome window." class=closed_ref href="/p/chromium/issues/detail?id=37713"> bug 37713 </a>  and <a title="Chrome crashes when two clients click &quot;Stop syncing&quot; a few second apart." class=closed_ref href="/p/chromium/issues/detail?id=37469"> bug 37469 </a>.    Repro: 1) enable sync. 2) stop syncing or close chrome. kaboom.    talk_base::Thread::Current() returns Null and causes a null deref.    Stack trace:    &gt;	chrome.dll!notifier::TaskPump::WakeTasks()  Line 32 + 0x1a bytes	  C++   	chrome.dll!talk_base::Task::Wake()  Line 159 + 0x1a bytes	C++   	chrome.dll!buzz::XmppClient::Private::OnStateChange(int state=4)    Line 372	C++   	chrome.dll!buzz::XmppEngineImpl::EnterExit::~EnterExit()  Line 491   + 0x26 bytes	C++   	chrome.dll!buzz::XmppEngineImpl::Disconnect()  Line 300	C++   	chrome.dll!buzz::XmppClient::Disconnect()  Line 284 + 0x2a bytes	  C++   	chrome.dll!notifier::SingleLoginAttempt::ClearClient()  Line 438	  C++   	chrome.dll!notifier::SingleLoginAttempt::Stop()  Line 123	C++   	chrome.dll!talk_base::Task::Abort(bool nowake=false)  Line 148 +   0xf bytes	C++   	chrome.dll!notifier::Login::~Login()  Line 97	C++   	chrome.dll!notifier::Login::`scalar deleting destructor'()  + 0x16   bytes	C++   	  chrome.dll!scoped_ptr&lt;notifier::Login&gt;::~scoped_ptr&lt;notifier::Login&gt;()    Line 72 + 0x24 bytes	C++   	  chrome.dll!browser_sync::MediatorThreadImpl::~MediatorThreadImpl()    Line 36 + 0xe bytes	C++   	chrome.dll!browser_sync::MediatorThreadImpl::`scalar deleting   destructor'()  + 0x16 bytes	C++   	  chrome.dll!scoped_ptr&lt;browser_sync::MediatorThread&gt;::~scoped_ptr&lt;bro  wser_sync::MediatorThread&gt;()  Line 72 + 0x24 bytes	C++   	chrome.dll!browser_sync::TalkMediatorImpl::~TalkMediatorImpl()    Line 76 + 0x1c bytes	C++   	chrome.dll!browser_sync::TalkMediatorImpl::`scalar deleting   destructor'()  + 0x16 bytes	C++   	  chrome.dll!scoped_ptr&lt;browser_sync::TalkMediator&gt;::reset(browser_sync::  TalkMediator * p=0x00000000)  Line 81 + 0x24 bytes	C++   	chrome.dll!sync_api::SyncManager::SyncInternal::Shutdown()  Line   1490	C++   	chrome.dll!sync_api::SyncManager::Shutdown()  Line 1467	C++   	chrome.dll!browser_sync::SyncBackendHost::Core::DoShutdown(bool   sync_disabled=true)  Line 305	C++   	  chrome.dll!DispatchToMethod&lt;browser_sync::SyncBackendHost::Core void   (__thiscall   browser_sync::SyncBackendHost::Core::*)(bool) bool&gt;(browser_sync::SyncB  ackendHost::Core * obj=0x05200da0  void (bool)* method=0x602d5830    const Tuple1&lt;bool&gt; &amp; arg={...})  Line 422 + 0x12 bytes	C++   	  chrome.dll!RunnableMethod&lt;browser_sync::SyncBackendHost::Core void   (__thiscall browser_sync::SyncBackendHost::Core::*)(bool) Tuple1&lt;bool&gt;   &gt;::Run()  Line 290 + 0x1e bytes	C++   	chrome.dll!MessageLoop::RunTask(Task * task=0x077e9ea0)  Line   329 + 0xf bytes	C++   	chrome.dll!MessageLoop::DeferOrRunPendingTask(const   MessageLoop::PendingTask &amp; pending_task={...})  Line 340	C++   	chrome.dll!MessageLoop::DoWork()  Line 444 + 0xc bytes	C++   	  chrome.dll!base::MessagePumpDefault::Run(base::MessagePump::Delegate   * delegate=0x04dcfc1c)  Line 23 + 0xf bytes	C++   	chrome.dll!MessageLoop::RunInternal()  Line 205 + 0x2a bytes	  C++   	chrome.dll!MessageLoop::RunHandler()  Line 178	C++   	chrome.dll!MessageLoop::Run()  Line 156	C++   	chrome.dll!base::Thread::Run(MessageLoop *   message_loop=0x04dcfc1c)  Line 134	C++   	chrome.dll!base::Thread::ThreadMain()  Line 155 + 0x16 bytes	  C++    This started happening since the fix for <a title="messageloop DCHECK in GaiaAuth during shutdown" class=closed_ref href="/p/chromium/issues/detail?id=34158"> bug 34158 </a> added the call to   TalkMediator.reset in Shutdown.  I still think that is correct; but I don't   know why this is happening now.    Interesting to note is this stems from the destruction of the   TalkMediator's Login object.  But that gets destroyed by the call to   Logout() in syncapi.cc which is called right before .reset()... I don't know   where this other Login object comes from.   </pre>