<title>Issue 38898 -   chromium -    NP_Initialize() - NP_GetEntryPoints() sequence is different and not platform independent. - Project Hosting on Google Code</title> <pre> Chrome Version       : 5.0.359.0 (42181)    When making a Pepper plugin (which is supposed to be platform-independent)  I have to have   platform-dependent #ifdefs in my code to conditionally compile for various OSes.  For example:    #if defined(__native_client__) || defined(OS_LINUX)  NPError NP_Initialize(NPNetscapeFuncs* browser_funcs                         NPPluginFuncs* plugin_funcs) {    NPError np_err = NP_GetEntryPoints(plugin_funcs);    if (NPERR_NO_ERROR == np_err)      pglInitialize();    return np_err;  }  #elif defined(OS_MACOSX)  NPError NP_Initialize(NPNetscapeFuncs* browser_functions) {    extern void InitializeBrowserFunctions(NPNetscapeFuncs* browser_functions);    InitializeBrowserFunctions(browser_functions);    pglInitialize();    return NPERR_NO_ERROR;  }  #elif defined(OS_WIN)  NPError NP_Initialize(NPNetscapeFuncs* browser_functions) {    extern void InitializeBrowserFunctions(NPNetscapeFuncs* browser_functions);    InitializeBrowserFunctions(browser_functions);    pglInitialize();    return NPERR_NO_ERROR;  }  #else  #error &quot;Unrecognized platform&quot;  #endif    This is not really &quot;Platform Independent&quot;.    Chrome detects that it has a Pepper plugin (see RenderView::CreatePluginDelegate() in   render_view.cc).  Can we use that information to unify the startup API calls?    Also  is it possible to put the MIME type of the plugin into a special text section of the .so on   Linux  instead of having more platform-dependent API calls (NP_GetMIMEType())?   </pre>