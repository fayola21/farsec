<title>Issue 29815 -   chromium -    SSLClientSocketNSS::Write does not write all the encrypted data if the circular buffer wraps around - Project Hosting on Google Code</title> <pre> SSLClientSocketNSS::Write does most of the work in the DoWriteLoop() call.    SSLClientSocketNSS::DoWriteLoop contains this loop:      bool network_moved;    int rv;    do {      rv = DoPayloadWrite();      network_moved = DoTransportIO();    } while (rv == ERR_IO_PENDING &amp;&amp; network_moved);    If DoPayloadWrite() returns a positive byte count (say 1234)  we will  exit the do-while loop after the DoTransportIO() call.    DoTransportIO() calls BufferSend() and BufferRecv().  BufferSend()  calls memio_GetWriteParams() to get the contiguous data from the  memio buffer and then calls transport_-&gt;Write().    Since the memio buffer is a circular buffer  if the data wraps around   it'll have two contiguous parts of data.  So under the condition I  described above  SSLClientSocketNSS::DoWriteLoop will only write the  first part.    Since the second part of data in the memio buffer isn't lost  it'll be  sent the next time we call SSLClientSocketNSS::Read or  SSLClientSocketNSS::Write.  (SSLClientSocketNSS::Read also calls  DoTransportIO  which calls BufferSend.)  This is why we are only seeing  this bug with SPDY  because in SPDY we issue a Read first (and let it  stay in the ERR_IO_PENDING state) before we write the request to the  server. </pre>