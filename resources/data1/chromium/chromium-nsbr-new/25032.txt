<title>Issue 25032 -   chromium -    Settle the use of 0 or ERR_CONNECTION_CLOSED for EOF (end of file  connection  stream) - Project Hosting on Google Code</title> <pre> Conventionally  read returns 0 when it reaches the end of file.  This convention has been extended to network sockets and I/O  stream abstractions.  For brevity  I use EOF to broadly mean  end of file  connection  or stream in this bug.    In some cases  the 0 return value could be ambiguous  as we  may have stopped reading because of some other reason.  A good  example is an HTTP keep-alive connection -- we stop reading  when we have reached the end of the response  but the underlying  connection is still open (keep-alive).  We've used bool members  such as reading_body_from_socket_ (http_network_transaction.cc)  and ignore_ok_result_ (ssl_client_socket_win.cc) to help  disambiguate 0  but an error code to indicate EOF is an obvious  alternative solution.    We already have an error code  ERR_CONNECTION_CLOSED  that  apparently means EOF.  It has been used in three places.    1. ERR_CONNECTION_CLOSED was originally added by Darin to map  the Winsock socket error WSAEDISCON.  I objected to this error  code during code review  but we settled on a NOTREACHED()  assertion.  See this error mapping code in tcp_client_socket_win.cc:        case WSAEDISCON:        // Returned by WSARecv or WSARecvFrom for message-oriented sockets   (where        // a return value of zero means a zero-byte message) to indicate   graceful        // connection shutdown.  We should not ever see this error code for   TCP        // sockets  which are byte stream oriented.        NOTREACHED();        return ERR_CONNECTION_CLOSED;    2. In a layered protocol such as SSL and SOCKS that has a proper  connection close sequence  ERR_CONNECTION_CLOSED could be used to  report that the underlying connection closed unexpectedly.  Arindam  uses ERR_CONNECTION_CLOSED this way in socks_client_socket.cc and  socks5_client_socket.cc.  We could use ERR_CONNECTION_CLOSED this  way in SSL (see <a title="Add an error code for SSL connection closure without a close_notify alert"  href="/p/chromium/issues/detail?id=18586">issue 18586</a>).    3. Steve would like to use ERR_CONNECTION_CLOSED in HTTP streams  (see <a href="http://codereview.chromium.org/249031">http://codereview.chromium.org/249031</a>).    The purpose of this bug is to study this issue  make sure our  network stack is using 0  ERR_CONNECTION_CLOSED  or some new  error code for EOF appropriately  and document the meaning of  ERR_CONNECTION_CLOSED that we agree on in net_error_list.h.    Considerations:    1. The convention of using 0 to report EOF is widely used.  Where we deviate from this convention  we should document  it.  In the interfaces more visible to users of the network  stack  we should try to preserve this convention.    2. In ssl_client_socket_win.cc and http_network_transaction.cc   0 could also be disambiguated by refactoring the read and  read-complete states. </pre>