<title>Issue 23437 -   chromium -    Invalid read in pthread_mutex_lock in OCSPRequestSession::Cancel() in TabRestoreUITest.RestoreWindow - Project Hosting on Google Code</title> <pre> I ran the ui tests in valgrind for five days straight  as of <a href="/p/chromium/source/detail?r=26941">r26941</a> on linux.  Out of at least twenty full runs   and maybe lots more  I got exactly one invalid read error:    Command: /usr/local/google/bigdout/Debug/chrome --no-first-run --no-default-browser-check --enable-file-cookies --testing-channel=ChromeTestingInterface:24416.1 --homepage=about:blank --disable-web-resources --user-data-dir=/tmp/org.chromium.NuZzUv/test_user_data --metrics-recording-only --enable-logging --test-name=TabRestoreUITest.RestoreWindow  Invalid read of size 4    pthread_mutex_lock (/lib32/libpthread-2.7.so)    LockImpl::Lock() (base/lock_impl_posix.cc:41)    Lock::Acquire() (./base/lock.h:16)    AutoLock::AutoLock(Lock&amp;) (./base/lock.h:43)    MessageLoop::PostTask_Helper(tracked_objects::Location const&amp;  Task*    long long  bool) (base/message_loop.cc:271)    MessageLoop::PostTask(tracked_objects::Location const&amp;  Task*)   (base/message_loop.cc:232)    (anonymous namespace)::OCSPRequestSession::Cancel()   (net/ocsp/nss_ocsp.cc:129)    (anonymous namespace)::OCSPFree(void*) (net/ocsp/nss_ocsp.cc:485)    0xE330ED3 (/usr/lib32/libnss3.so.1d)    0xE33AD67 (/usr/lib32/libnss3.so.1d)    0xE2E1339 (/usr/lib32/libnss3.so.1d)    0xE2E201F (/usr/lib32/libnss3.so.1d)    0xE2FA8DC (/usr/lib32/libnss3.so.1d)    0xE2FE526 (/usr/lib32/libnss3.so.1d)    0xE2FF5A6 (/usr/lib32/libnss3.so.1d)    0xE304547 (/usr/lib32/libnss3.so.1d)    0xE3065B5 (/usr/lib32/libnss3.so.1d)    CERT_PKIXVerifyCert (/usr/lib32/libnss3.so.1d)    net::(anonymous namespace)::PKIXVerifyCert(CERTCertificateStr*    SECOidTag const*  int  CERTValOutParam*)   (net/base/x509_certificate_nss.cc:438)    net::X509Certificate::Verify(std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; const&amp;  int    net::CertVerifyResult*) const (net/base/x509_certificate_nss.cc:543)    net::CertVerifier::Request::DoVerify() (net/base/cert_verifier.cc:42)    The stack looks similar  up to a point  to   http://crash/reportdetail?reportid=4429c30090f3aae1    So  looks very hard to reproduce  but possibly happening in the field  occasionally.  Filing on the off chance somebody can make sense of this given the log. </pre>