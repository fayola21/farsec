<title>Issue 39867 -   chromium -    Webkit called while not yet initialized- probable race - Project Hosting on Google Code</title> <pre> I was just starting up my browser under the debugger  and I hit the   following null-pointer exception.      The call was made to currentTime() in WebKit.cpp  as shown below  but   WebKit::webKitClient() is still NULL.    double currentTime()  {      return WebKit::webKitClient()-&gt;currentTime();  }    Here is the stack trace.       	chrome.dll!WTF::currentTime()  Line 41 + 0xb bytes	C++   	chrome.dll!WebCore::generateDocumentSequenceNumber()  Line 44 +   0x1e bytes	C++   	chrome.dll!WebCore::HistoryItem::HistoryItem()  Line 61 + 0xde   bytes	C++   	chrome.dll!WebCore::HistoryItem::create()  Line 73 + 0x32 bytes	C++   	chrome.dll!WebKit::WebHistoryItem::initialize()  Line 50 + 0x9   bytes	C++   	chrome.dll!webkit_glue::ReadHistoryItem(const   webkit_glue::SerializeObject * obj=0x0029cf04  bool   include_form_data=false)  Line 337	C++   	chrome.dll!webkit_glue::HistoryItemFromString(const   std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; &amp;   serialized_item=&quot;p&quot;  bool include_form_data=false)  Line 402 + 0x12 bytes	  C++   	chrome.dll!webkit_glue::RemoveFormDataFromHistoryState(const   std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; &amp;   content_state=&quot;p&quot;)  Line 444 + 0xf bytes	C++   	chrome.dll!BaseSessionService::CreateUpdateTabNavigationCommand(int   command_id=6  int tab_id=27  int index=1  const NavigationEntry &amp;   entry={...})  Line 166 + 0x12 bytes	C++   	chrome.dll!SessionService::BuildCommandsForTab(const SessionID &amp;   window_id={...}  NavigationController * controller=0x050d35c0  int   index_in_window=-1  bool is_pinned=false  std::vector&lt;SessionCommand   * std::allocator&lt;SessionCommand *&gt; &gt; * commands=[54](0x00dd1e10 {id_='	'   contents_=&quot;&quot; } 0x00d8b150 {id_='  ' contents_=&quot;&quot; } 0x00d8b8d0 {id_=0 contents_=&quot;&quot; } 0x00d8b8a0 {id_=''   contents_=&quot;&quot; } 0x00d8b870 {id_='' contents_=&quot;&quot; } 0x00d8b810 {id_=0   contents_=&quot;&quot; } 0x00d8b7b0 {id_='' contents_=&quot;L&quot; } 0x00d8b780 {id_=''   contents_=&quot;ï¿½ï¿½_ï¿½ï¿½_&quot; } 0x00d8b750 {id_='' contents_=&quot;&quot; } 0x00d8bfc0 {id_=''   contents_=&quot;ï¿½ï¿½_ï¿½ï¿½_	&quot; } 0x00d8b7e0 {id_='' contents_=&quot;|  ...)    std::map&lt;int std::pair&lt;int int&gt; std::less&lt;int&gt; std::allocator&lt;std::pair&lt;int   const  std::pair&lt;int int&gt; &gt; &gt; &gt; * tab_to_available_range=[...]())  Line   1042 + 0x22 bytes	C++   	chrome.dll!SessionService::TabRestored(NavigationController *   controller=0x050d35c0  bool pinned=false)  Line 356	C++   	chrome.dll!Browser::AddRestoredTab(const   std::vector&lt;TabNavigation std::allocator&lt;TabNavigation&gt; &gt; &amp;   navigations=[4]({url_={...} referrer_={...} title_=&quot;SAML Response&quot;   ...} {url_={...} referrer_={...} title_=&quot;This service cannot be accessed   because your login credentials have expired. Please log in and try again.&quot;   ...} {url_={...} referrer_={...} title_=&quot;jar - PDB Profile&quot;   ...} {url_={...} referrer_={...} title_=&quot;&quot; ...})  int tab_index=5  int   selected_navigation=3  const   std::basic_string&lt;char std::char_traits&lt;char&gt; std::allocator&lt;char&gt; &gt; &amp;   app_extension_id=&quot;&quot;  bool select=false  bool pin=false  bool   from_last_session=true)  Line 806	C++   	chrome.dll!`anonymous   namespace'::SessionRestoreImpl::RestoreTabsToBrowser(const SessionWindow &amp;   window={...}  Browser * browser=0x00d33800)  Line 404 + 0x42 bytes	C++   	chrome.dll!`anonymous   namespace'::SessionRestoreImpl::ProcessSessionWindows(std::vector&lt;SessionWi  ndow * std::allocator&lt;SessionWindow *&gt; &gt; * windows=[1](0x0445f940   {window_id={...} bounds={...} selected_tab_index=6 ...}))  Line 367	C++   	chrome.dll!`anonymous namespace'::SessionRestoreImpl::Restore()    Line 202	C++   	chrome.dll!Restore(Profile * profile=0x00d6e280  Browser *   browser=0x00000000  bool synchronous=true  bool   clobber_existing_window=false  bool always_create_tabbed_browser=true    const std::vector&lt;GURL std::allocator&lt;GURL&gt; &gt; &amp; urls_to_open=[0]())  Line   512	C++   	chrome.dll!SessionRestore::RestoreSessionSynchronously(Profile *   profile=0x00d6e280  const std::vector&lt;GURL std::allocator&lt;GURL&gt; &gt; &amp;   urls_to_open=[0]())  Line 528 + 0x15 bytes	C++   	chrome.dll!BrowserInit::LaunchWithProfile::OpenStartupURLs(const   std::vector&lt;GURL std::allocator&lt;GURL&gt; &gt; &amp; urls_to_open=[0]())  Line 636 +   0x10 bytes	C++   	chrome.dll!BrowserInit::LaunchWithProfile::Launch(Profile *   profile=0x00d6e280  bool process_startup=true)  Line 492 + 0x14 bytes	C++   	chrome.dll!BrowserInit::LaunchBrowser(const CommandLine &amp;   command_line={...}  Profile * profile=0x00d6e280  const   std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt;   &gt; &amp; cur_dir=&quot;&quot;  bool process_startup=true  int * return_code=0x0029ece4)    Line 383 + 0x11 bytes	C++   	chrome.dll!BrowserInit::ProcessCmdLineImpl(const CommandLine &amp;   command_line={...}  const   std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt;   &gt; &amp; cur_dir=&quot;&quot;  bool process_startup=true  Profile * profile=0x00d6e280    int * return_code=0x0029ece4  BrowserInit * browser_init=0x0029eef4)  Line   983 + 0x1d bytes	C++   	chrome.dll!BrowserInit::Start(const CommandLine &amp; cmd_line={...}    const   std::basic_string&lt;wchar_t std::char_traits&lt;wchar_t&gt; std::allocator&lt;wchar_t&gt;   &gt; &amp; cur_dir=&quot;&quot;  Profile * profile=0x00d6e280  int * return_code=0x0029ece4)    Line 40 + 0x1b bytes	C++  &gt;	chrome.dll!BrowserMain(const MainFunctionParams &amp; parameters={...})    Line 1061 + 0x29 bytes	C++   	chrome.dll!ChromeMain(HINSTANCE__ * instance=0x01020000    sandbox::SandboxInterfaceInfo * sandbox_info=0x0029f998  wchar_t *   command_line=0x00582e34)  Line 807 + 0xc bytes	C++   	chrome.exe!MainDllLoader::Launch(HINSTANCE__ * instance=0x01020000    sandbox::SandboxInterfaceInfo * sbox_info=0x0029f998)  Line 195 + 0x1d   bytes	C++   	chrome.exe!wWinMain(HINSTANCE__ * instance=0x01020000  HINSTANCE__   * __formal=0x00000000  HINSTANCE__ * __formal=0x00000000  HINSTANCE__ *   __formal=0x00000000)  Line 48 + 0x10 bytes	C++   	chrome.exe!__tmainCRTStartup()  Line 263 + 0x2c bytes	C   	chrome.exe!wWinMainCRTStartup()  Line 182	C   	kernel32.dll!762de4a5() 	   	[Frames below may be incorrect and/or missing  no symbols loaded   for kernel32.dll]	   	ntdll.dll!76fdcfed() 	   	ntdll.dll!76fdd1ff() 	   </pre>