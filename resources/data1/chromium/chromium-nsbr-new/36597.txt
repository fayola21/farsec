<title>Issue 36597 -   chromium -    Add a partial-match SocketDataProvider for unit tests - Project Hosting on Google Code</title> <pre> StaticSocketDataProvider is pretty useful in unit tests to set up expected   writes and server responses to those writes.    However  it would be nice to be able to escape some of the &quot;expected write&quot;   and skip matching. For example  it would be nice to do something like    MockWrite writes[] = {    MockWrite(&quot;GET /HTTP/1.1rn&quot;              &quot;Host: %hostname%rn&quot;              &quot;Connection: keep-alivern&quot;)   };  PartialSocketDataProvider data1(reads  arraysize(reads)                                   writes  arraysize(writes));    And then any hostname would match. The matching algorithm could restrict to   within-a-line to make easier.    The concrete case which spurred this was that I was writing a unit tests   which switched between Basic and Digest auth schemes to validate that the   original Basic auth credentials were evicted from the HttpAuthCache when   presented with the Digest challenge. It's difficult to specify the response   to the challenge in a deterministic fashion due to the cnonce which is   generated. In this case  I don't care about the cnonce and the response   values in the Digest auth challenge response  and I'd prefer to wildcard   them over mocking out the digest auth handler or overriding how the cnonce   is generated.     I have a workaround for this specific case. If more cases come up like   this  it might be worth putting in the effort to add a partial maching   SocketDataProvider. </pre>