<title>Issue 26399 -   chromium -    Our thing is broken on Snow Leopard - Project Hosting on Google Code</title> <pre>   1. Launch      Expect: application  Observe: crash      Cause: <a href="/p/chromium/source/detail?r=30647">r30647</a>  <a title="Crash : -[ChromeEventProcessingWindow shortcircuitEvent:]" class=closed_ref href="/p/chromium/issues/detail?id=25857"> bug 25857 </a>  <a href="http://codereview.chromium.org/343024">http://codereview.chromium.org/343024</a>    --    Not really working...    We're pretty much entirely broken on Snow Leopard now.    First  I found that +[MessagePumpNSAppDeferredAutoreleasePool alloc]  was returning objects of type NSAutoreleasePool  as evidenced by:    2009-10-30 21:28:03.204 base_unittests[27990:903] -  [NSAutoreleasePool  initWithPump:]: unrecognized selector sent to instance 0x1231b80    So I stuck this into DeferredAutoreleasePool:    + (id)allocWithZone:(NSZone*)zone {   return NSAllocateObject(self  0  zone);  }    and promptly started crashing thusly:    Program received signal EXC_BAD_ACCESS  Could not access memory.  Reason: KERN_PROTECTION_FAILURE at address: 0x0000009e  0x0018a88d in   base::MessagePumpNSApplication::set_needs_event_loop_wake_up_true  (this=0x45) at message_pump_mac.h:257  257         needs_event_loop_wake_up_ = true;  (gdb) bt  #0  0x0018a88d in  base::MessagePumpNSApplication::set_needs_event_loop_wake_up_true  (this=0x45) at message_pump_mac.h:257  #1  0x001882e1 in base::SetNeedsEventLoopWakeUpTrue (pump=0x45) at  /chrome/trunk/src/base/message_pump_mac.mm:841  #2  0x001883f5 in -[MessagePumpNSAppDeferredAutoreleasePool drain]  (self=0x140d910  _cmd=0x90f9a8d4) at  /chrome/trunk/src/base/message_pump_mac.mm:921  #3  0x9078075b in -[NSApplication run] ()  #4  0x00188a82 in base::MessagePumpNSApplication::DoRun  (this=0x1229410  delegate=0xbffff4d4) at  /chrome/trunk/src/base/message_pump_mac.mm:685    0x45 is the special value I set pump_ to in  -[MessagePumpNSAppDeferredAutoreleasePool drain] to verify what was  going on.    And hey  how did NSApplication get a hold of a  MessagePumpNSAppDeferredAutoreleasePool?    NSAutoreleasePool on Snow Leopard is maintaining its own cache of  NSAutoreleasePool objects  and is doling them out via +alloc.    This is so frustrating.  I tried this yesterday on Snow Leopard  specifically to see if it would recycle pools  and it didn't seem to. </pre>