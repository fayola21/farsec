<title>Issue 32872 -   chromium -    flaky leak of ExtensionsActivityService in chromiumos valgrind ui_test - Project Hosting on Google Code</title> <pre> It looks like this leak occurs for a different test each time (the --test_name   parameter keeps changing)  but the stack trace looks like     operator new(unsigned int) (ome/chrome-bot/valgrind-10880-  redzone/coregrind/m_replacemalloc/vg_replace_malloc.c:228)      browser_sync::sessions::SyncSessionContext::SyncSessionContext(browser_  sync::ServerConnectionManager*  syncable::DirectoryManager*    browser_sync::ModelSafeWorkerRegistrar*)   (chrome/browser/sync/sessions/sync_session_context.h:52)    sync_api::SyncManager::SyncInternal::Init(FilePath const&amp;    std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;   const&amp;  int  char const*  char const*  bool    sync_api::HttpPostProviderFactory*  sync_api::HttpPostProviderFactory*    browser_sync::ModelSafeWorkerRegistrar*  bool  char const*    std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;   const&amp;) (chrome/browser/sync/engine/syncapi.cc:1154)    sync_api::SyncManager::Init(FilePath const&amp;  char const*  int  char const*    char const*  bool  sync_api::HttpPostProviderFactory*    sync_api::HttpPostProviderFactory*    browser_sync::ModelSafeWorkerRegistrar*  bool  char const*  char const*)   (chrome/browser/sync/engine/syncapi.cc:1050)    browser_sync::SyncBackendHost::Core::DoInitialize(GURL const&amp;  bool    sync_api::HttpPostProviderFactory*  sync_api::HttpPostProviderFactory*    std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;   const&amp;) (chrome/browser/sync/glue/sync_backend_host.cc:232)    void DispatchToMethod&lt;browser_sync::SyncBackendHost::Core  void   (browser_sync::SyncBackendHost::Core::*)(GURL const&amp;  bool    sync_api::HttpPostProviderFactory*  sync_api::HttpPostProviderFactory*    std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;   const&amp;)  GURL  bool  browser_sync::HttpBridgeFactory*    browser_sync::HttpBridgeFactory*  std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;   &gt;(browser_sync::SyncBackendHost::Core*  void   (browser_sync::SyncBackendHost::Core::*)(GURL const&amp;  bool    sync_api::HttpPostProviderFactory*  sync_api::HttpPostProviderFactory*    std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;   const&amp;)  Tuple5&lt;GURL  bool  browser_sync::HttpBridgeFactory*    browser_sync::HttpBridgeFactory*  std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; &gt; const&amp;)   (base/tuple.h:447)    RunnableMethod&lt;browser_sync::SyncBackendHost::Core  void   (browser_sync::SyncBackendHost::Core::*)(GURL const&amp;  bool    sync_api::HttpPostProviderFactory*  sync_api::HttpPostProviderFactory*    std::basic_string&lt;char  std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt;   const&amp;)  Tuple5&lt;GURL  bool  browser_sync::HttpBridgeFactory*    browser_sync::HttpBridgeFactory*  std::basic_string&lt;char    std::char_traits&lt;char&gt;  std::allocator&lt;char&gt; &gt; &gt; &gt;::Run()   (base/task.h:289)    MessageLoop::RunTask(Task*) (base/message_loop.cc:320)      I believe this is due to code in sync_session_context.h that does:    if (!ChromeThread::DeleteSoon(UI  FROM_HERE    extensions_activity_monitor_) {    delete extensions_activity_monitor_;  }    where in some cases  the UI loop exists but is not running.  I have seen this   pattern in other files  not sure why they aren't leaking as well (or maybe   they have suppressions filed).  I think DeleteOnUIThread traits could yield   the same behavior because of the DeleteSoon call.  Also not totally sure   how to install that in this case  the object isn't refcounted.    So in short I'm not sure what to do  but I'm pretty sure this only affects   tests. And for some reason  only chromiumos. </pre>