<title>Issue 30110 -   chromium -    TCMallocGuard leaks memory under Valgrind. - Project Hosting on Google Code</title> <pre> When a tcmalloc-enabled binary is ran under Valgrind  the following leak is  usually reported:    ================================================    operator new(unsigned long)  (um/src/tools/valgrind/valgrind-10880-redzone/coregrind/m_replacemalloc/vg_replace_malloc.c:226)    TCMallocGuard::TCMallocGuard()  (third_party/tcmalloc/chromium/src/tcmalloc_linux.cc:692)    __static_initialization_and_destruction_0(int  int)  (third_party/tcmalloc/chromium/src/tcmalloc_linux.cc:707)    global constructors keyed to  _ZN61FLAG__namespace_do_not_use_directly_use_DECLARE_int64_instead43FLAGS_tcmalloc_large_alloc_report_thresholdE  (third_party/tcmalloc/chromium/src/tcmalloc_linux.cc:1417)    0xD3B8B9 (/usr/local/google/chrome-commit/src/sconsbuild/Debug/net_unittests)    0x57A78A (/usr/local/google/chrome-commit/src/sconsbuild/Debug/net_unittests)    0x302F ()    __libc_csu_init  (/usr/local/google/chrome-commit/src/sconsbuild/Debug/net_unittests)    (below main) (/lib/libc-2.7.so)  ================================================    This is because TCMallocGuard::TCMallocGuard calls  MallocExtension::Register(new TCMallocImplementation)  whereas this method  may ignore its parameter when ran under Valgrind:    ================================================  void MallocExtension::Register(MallocExtension* implementation) {    perftools_pthread_once(&amp;module_init  InitModule);    // When running under valgrind  our custom malloc is replaced with    // valgrind's one and malloc extensions will not work.    if (!RunningOnValgrind()) {      current_instance = implementation;    }  }  ================================================    This leak shouldn't affect the program behavior heavily and could be  suppressed until we fix that in tcmalloc. </pre>