<title>Issue 31925 -   chromium -    Support for multiple ModelSafeWorkers - Project Hosting on Google Code</title> <pre> We'll need to store and use several of these MSWs in the   SyncSessionContext.    Additionally  any time we want to open a WriteTransaction from within the   sync engine (everything below syncapi)  we want to prevent modifications   of data types that aren't on a &quot;safe&quot; thread.  One way to do this is to   require passing (to the wtrans ctor) the current ModelSafeWorker*  and   have a method on the MSW interface to tell you which types it services and   are safe on the thread (maybe a mask).  This way  whenever a MutableEntry   is Initialized  we can compare the type of the entry with the legal types in   the WriteTransaction  and if they don't match  null-out the EntryKernel.    Having that &quot;which types are safe&quot; method on the MSW would also help us   implementing the multiple pass filtering described in <a title="SyncerCommands need to make separate passes over data items for each model thread" class=closed_ref href="/p/chromium/issues/detail?id=31911"> issue 31911 </a>.       </pre>