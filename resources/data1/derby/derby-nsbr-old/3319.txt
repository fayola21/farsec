Logical connections do not check if a transaction is active on close    If you call close on a logical connection  for instance as obtained through a PooledConnection  it does not check if there is an active transaction.The close of the logical connection is allowed  and even the close of the parent PooledConnection is allowed in the client driver. This can/will cause resources to be left on the server  and later operations might fail (typically with lock timeouts because the 'closed' transaction is still holding locks).I do not know if gc will solve this eventually  but I would say the current behavior of the client driver is wrong in any case.There is difference in the behavior between the embedded and the client driver  and there also seems to be a bug in the embedded driver.The analysis above is a bit sketchy  so it might be required to look into the issue a bit more...I will attach a repro (JDBC usage should be verified as well  is it legal / as intended?)   