Change some boundary checks in ArrayInputStream to ASSERTs to improve performance    Profiling shows that a significant amount of CPU is spent doing boundary checking in ArrayInputStream.setPosition() and ArrayInputStream.setLimit(). These checks appear to be there to detect error conditions  so it seems more appropriate to make them ASSERTs. Especially since they are so expensive.DTrace analysis seems to confirm that these methods get called very frequently:Knut Anders Hatlen wrote the following in a message on derby-dev:FYI  I just ran the DERBY-1961 test clients and traced them with aDTrace script that printed how often each method was called. For thejoin client  ArrayInputStream.setPosition() was the most frequentlycalled method (43837.7 calls/tx). For the single-record select client it was third (58.4 calls/tx)  only beaten by Object.&lt;init&gt;() andDDMWriter.ensureLength(). I think this means that setPosition() is theengine method that is most frequently called  at least in read-mostlytransactions. ArrayInputStream.setLimit() also appeared near the topof the list. See http://wiki.apache.org/db-derby/Derby1961MethodCallsfor the details.   