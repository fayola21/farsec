Move the setup of NormalizeResultSetNode into the NormalizeResultSetNode    In DERBY-3310 Dan suggested ...Setting up a NormalizeResultSetNode is spread over three locations  the class itself (very little  it's almost acting like a C struct) the genNormalizeResultSetNode method and then copyLengthsAndTypesToSource. A good O-O implementation would havethe logic to create a NormalizeResultSetNode self-contained in NormalizeResultSetNode.Since the ResultColumnList of the original ResultSetNode correctly describes the desired outcome  it's not clear tome why NormalizeResultSetNode can't just refer to the same list and use it for its processing. They may be some chancethat this would cause recursion at some point  where a NormalizeResultSetNode would think it needed to be wrappedin a NormalizeResultSetNode since the types of its columns and expression don't match (i.e. when it is handled as a regular ResultSetNode).I think moving the setup of a NormalizeResultSetNode into the class itself  so that its inputs are just the ResultSetNode to wrapwould help clear up the code  especially if comments were added indicating why certain actions were being taken.I am separating this task out into a separate issue  so that it can be worked on independently of DERBY-3310.   