BaseTestCase.execJavaCmd() does not work with weme 6.2    Spawning a java process with BaseTestCase.execJavaCmd() does not work with weme 6.2  I think because the boot classpath does not get passed. This issue came up in DERBY-4179. After this issue is fixed  BootLockTest should be enabled for weme.The error is actually.JVMJ9VM011W Unable to load jclfoun10_24: The specified module could not be found.JVMEXEX013E Internal VM error: Failed to create Java VMJVMEXEX014I Run C:/cygwin/ibmsvn/ntsoftware/weme6.2/bin/j9.exe -help for usageexecJavaProcess does pick up the j9 executable but does not pass on the other settings.This is how my script invokes the test with j9. It probably has a lot of legacy system properties not needed  but I suppose execJavaCmd should just pass along all system properties  but I don't know how it would get the bootclasspath. Perhaps -Dbootcp was a way to pass it on in the old harness.c:/cygwin/ibmsvn/ntsoftware/weme6.2/bin/j9 -jcl:foun11 -DderbyTesting.serverhost=localhost -DderbyTesting.clienthost=localhost -Demma.active= -Xbootclasspath/a:c:/cygwin/ibmsvn/ntsoftware/weme6.2/lib/jdbc.jar -Dbootcp=c:/cygwin/ibmsvn/ntsoftware/weme6.2/lib/jdbc.jar junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.store.BootLockTest Otherwise  currently I think the method is only used in replication and network server  but am not sure.   