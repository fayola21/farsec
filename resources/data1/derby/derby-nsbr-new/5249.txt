A table created with 10.0.2.1 with constraints cannot be dropped with 10.5 due to NullPointerException with insane build or ASSERT FAILED Failed to find sharable conglomerate descriptor for index conglomerate  with sane build    In 10.0.2.1 there was some bug that caused a duplicate entry in sys.sysconglomerates.After running the attached repro_create.sql with 10.0.2.1  you will see two rows returned instead of one with:select c.constraintname  c.constraintid  cong.conglomerateid  cong.conglomeratename from sys.sysconglomerates cong  sys.syskeys k  sys.sysconstraints c where c.constraintname = 'PK_RS' and c.constraintid =k.constraintid and k.conglomerateid = cong.conglomerateid ;I am not sure what practical impact this has with 10.0 as you can still drop the table s.rs with that version.On connecting to the database with 10.5  either soft or hard upgrade with 10.5.3.2 - 1103924DROP TABLE S.RS fails with:Caused by: java.sql.SQLException: Java exception: 'ASSERT FAILED Failed to findsharable conglomerate descriptor for index conglomerate # 785: org.apache.derby.shared.common.sanity.AssertFailure'. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45) at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119) at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70) ... 17 moreCaused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED Failed to find sharable conglomerate descriptor for index conglomerate # 785 at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162) at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147) at org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor.describeSharedConglomerate(ConglomerateDescriptor.java:638) at org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor.drop(ConglomerateDescriptor.java:428) at org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor.drop(ConstraintDescriptor.java:738) at org.apache.derby.impl.sql.execute.DDLSingleTableConstantAction.dropConstraint(DDLSingleTableConstantAction.java:144) at org.apache.derby.impl.sql.execute.DDLSingleTableConstantAction.dropConstraint(DDLSingleTableConstantAction.java:107) at org.apache.derby.impl.sql.execute.DropTableConstantAction.dropAllConstraintDescriptors(DropTableConstantAction.java:315) at org.apache.derby.impl.sql.execute.DropTableConstantAction.executeConstantAction(DropTableConstantAction.java:222) at org.apache.derby.impl.sql.execute.MiscResultSet.open(MiscResultSet.java:61) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:416) at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:297) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235) ... 10 moreand with an insane build with a NullPointerException:java.lang.NullPointerException  at  org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor.drop(Unknown  Source)  at  org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor.drop(Unknown  Source)  at  org.apache.derby.impl.sql.execute.DDLSingleTableConstantAction.dropConst  raint(Unknown Source)  at  org.apache.derby.impl.sql.execute.DDLSingleTableConstantAction.dropConst  raint(Unknown Source)  at  org.apache.derby.impl.sql.execute.DropTableConstantAction.dropAllConstra  intDescriptors(Unknown Source)  at  org.apache.derby.impl.sql.execute.DropTableConstantAction.executeConstan  tAction(Unknown Source)  at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown  Source)  at  org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown  Source)  at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown  Source)  at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown  Source)  at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)  at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(Unknown  Source) Still need to figure out the exact versions affected  when the dup row was fixed  and when the drop stopped working.To reproduce connect to a database with 10.0.2.1 (can be accessed at http://svn.apache.org/repos/asf/db/derby/jars/10.0.2.1)run the attached script repro_create.sql;connect with the latest on the trunk or 10.5 branchDROP TABLE S.RS;The table will not drop. The work around is to drop the table with the old version 10.0.2.1   