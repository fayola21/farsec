Race conditions in LogicalConnection checking for a null physical connection    There are race conditions with checkForNullPhysicalConnection calls in LogicalConnection. checkForNullPhysicalConnection is not synchronized and it checks for the member 'phsyicalConnection' which can be cleared by 'nullPhsyicalConnection' (which is synchronized) and 'close' (which is synchronized) and 'closeWithoutRecyclingToPool' (which is synchronized).This affects 'nativeSQL'  'getAutoCommit'  'getTransactionIsolation'  'getWarnings'  'isReadOnly'  'getCatalog'  'getTypeMap'  'createStatement'  'prepareCall'  'prepareStatement'  'setHoldability'  'getHoldability'  'setSavePoint'  'rollBack'  'releaseSavePoint'  'getSchema'  'setSchema'.All of these call 'checkForNullPhysicalConnection' and then use the member 'physicalConnection' after that call returns. Because these methods are not synchronized  between the time 'checkForNullPhysicalConnectoin' returns and 'physicalConnection' is used  the 'physicalConnection' member could be set to null and then a NPE occurs.Probably all of these methods should be changed to synchronized.   