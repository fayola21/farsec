Derby threads hanging when using ClientXADataSource and a deadlock or lock timeout occurs    The issue arrives when multiple XA transactions are done in parallel and there is either a lock timeout or a lock deadlock detected. When this happens the connection is leaked in the Glassfish connection pool and the client thread hangs in 'org.apache.derby.client.netReply.fill(Reply.java:172)'. Shutting down the app server fails because the thread has a lock in 'org.apache.derby.client.net.NetConnection40' and another task is calling 'org.apache.derby.client.ClientPooledConnection.close(ClientPooledConnection.java:214)' which is waiting for the lock.Killing the appsever using 'kill' and then attempting to shutdown Derby network server causes the Network Server to hang. One of the threads hangs waiting for a lock at 'org.apache.derby.impl.drda.NeworkServerControlImpl.removeFromSessionTable(NetworkServerControlImpl.java:1525)' and the 'main' thread has this locked at 'org.apache.derby.impl.drda.NetworkServerControlImpl.executeWork(NetworkServerControlImpl.java:2242)' and it itself is waiting for a lock which belongs to a thread that is stuck at 'org.apache.derby.impl.services.locks.ActiveLock.waitForGrant(ActiveLock.java:118) which is in the TIMED_WAITING state.Only by killing the Network Server using 'kill' is possible at this point.There are transactions left even though all clients have been removed.   