cursor closed as a sideeffect of closing another cursor with the same name on another connection    I was writing some tests for the Scrollable updatable ResultSet feature  and found some tests failing with ERROR XCL07: Cursor 'SQLCUR0' is closed. Verify that autocommit is OFF.in ResultSet.updateRow(). The test does the following:1. set up a connection  and run a query which selects one tuple2. update the tuple using updateXXX and updateRow3. rollback the transaction and close the connectionThen  repeat the process  however this time use a different string in the query. This time updateRow() may fail with the error above. The problem has been reproduced on forward only  updatable resultsets.Workaround:It does not seem to fail if Ia  set another cursorname on the statement object b  use the same query string.I will attach the program to reproduce the problem. Below is the output:~:/&lt;3&gt;db-derby-10.1.2.1-bin/lib&gt; java -cp /home/ak136785/devel/derbytesting/derbytest/build/classes/:derby.jar derbytest.CursorIsClosedIssue1 1 19 Tuple 12 2 21 Tuple 2ERROR XCL07: Cursor 'SQLCUR0' is closed. Verify that autocommit is OFF. at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) at org.apache.derby.impl.sql.execute.CurrentOfResultSet.getCursor(Unknown Source) at org.apache.derby.impl.sql.execute.CurrentOfResultSet.openCore(Unknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(Unknown Source) at org.apache.derby.impl.sql.execute.NormalizeResultSet.openCore(Unknown Source) at org.apache.derby.impl.sql.execute.UpdateResultSet.setup(Unknown Source) at org.apache.derby.impl.sql.execute.UpdateResultSet.open(Unknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source) at org.apache.derby.impl.jdbc.EmbedResultSet.updateRow(Unknown Source) at derbytest.CursorIsClosedIssue.runTest(CursorIsClosedIssue.java:80) at derbytest.CursorIsClosedIssue.main(CursorIsClosedIssue.java:103)   