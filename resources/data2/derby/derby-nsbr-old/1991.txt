Misleading stack traces for exceptions raised by the JDBC 4.0 embedded driver    When the embedded driver raises an SQLException  its stack trace alwayssays it is created in SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA().This is not correct.At some point  SQLExceptionFactory40.getSQLException() set the stack traceof the SQLException to the stack trace of the non-SQLException that causedit  if there were one. This was probably done to mimic the behaviour ofEmbedSQLException  which overrides printStackTrace() to achieve thesame. Later  code was added to ferry arguments over DRDA. This code createda dummy exception which the old code interpreted as a non-SQLExceptionwhose stack trace should be used for the main exception. Therefore  allexceptions now have the same stack trace as the dummy exception created inwrapArgsForTransportAcrossDRDA().I think the best solution is not to set the stack trace explicitly  noteven when the SQLException is caused by a non-SQLException.EmbedSQLException overrides printStackTrace() because throwables in Java1.3 didn't have initCause()/getCause()  so it was the only way to preservethe original stack trace. Since the SQLExceptions in JDBC 4.0 haveinitCause()/getCause()  there is no reason why the JDBC4 driver shouldmimic EmbedSQLException's workaround for not having these methods.   