Derby JDBC 4.0 driver returns 3 for JDBC driver major version    For 10.2 the DatabaseMetaData.getJDBCMajorVersion() is returning '3' for the Derby JDBC 4.0 driver. It should return 4. This is easily reproduced by running a simple test to obtain a connection and output the value Database product: Apache DerbyDatabase version: 10.2.0.4 alphaDriver name: Apache Derby Embedded JDBC DriverDriver version: 10.2.0.4 alphaJDBC driver major version: 3JDBC driver minor version: 0Test code:org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40 ds = new org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40();ds.setDatabaseName('C://drivers//derby//databasesJDBC40DB'); ds.setUser('dbuser1'); ds.setPassword('dbpwd1'); PooledConnection pooledConn = ds.getPooledConnection(); Connection conn = pooledConn.getConnection(); System.out.println('Database product: ' + conn.getMetaData().getDatabaseProductName()); System.out.println('Database version: ' + conn.getMetaData().getDatabaseProductVersion()); System.out.println('Driver name: ' + conn.getMetaData().getDriverName()); System.out.println('Driver version: ' + conn.getMetaData().getDriverVersion()); System.out.println('JDBC driver major version: ' + conn.getMetaData().getJDBCMajorVersion()); System.out.println('JDBC driver minor version: ' + conn.getMetaData().getJDBCMinorVersion());Relevant Derby Embedded code in EmbedDatabaseMetaData is: JDBC 3.0 * Retrieves the major JDBC version number for this driver. * @return JDBC version major number */ public int getJDBCMajorVersion() { return 3; }and client code in org.apache.derby.client.am.DatabaseMetaData:public int getJDBCMajorVersion() throws SQLException { checkForClosedConnection(); return 3; }I am not sure if this should be JVM dependent or if it should always return 4 regardless of the JVM version.   