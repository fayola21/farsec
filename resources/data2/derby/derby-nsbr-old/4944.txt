Embedded Derby does not start when derby.jar is dynamically uploaded / added to the classpath    Hi  For our workflow-system  we can use a variety of DBMS as the store engine. Derby is one of them especially popularfor test and development purposes. During setup of our system  we allow to upload a jar file with the JDBC-Driver for the DBMS.In case of derby  we use the embedded mode and upload derby.jar. After that we add the jar to the repositories of our class loaderand call Class drc = Class.forName('org.apache.derby.jdbc.EmbeddedDriver'  true  ourclassloader);Driver drv = (Driver)drc.newInstance();this worked perfectly for many years up to version 10.6.1.0  but ceased to work in 10.6.2.1; i assume the unreleased future versions are affected  toowhen derby.jar is placed in the classpath manually before starting our setup  everything works fine regardless of the derby version.investigations lead to the following conclusion: since rev. 982370 this is broken  in the immediate predecessor rev. 980035 it worked. rev. 982370 in the org.apache.derby.impl.store.raw.data.BaseDataFileFactory class introduced a new method private static String jarClassPath(final Class cls) which tries to find the jarfile from which derby was loaded. it contains the following lines: if ( cs == null ) return null;URL result = cs.getLocation();return result.toString();  but in the case  when we dynamically load derby   cs is not null but cs.getLocation() is null. so i propose to change the line with the if to:...if ( cs == null || cs.getLocation()==null) return null;...or maybe it would be better to surround the whole body of the method with a try catch  since it is not essential  and a null return value is also ok?thank you for your efforts concerning derby at large  Michael   